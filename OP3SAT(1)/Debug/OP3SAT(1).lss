
OP3SAT(1).elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002428  00000000  00000000  00010000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000108  20000000  00002428  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000002d8  20000108  00002530  00020108  2**2
                  ALLOC
  3 .stack        00002000  200003e0  00002808  00020108  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  00020108  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  00020130  2**0
                  CONTENTS, READONLY
  6 .debug_info   00030007  00000000  00000000  00020189  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000542f  00000000  00000000  00050190  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00014fc4  00000000  00000000  000555bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 000014b8  00000000  00000000  0006a583  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00001550  00000000  00000000  0006ba3b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  000170d7  00000000  00000000  0006cf8b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0001954c  00000000  00000000  00084062  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00067f17  00000000  00000000  0009d5ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  000034f0  00000000  00000000  001054c8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	e0 23 00 20 1d 01 00 00 19 01 00 00 19 01 00 00     .#. ............
	...
      2c:	69 1d 00 00 00 00 00 00 00 00 00 00 d1 1d 00 00     i...............
      3c:	15 1e 00 00 19 01 00 00 19 01 00 00 19 01 00 00     ................
      4c:	19 01 00 00 fd 11 00 00 21 13 00 00 19 01 00 00     ........!.......
      5c:	19 01 00 00 19 01 00 00 19 01 00 00 c5 15 00 00     ................
      6c:	19 01 00 00 19 01 00 00 dd 1b 00 00 f1 1b 00 00     ................
      7c:	19 01 00 00 19 01 00 00 19 01 00 00 19 01 00 00     ................
      8c:	19 01 00 00 19 01 00 00 19 01 00 00 19 01 00 00     ................
      9c:	19 01 00 00 19 01 00 00                             ........

000000a4 <__do_global_dtors_aux>:
      a4:	b510      	push	{r4, lr}
      a6:	4c06      	ldr	r4, [pc, #24]	; (c0 <__do_global_dtors_aux+0x1c>)
      a8:	7823      	ldrb	r3, [r4, #0]
      aa:	2b00      	cmp	r3, #0
      ac:	d107      	bne.n	be <__do_global_dtors_aux+0x1a>
      ae:	4b05      	ldr	r3, [pc, #20]	; (c4 <__do_global_dtors_aux+0x20>)
      b0:	2b00      	cmp	r3, #0
      b2:	d002      	beq.n	ba <__do_global_dtors_aux+0x16>
      b4:	4804      	ldr	r0, [pc, #16]	; (c8 <__do_global_dtors_aux+0x24>)
      b6:	e000      	b.n	ba <__do_global_dtors_aux+0x16>
      b8:	bf00      	nop
      ba:	2301      	movs	r3, #1
      bc:	7023      	strb	r3, [r4, #0]
      be:	bd10      	pop	{r4, pc}
      c0:	20000108 	.word	0x20000108
      c4:	00000000 	.word	0x00000000
      c8:	00002428 	.word	0x00002428

000000cc <frame_dummy>:
      cc:	4b08      	ldr	r3, [pc, #32]	; (f0 <frame_dummy+0x24>)
      ce:	b510      	push	{r4, lr}
      d0:	2b00      	cmp	r3, #0
      d2:	d003      	beq.n	dc <frame_dummy+0x10>
      d4:	4907      	ldr	r1, [pc, #28]	; (f4 <frame_dummy+0x28>)
      d6:	4808      	ldr	r0, [pc, #32]	; (f8 <frame_dummy+0x2c>)
      d8:	e000      	b.n	dc <frame_dummy+0x10>
      da:	bf00      	nop
      dc:	4807      	ldr	r0, [pc, #28]	; (fc <frame_dummy+0x30>)
      de:	6803      	ldr	r3, [r0, #0]
      e0:	2b00      	cmp	r3, #0
      e2:	d100      	bne.n	e6 <frame_dummy+0x1a>
      e4:	bd10      	pop	{r4, pc}
      e6:	4b06      	ldr	r3, [pc, #24]	; (100 <frame_dummy+0x34>)
      e8:	2b00      	cmp	r3, #0
      ea:	d0fb      	beq.n	e4 <frame_dummy+0x18>
      ec:	4798      	blx	r3
      ee:	e7f9      	b.n	e4 <frame_dummy+0x18>
      f0:	00000000 	.word	0x00000000
      f4:	2000010c 	.word	0x2000010c
      f8:	00002428 	.word	0x00002428
      fc:	00002428 	.word	0x00002428
     100:	00000000 	.word	0x00000000

00000104 <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
     104:	b510      	push	{r4, lr}
	system_init();
     106:	4b02      	ldr	r3, [pc, #8]	; (110 <atmel_start_init+0xc>)
     108:	4798      	blx	r3

	touch_init();
     10a:	4b02      	ldr	r3, [pc, #8]	; (114 <atmel_start_init+0x10>)
     10c:	4798      	blx	r3
}
     10e:	bd10      	pop	{r4, pc}
     110:	00000509 	.word	0x00000509
     114:	00001c19 	.word	0x00001c19

00000118 <Dummy_Handler>:
     118:	e7fe      	b.n	118 <Dummy_Handler>
	...

0000011c <Reset_Handler>:
     11c:	b510      	push	{r4, lr}
     11e:	4a12      	ldr	r2, [pc, #72]	; (168 <Reset_Handler+0x4c>)
     120:	4b12      	ldr	r3, [pc, #72]	; (16c <Reset_Handler+0x50>)
     122:	429a      	cmp	r2, r3
     124:	d009      	beq.n	13a <Reset_Handler+0x1e>
     126:	4b11      	ldr	r3, [pc, #68]	; (16c <Reset_Handler+0x50>)
     128:	4a0f      	ldr	r2, [pc, #60]	; (168 <Reset_Handler+0x4c>)
     12a:	e003      	b.n	134 <Reset_Handler+0x18>
     12c:	6811      	ldr	r1, [r2, #0]
     12e:	6019      	str	r1, [r3, #0]
     130:	3304      	adds	r3, #4
     132:	3204      	adds	r2, #4
     134:	490e      	ldr	r1, [pc, #56]	; (170 <Reset_Handler+0x54>)
     136:	428b      	cmp	r3, r1
     138:	d3f8      	bcc.n	12c <Reset_Handler+0x10>
     13a:	4b0e      	ldr	r3, [pc, #56]	; (174 <Reset_Handler+0x58>)
     13c:	e002      	b.n	144 <Reset_Handler+0x28>
     13e:	2200      	movs	r2, #0
     140:	601a      	str	r2, [r3, #0]
     142:	3304      	adds	r3, #4
     144:	4a0c      	ldr	r2, [pc, #48]	; (178 <Reset_Handler+0x5c>)
     146:	4293      	cmp	r3, r2
     148:	d3f9      	bcc.n	13e <Reset_Handler+0x22>
     14a:	4a0c      	ldr	r2, [pc, #48]	; (17c <Reset_Handler+0x60>)
     14c:	21ff      	movs	r1, #255	; 0xff
     14e:	4b0c      	ldr	r3, [pc, #48]	; (180 <Reset_Handler+0x64>)
     150:	438b      	bics	r3, r1
     152:	6093      	str	r3, [r2, #8]
     154:	4a0b      	ldr	r2, [pc, #44]	; (184 <Reset_Handler+0x68>)
     156:	6851      	ldr	r1, [r2, #4]
     158:	2380      	movs	r3, #128	; 0x80
     15a:	430b      	orrs	r3, r1
     15c:	6053      	str	r3, [r2, #4]
     15e:	4b0a      	ldr	r3, [pc, #40]	; (188 <Reset_Handler+0x6c>)
     160:	4798      	blx	r3
     162:	4b0a      	ldr	r3, [pc, #40]	; (18c <Reset_Handler+0x70>)
     164:	4798      	blx	r3
     166:	e7fe      	b.n	166 <Reset_Handler+0x4a>
     168:	00002428 	.word	0x00002428
     16c:	20000000 	.word	0x20000000
     170:	20000108 	.word	0x20000108
     174:	20000108 	.word	0x20000108
     178:	200003e0 	.word	0x200003e0
     17c:	e000ed00 	.word	0xe000ed00
     180:	00000000 	.word	0x00000000
     184:	41004000 	.word	0x41004000
     188:	00002141 	.word	0x00002141
     18c:	00001c05 	.word	0x00001c05

00000190 <PTC_0_clock_init>:
     190:	4a04      	ldr	r2, [pc, #16]	; (1a4 <PTC_0_clock_init+0x14>)
     192:	6a11      	ldr	r1, [r2, #32]
     194:	2380      	movs	r3, #128	; 0x80
     196:	031b      	lsls	r3, r3, #12
     198:	430b      	orrs	r3, r1
     19a:	6213      	str	r3, [r2, #32]
     19c:	4a02      	ldr	r2, [pc, #8]	; (1a8 <PTC_0_clock_init+0x18>)
     19e:	4b03      	ldr	r3, [pc, #12]	; (1ac <PTC_0_clock_init+0x1c>)
     1a0:	805a      	strh	r2, [r3, #2]
     1a2:	4770      	bx	lr
     1a4:	40000400 	.word	0x40000400
     1a8:	0000401b 	.word	0x0000401b
     1ac:	40000c00 	.word	0x40000c00

000001b0 <TIMER_0_init>:
     1b0:	b510      	push	{r4, lr}
     1b2:	4a08      	ldr	r2, [pc, #32]	; (1d4 <TIMER_0_init+0x24>)
     1b4:	6a11      	ldr	r1, [r2, #32]
     1b6:	2380      	movs	r3, #128	; 0x80
     1b8:	009b      	lsls	r3, r3, #2
     1ba:	430b      	orrs	r3, r1
     1bc:	6213      	str	r3, [r2, #32]
     1be:	4a06      	ldr	r2, [pc, #24]	; (1d8 <TIMER_0_init+0x28>)
     1c0:	4b06      	ldr	r3, [pc, #24]	; (1dc <TIMER_0_init+0x2c>)
     1c2:	805a      	strh	r2, [r3, #2]
     1c4:	4b06      	ldr	r3, [pc, #24]	; (1e0 <TIMER_0_init+0x30>)
     1c6:	4798      	blx	r3
     1c8:	0002      	movs	r2, r0
     1ca:	4906      	ldr	r1, [pc, #24]	; (1e4 <TIMER_0_init+0x34>)
     1cc:	4806      	ldr	r0, [pc, #24]	; (1e8 <TIMER_0_init+0x38>)
     1ce:	4b07      	ldr	r3, [pc, #28]	; (1ec <TIMER_0_init+0x3c>)
     1d0:	4798      	blx	r3
     1d2:	bd10      	pop	{r4, pc}
     1d4:	40000400 	.word	0x40000400
     1d8:	00004013 	.word	0x00004013
     1dc:	40000c00 	.word	0x40000c00
     1e0:	00001bd5 	.word	0x00001bd5
     1e4:	42002400 	.word	0x42002400
     1e8:	200003c4 	.word	0x200003c4
     1ec:	00000a09 	.word	0x00000a09

000001f0 <ADC_0_CLOCK_init>:
     1f0:	4a04      	ldr	r2, [pc, #16]	; (204 <ADC_0_CLOCK_init+0x14>)
     1f2:	6a11      	ldr	r1, [r2, #32]
     1f4:	2380      	movs	r3, #128	; 0x80
     1f6:	025b      	lsls	r3, r3, #9
     1f8:	430b      	orrs	r3, r1
     1fa:	6213      	str	r3, [r2, #32]
     1fc:	4a02      	ldr	r2, [pc, #8]	; (208 <ADC_0_CLOCK_init+0x18>)
     1fe:	4b03      	ldr	r3, [pc, #12]	; (20c <ADC_0_CLOCK_init+0x1c>)
     200:	805a      	strh	r2, [r3, #2]
     202:	4770      	bx	lr
     204:	40000400 	.word	0x40000400
     208:	00004017 	.word	0x00004017
     20c:	40000c00 	.word	0x40000c00

00000210 <ADC_0_init>:
     210:	b510      	push	{r4, lr}
     212:	4b04      	ldr	r3, [pc, #16]	; (224 <ADC_0_init+0x14>)
     214:	4798      	blx	r3
     216:	2200      	movs	r2, #0
     218:	4903      	ldr	r1, [pc, #12]	; (228 <ADC_0_init+0x18>)
     21a:	4804      	ldr	r0, [pc, #16]	; (22c <ADC_0_init+0x1c>)
     21c:	4b04      	ldr	r3, [pc, #16]	; (230 <ADC_0_init+0x20>)
     21e:	4798      	blx	r3
     220:	bd10      	pop	{r4, pc}
     222:	46c0      	nop			; (mov r8, r8)
     224:	000001f1 	.word	0x000001f1
     228:	42004000 	.word	0x42004000
     22c:	2000039c 	.word	0x2000039c
     230:	000005d1 	.word	0x000005d1

00000234 <EXTERNAL_IRQ_0_init>:
     234:	b510      	push	{r4, lr}
     236:	4a03      	ldr	r2, [pc, #12]	; (244 <EXTERNAL_IRQ_0_init+0x10>)
     238:	4b03      	ldr	r3, [pc, #12]	; (248 <EXTERNAL_IRQ_0_init+0x14>)
     23a:	805a      	strh	r2, [r3, #2]
     23c:	4b03      	ldr	r3, [pc, #12]	; (24c <EXTERNAL_IRQ_0_init+0x18>)
     23e:	4798      	blx	r3
     240:	bd10      	pop	{r4, pc}
     242:	46c0      	nop			; (mov r8, r8)
     244:	00004003 	.word	0x00004003
     248:	40000c00 	.word	0x40000c00
     24c:	000006cd 	.word	0x000006cd

00000250 <FLASH_0_CLOCK_init>:
     250:	4a02      	ldr	r2, [pc, #8]	; (25c <FLASH_0_CLOCK_init+0xc>)
     252:	69d3      	ldr	r3, [r2, #28]
     254:	2104      	movs	r1, #4
     256:	430b      	orrs	r3, r1
     258:	61d3      	str	r3, [r2, #28]
     25a:	4770      	bx	lr
     25c:	40000400 	.word	0x40000400

00000260 <FLASH_0_init>:
     260:	b510      	push	{r4, lr}
     262:	4b03      	ldr	r3, [pc, #12]	; (270 <FLASH_0_init+0x10>)
     264:	4798      	blx	r3
     266:	4903      	ldr	r1, [pc, #12]	; (274 <FLASH_0_init+0x14>)
     268:	4803      	ldr	r0, [pc, #12]	; (278 <FLASH_0_init+0x18>)
     26a:	4b04      	ldr	r3, [pc, #16]	; (27c <FLASH_0_init+0x1c>)
     26c:	4798      	blx	r3
     26e:	bd10      	pop	{r4, pc}
     270:	00000251 	.word	0x00000251
     274:	41004000 	.word	0x41004000
     278:	2000037c 	.word	0x2000037c
     27c:	00000719 	.word	0x00000719

00000280 <SPI_0_PORT_init>:
     280:	b5f0      	push	{r4, r5, r6, r7, lr}
     282:	46ce      	mov	lr, r9
     284:	4647      	mov	r7, r8
     286:	b580      	push	{r7, lr}
     288:	22c0      	movs	r2, #192	; 0xc0
     28a:	05d2      	lsls	r2, r2, #23
     28c:	2401      	movs	r4, #1
     28e:	6154      	str	r4, [r2, #20]
     290:	6094      	str	r4, [r2, #8]
     292:	4b25      	ldr	r3, [pc, #148]	; (328 <SPI_0_PORT_init+0xa8>)
     294:	4925      	ldr	r1, [pc, #148]	; (32c <SPI_0_PORT_init+0xac>)
     296:	6299      	str	r1, [r3, #40]	; 0x28
     298:	27c0      	movs	r7, #192	; 0xc0
     29a:	063f      	lsls	r7, r7, #24
     29c:	629f      	str	r7, [r3, #40]	; 0x28
     29e:	2040      	movs	r0, #64	; 0x40
     2a0:	5c19      	ldrb	r1, [r3, r0]
     2a2:	43a1      	bics	r1, r4
     2a4:	2501      	movs	r5, #1
     2a6:	4329      	orrs	r1, r5
     2a8:	b2c9      	uxtb	r1, r1
     2aa:	5419      	strb	r1, [r3, r0]
     2ac:	2630      	movs	r6, #48	; 0x30
     2ae:	5d99      	ldrb	r1, [r3, r6]
     2b0:	3831      	subs	r0, #49	; 0x31
     2b2:	4681      	mov	r9, r0
     2b4:	4381      	bics	r1, r0
     2b6:	4688      	mov	r8, r1
     2b8:	2103      	movs	r1, #3
     2ba:	468c      	mov	ip, r1
     2bc:	4661      	mov	r1, ip
     2be:	4640      	mov	r0, r8
     2c0:	4308      	orrs	r0, r1
     2c2:	b2c1      	uxtb	r1, r0
     2c4:	5599      	strb	r1, [r3, r6]
     2c6:	2102      	movs	r1, #2
     2c8:	6151      	str	r1, [r2, #20]
     2ca:	6091      	str	r1, [r2, #8]
     2cc:	4918      	ldr	r1, [pc, #96]	; (330 <SPI_0_PORT_init+0xb0>)
     2ce:	6299      	str	r1, [r3, #40]	; 0x28
     2d0:	629f      	str	r7, [r3, #40]	; 0x28
     2d2:	2741      	movs	r7, #65	; 0x41
     2d4:	5dd9      	ldrb	r1, [r3, r7]
     2d6:	43a1      	bics	r1, r4
     2d8:	4329      	orrs	r1, r5
     2da:	b2c9      	uxtb	r1, r1
     2dc:	55d9      	strb	r1, [r3, r7]
     2de:	5d99      	ldrb	r1, [r3, r6]
     2e0:	3f32      	subs	r7, #50	; 0x32
     2e2:	4039      	ands	r1, r7
     2e4:	2730      	movs	r7, #48	; 0x30
     2e6:	4339      	orrs	r1, r7
     2e8:	b2c9      	uxtb	r1, r1
     2ea:	5599      	strb	r1, [r3, r6]
     2ec:	2180      	movs	r1, #128	; 0x80
     2ee:	02c9      	lsls	r1, r1, #11
     2f0:	6051      	str	r1, [r2, #4]
     2f2:	4a10      	ldr	r2, [pc, #64]	; (334 <SPI_0_PORT_init+0xb4>)
     2f4:	629a      	str	r2, [r3, #40]	; 0x28
     2f6:	4a10      	ldr	r2, [pc, #64]	; (338 <SPI_0_PORT_init+0xb8>)
     2f8:	629a      	str	r2, [r3, #40]	; 0x28
     2fa:	2152      	movs	r1, #82	; 0x52
     2fc:	5c5a      	ldrb	r2, [r3, r1]
     2fe:	3e2c      	subs	r6, #44	; 0x2c
     300:	43b2      	bics	r2, r6
     302:	545a      	strb	r2, [r3, r1]
     304:	5c5a      	ldrb	r2, [r3, r1]
     306:	43a2      	bics	r2, r4
     308:	432a      	orrs	r2, r5
     30a:	b2d2      	uxtb	r2, r2
     30c:	545a      	strb	r2, [r3, r1]
     30e:	3919      	subs	r1, #25
     310:	5c5a      	ldrb	r2, [r3, r1]
     312:	4648      	mov	r0, r9
     314:	4382      	bics	r2, r0
     316:	2002      	movs	r0, #2
     318:	4302      	orrs	r2, r0
     31a:	b2d2      	uxtb	r2, r2
     31c:	545a      	strb	r2, [r3, r1]
     31e:	bc0c      	pop	{r2, r3}
     320:	4690      	mov	r8, r2
     322:	4699      	mov	r9, r3
     324:	bdf0      	pop	{r4, r5, r6, r7, pc}
     326:	46c0      	nop			; (mov r8, r8)
     328:	41004400 	.word	0x41004400
     32c:	40000001 	.word	0x40000001
     330:	40000002 	.word	0x40000002
     334:	40020000 	.word	0x40020000
     338:	c0020004 	.word	0xc0020004

0000033c <SPI_0_CLOCK_init>:
     33c:	4a04      	ldr	r2, [pc, #16]	; (350 <SPI_0_CLOCK_init+0x14>)
     33e:	6a13      	ldr	r3, [r2, #32]
     340:	2108      	movs	r1, #8
     342:	430b      	orrs	r3, r1
     344:	6213      	str	r3, [r2, #32]
     346:	4a03      	ldr	r2, [pc, #12]	; (354 <SPI_0_CLOCK_init+0x18>)
     348:	4b03      	ldr	r3, [pc, #12]	; (358 <SPI_0_CLOCK_init+0x1c>)
     34a:	805a      	strh	r2, [r3, #2]
     34c:	4770      	bx	lr
     34e:	46c0      	nop			; (mov r8, r8)
     350:	40000400 	.word	0x40000400
     354:	0000400e 	.word	0x0000400e
     358:	40000c00 	.word	0x40000c00

0000035c <SPI_0_init>:
     35c:	b510      	push	{r4, lr}
     35e:	4b04      	ldr	r3, [pc, #16]	; (370 <SPI_0_init+0x14>)
     360:	4798      	blx	r3
     362:	4904      	ldr	r1, [pc, #16]	; (374 <SPI_0_init+0x18>)
     364:	4804      	ldr	r0, [pc, #16]	; (378 <SPI_0_init+0x1c>)
     366:	4b05      	ldr	r3, [pc, #20]	; (37c <SPI_0_init+0x20>)
     368:	4798      	blx	r3
     36a:	4b05      	ldr	r3, [pc, #20]	; (380 <SPI_0_init+0x24>)
     36c:	4798      	blx	r3
     36e:	bd10      	pop	{r4, pc}
     370:	0000033d 	.word	0x0000033d
     374:	42000c00 	.word	0x42000c00
     378:	200003ac 	.word	0x200003ac
     37c:	00000835 	.word	0x00000835
     380:	00000281 	.word	0x00000281

00000384 <SERIAL_CLOCK_init>:
     384:	4a04      	ldr	r2, [pc, #16]	; (398 <SERIAL_CLOCK_init+0x14>)
     386:	6a13      	ldr	r3, [r2, #32]
     388:	2120      	movs	r1, #32
     38a:	430b      	orrs	r3, r1
     38c:	6213      	str	r3, [r2, #32]
     38e:	4a03      	ldr	r2, [pc, #12]	; (39c <SERIAL_CLOCK_init+0x18>)
     390:	4b03      	ldr	r3, [pc, #12]	; (3a0 <SERIAL_CLOCK_init+0x1c>)
     392:	805a      	strh	r2, [r3, #2]
     394:	4770      	bx	lr
     396:	46c0      	nop			; (mov r8, r8)
     398:	40000400 	.word	0x40000400
     39c:	00004010 	.word	0x00004010
     3a0:	40000c00 	.word	0x40000c00

000003a4 <SERIAL_PORT_init>:
     3a4:	b530      	push	{r4, r5, lr}
     3a6:	4b0f      	ldr	r3, [pc, #60]	; (3e4 <SERIAL_PORT_init+0x40>)
     3a8:	2258      	movs	r2, #88	; 0x58
     3aa:	5c99      	ldrb	r1, [r3, r2]
     3ac:	2501      	movs	r5, #1
     3ae:	43a9      	bics	r1, r5
     3b0:	2401      	movs	r4, #1
     3b2:	4321      	orrs	r1, r4
     3b4:	b2c9      	uxtb	r1, r1
     3b6:	5499      	strb	r1, [r3, r2]
     3b8:	203c      	movs	r0, #60	; 0x3c
     3ba:	5c19      	ldrb	r1, [r3, r0]
     3bc:	3a49      	subs	r2, #73	; 0x49
     3be:	4391      	bics	r1, r2
     3c0:	2202      	movs	r2, #2
     3c2:	4311      	orrs	r1, r2
     3c4:	b2c9      	uxtb	r1, r1
     3c6:	5419      	strb	r1, [r3, r0]
     3c8:	2159      	movs	r1, #89	; 0x59
     3ca:	5c5a      	ldrb	r2, [r3, r1]
     3cc:	43aa      	bics	r2, r5
     3ce:	4322      	orrs	r2, r4
     3d0:	b2d2      	uxtb	r2, r2
     3d2:	545a      	strb	r2, [r3, r1]
     3d4:	5c1a      	ldrb	r2, [r3, r0]
     3d6:	394a      	subs	r1, #74	; 0x4a
     3d8:	400a      	ands	r2, r1
     3da:	2120      	movs	r1, #32
     3dc:	430a      	orrs	r2, r1
     3de:	b2d2      	uxtb	r2, r2
     3e0:	541a      	strb	r2, [r3, r0]
     3e2:	bd30      	pop	{r4, r5, pc}
     3e4:	41004400 	.word	0x41004400

000003e8 <SERIAL_init>:
     3e8:	b510      	push	{r4, lr}
     3ea:	b082      	sub	sp, #8
     3ec:	4b06      	ldr	r3, [pc, #24]	; (408 <SERIAL_init+0x20>)
     3ee:	4798      	blx	r3
     3f0:	2300      	movs	r3, #0
     3f2:	9300      	str	r3, [sp, #0]
     3f4:	3310      	adds	r3, #16
     3f6:	4a05      	ldr	r2, [pc, #20]	; (40c <SERIAL_init+0x24>)
     3f8:	4905      	ldr	r1, [pc, #20]	; (410 <SERIAL_init+0x28>)
     3fa:	4806      	ldr	r0, [pc, #24]	; (414 <SERIAL_init+0x2c>)
     3fc:	4c06      	ldr	r4, [pc, #24]	; (418 <SERIAL_init+0x30>)
     3fe:	47a0      	blx	r4
     400:	4b06      	ldr	r3, [pc, #24]	; (41c <SERIAL_init+0x34>)
     402:	4798      	blx	r3
     404:	b002      	add	sp, #8
     406:	bd10      	pop	{r4, pc}
     408:	00000385 	.word	0x00000385
     40c:	20000124 	.word	0x20000124
     410:	42001400 	.word	0x42001400
     414:	20000310 	.word	0x20000310
     418:	00000bb9 	.word	0x00000bb9
     41c:	000003a5 	.word	0x000003a5

00000420 <delay_driver_init>:
     420:	b510      	push	{r4, lr}
     422:	4802      	ldr	r0, [pc, #8]	; (42c <delay_driver_init+0xc>)
     424:	4b02      	ldr	r3, [pc, #8]	; (430 <delay_driver_init+0x10>)
     426:	4798      	blx	r3
     428:	bd10      	pop	{r4, pc}
     42a:	46c0      	nop			; (mov r8, r8)
     42c:	e000e010 	.word	0xe000e010
     430:	00000675 	.word	0x00000675

00000434 <PWM_0_CLOCK_init>:
     434:	4a04      	ldr	r2, [pc, #16]	; (448 <PWM_0_CLOCK_init+0x14>)
     436:	6a11      	ldr	r1, [r2, #32]
     438:	2380      	movs	r3, #128	; 0x80
     43a:	005b      	lsls	r3, r3, #1
     43c:	430b      	orrs	r3, r1
     43e:	6213      	str	r3, [r2, #32]
     440:	4a02      	ldr	r2, [pc, #8]	; (44c <PWM_0_CLOCK_init+0x18>)
     442:	4b03      	ldr	r3, [pc, #12]	; (450 <PWM_0_CLOCK_init+0x1c>)
     444:	805a      	strh	r2, [r3, #2]
     446:	4770      	bx	lr
     448:	40000400 	.word	0x40000400
     44c:	00004013 	.word	0x00004013
     450:	40000c00 	.word	0x40000c00

00000454 <PWM_0_init>:
     454:	b510      	push	{r4, lr}
     456:	4b05      	ldr	r3, [pc, #20]	; (46c <PWM_0_init+0x18>)
     458:	4798      	blx	r3
     45a:	4b05      	ldr	r3, [pc, #20]	; (470 <PWM_0_init+0x1c>)
     45c:	4798      	blx	r3
     45e:	0002      	movs	r2, r0
     460:	4904      	ldr	r1, [pc, #16]	; (474 <PWM_0_init+0x20>)
     462:	4805      	ldr	r0, [pc, #20]	; (478 <PWM_0_init+0x24>)
     464:	4b05      	ldr	r3, [pc, #20]	; (47c <PWM_0_init+0x28>)
     466:	4798      	blx	r3
     468:	bd10      	pop	{r4, pc}
     46a:	46c0      	nop			; (mov r8, r8)
     46c:	00000435 	.word	0x00000435
     470:	00001bd9 	.word	0x00001bd9
     474:	42002000 	.word	0x42002000
     478:	20000360 	.word	0x20000360
     47c:	000007ed 	.word	0x000007ed

00000480 <AC_0_CLOCK_init>:
     480:	4a05      	ldr	r2, [pc, #20]	; (498 <AC_0_CLOCK_init+0x18>)
     482:	6a11      	ldr	r1, [r2, #32]
     484:	2380      	movs	r3, #128	; 0x80
     486:	029b      	lsls	r3, r3, #10
     488:	430b      	orrs	r3, r1
     48a:	6213      	str	r3, [r2, #32]
     48c:	4b03      	ldr	r3, [pc, #12]	; (49c <AC_0_CLOCK_init+0x1c>)
     48e:	4a04      	ldr	r2, [pc, #16]	; (4a0 <AC_0_CLOCK_init+0x20>)
     490:	805a      	strh	r2, [r3, #2]
     492:	4a04      	ldr	r2, [pc, #16]	; (4a4 <AC_0_CLOCK_init+0x24>)
     494:	805a      	strh	r2, [r3, #2]
     496:	4770      	bx	lr
     498:	40000400 	.word	0x40000400
     49c:	40000c00 	.word	0x40000c00
     4a0:	00004018 	.word	0x00004018
     4a4:	00004019 	.word	0x00004019

000004a8 <AC_0_init>:
     4a8:	b510      	push	{r4, lr}
     4aa:	4b03      	ldr	r3, [pc, #12]	; (4b8 <AC_0_init+0x10>)
     4ac:	4798      	blx	r3
     4ae:	4903      	ldr	r1, [pc, #12]	; (4bc <AC_0_init+0x14>)
     4b0:	4803      	ldr	r0, [pc, #12]	; (4c0 <AC_0_init+0x18>)
     4b2:	4b04      	ldr	r3, [pc, #16]	; (4c4 <AC_0_init+0x1c>)
     4b4:	4798      	blx	r3
     4b6:	bd10      	pop	{r4, pc}
     4b8:	00000481 	.word	0x00000481
     4bc:	42004400 	.word	0x42004400
     4c0:	20000398 	.word	0x20000398
     4c4:	00000599 	.word	0x00000599

000004c8 <DAC_0_CLOCK_init>:
     4c8:	4a04      	ldr	r2, [pc, #16]	; (4dc <DAC_0_CLOCK_init+0x14>)
     4ca:	6a11      	ldr	r1, [r2, #32]
     4cc:	2380      	movs	r3, #128	; 0x80
     4ce:	02db      	lsls	r3, r3, #11
     4d0:	430b      	orrs	r3, r1
     4d2:	6213      	str	r3, [r2, #32]
     4d4:	4a02      	ldr	r2, [pc, #8]	; (4e0 <DAC_0_CLOCK_init+0x18>)
     4d6:	4b03      	ldr	r3, [pc, #12]	; (4e4 <DAC_0_CLOCK_init+0x1c>)
     4d8:	805a      	strh	r2, [r3, #2]
     4da:	4770      	bx	lr
     4dc:	40000400 	.word	0x40000400
     4e0:	0000401a 	.word	0x0000401a
     4e4:	40000c00 	.word	0x40000c00

000004e8 <DAC_0_init>:
     4e8:	b510      	push	{r4, lr}
     4ea:	4b03      	ldr	r3, [pc, #12]	; (4f8 <DAC_0_init+0x10>)
     4ec:	4798      	blx	r3
     4ee:	4903      	ldr	r1, [pc, #12]	; (4fc <DAC_0_init+0x14>)
     4f0:	4803      	ldr	r0, [pc, #12]	; (500 <DAC_0_init+0x18>)
     4f2:	4b04      	ldr	r3, [pc, #16]	; (504 <DAC_0_init+0x1c>)
     4f4:	4798      	blx	r3
     4f6:	bd10      	pop	{r4, pc}
     4f8:	000004c9 	.word	0x000004c9
     4fc:	42004800 	.word	0x42004800
     500:	200003a0 	.word	0x200003a0
     504:	00000625 	.word	0x00000625

00000508 <system_init>:
     508:	b510      	push	{r4, lr}
     50a:	4b15      	ldr	r3, [pc, #84]	; (560 <system_init+0x58>)
     50c:	4798      	blx	r3
     50e:	22c0      	movs	r2, #192	; 0xc0
     510:	05d2      	lsls	r2, r2, #23
     512:	2180      	movs	r1, #128	; 0x80
     514:	01c9      	lsls	r1, r1, #7
     516:	6151      	str	r1, [r2, #20]
     518:	6091      	str	r1, [r2, #8]
     51a:	4b12      	ldr	r3, [pc, #72]	; (564 <system_init+0x5c>)
     51c:	4812      	ldr	r0, [pc, #72]	; (568 <system_init+0x60>)
     51e:	6298      	str	r0, [r3, #40]	; 0x28
     520:	20c0      	movs	r0, #192	; 0xc0
     522:	0600      	lsls	r0, r0, #24
     524:	6298      	str	r0, [r3, #40]	; 0x28
     526:	6151      	str	r1, [r2, #20]
     528:	214e      	movs	r1, #78	; 0x4e
     52a:	5c5a      	ldrb	r2, [r3, r1]
     52c:	2001      	movs	r0, #1
     52e:	4382      	bics	r2, r0
     530:	545a      	strb	r2, [r3, r1]
     532:	4b0e      	ldr	r3, [pc, #56]	; (56c <system_init+0x64>)
     534:	4798      	blx	r3
     536:	4b0e      	ldr	r3, [pc, #56]	; (570 <system_init+0x68>)
     538:	4798      	blx	r3
     53a:	4b0e      	ldr	r3, [pc, #56]	; (574 <system_init+0x6c>)
     53c:	4798      	blx	r3
     53e:	4b0e      	ldr	r3, [pc, #56]	; (578 <system_init+0x70>)
     540:	4798      	blx	r3
     542:	4b0e      	ldr	r3, [pc, #56]	; (57c <system_init+0x74>)
     544:	4798      	blx	r3
     546:	4b0e      	ldr	r3, [pc, #56]	; (580 <system_init+0x78>)
     548:	4798      	blx	r3
     54a:	4b0e      	ldr	r3, [pc, #56]	; (584 <system_init+0x7c>)
     54c:	4798      	blx	r3
     54e:	4b0e      	ldr	r3, [pc, #56]	; (588 <system_init+0x80>)
     550:	4798      	blx	r3
     552:	4b0e      	ldr	r3, [pc, #56]	; (58c <system_init+0x84>)
     554:	4798      	blx	r3
     556:	4b0e      	ldr	r3, [pc, #56]	; (590 <system_init+0x88>)
     558:	4798      	blx	r3
     55a:	4b0e      	ldr	r3, [pc, #56]	; (594 <system_init+0x8c>)
     55c:	4798      	blx	r3
     55e:	bd10      	pop	{r4, pc}
     560:	000010cd 	.word	0x000010cd
     564:	41004400 	.word	0x41004400
     568:	40004000 	.word	0x40004000
     56c:	00000211 	.word	0x00000211
     570:	00000235 	.word	0x00000235
     574:	00000261 	.word	0x00000261
     578:	0000035d 	.word	0x0000035d
     57c:	000003e9 	.word	0x000003e9
     580:	00000421 	.word	0x00000421
     584:	00000455 	.word	0x00000455
     588:	000001b1 	.word	0x000001b1
     58c:	000004a9 	.word	0x000004a9
     590:	000004e9 	.word	0x000004e9
     594:	00000191 	.word	0x00000191

00000598 <ac_sync_init>:
     598:	b570      	push	{r4, r5, r6, lr}
     59a:	0004      	movs	r4, r0
     59c:	000d      	movs	r5, r1
     59e:	2800      	cmp	r0, #0
     5a0:	d00d      	beq.n	5be <ac_sync_init+0x26>
     5a2:	2900      	cmp	r1, #0
     5a4:	d009      	beq.n	5ba <ac_sync_init+0x22>
     5a6:	2001      	movs	r0, #1
     5a8:	2231      	movs	r2, #49	; 0x31
     5aa:	4906      	ldr	r1, [pc, #24]	; (5c4 <ac_sync_init+0x2c>)
     5ac:	4b06      	ldr	r3, [pc, #24]	; (5c8 <ac_sync_init+0x30>)
     5ae:	4798      	blx	r3
     5b0:	0029      	movs	r1, r5
     5b2:	0020      	movs	r0, r4
     5b4:	4b05      	ldr	r3, [pc, #20]	; (5cc <ac_sync_init+0x34>)
     5b6:	4798      	blx	r3
     5b8:	bd70      	pop	{r4, r5, r6, pc}
     5ba:	2000      	movs	r0, #0
     5bc:	e7f4      	b.n	5a8 <ac_sync_init+0x10>
     5be:	2000      	movs	r0, #0
     5c0:	e7f2      	b.n	5a8 <ac_sync_init+0x10>
     5c2:	46c0      	nop			; (mov r8, r8)
     5c4:	000021ac 	.word	0x000021ac
     5c8:	00000cf9 	.word	0x00000cf9
     5cc:	00000f1d 	.word	0x00000f1d

000005d0 <adc_sync_init>:
     5d0:	b570      	push	{r4, r5, r6, lr}
     5d2:	0004      	movs	r4, r0
     5d4:	000d      	movs	r5, r1
     5d6:	2800      	cmp	r0, #0
     5d8:	d00d      	beq.n	5f6 <adc_sync_init+0x26>
     5da:	2900      	cmp	r1, #0
     5dc:	d009      	beq.n	5f2 <adc_sync_init+0x22>
     5de:	2001      	movs	r0, #1
     5e0:	2239      	movs	r2, #57	; 0x39
     5e2:	4906      	ldr	r1, [pc, #24]	; (5fc <adc_sync_init+0x2c>)
     5e4:	4b06      	ldr	r3, [pc, #24]	; (600 <adc_sync_init+0x30>)
     5e6:	4798      	blx	r3
     5e8:	0029      	movs	r1, r5
     5ea:	0020      	movs	r0, r4
     5ec:	4b05      	ldr	r3, [pc, #20]	; (604 <adc_sync_init+0x34>)
     5ee:	4798      	blx	r3
     5f0:	bd70      	pop	{r4, r5, r6, pc}
     5f2:	2000      	movs	r0, #0
     5f4:	e7f4      	b.n	5e0 <adc_sync_init+0x10>
     5f6:	2000      	movs	r0, #0
     5f8:	e7f2      	b.n	5e0 <adc_sync_init+0x10>
     5fa:	46c0      	nop			; (mov r8, r8)
     5fc:	000021c8 	.word	0x000021c8
     600:	00000cf9 	.word	0x00000cf9
     604:	00001095 	.word	0x00001095

00000608 <atomic_enter_critical>:
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
     608:	f3ef 8310 	mrs	r3, PRIMASK
     60c:	6003      	str	r3, [r0, #0]
  __ASM volatile ("cpsid i" : : : "memory");
     60e:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
     610:	f3bf 8f5f 	dmb	sy
     614:	4770      	bx	lr

00000616 <atomic_leave_critical>:
     616:	f3bf 8f5f 	dmb	sy
     61a:	6803      	ldr	r3, [r0, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
     61c:	f383 8810 	msr	PRIMASK, r3
     620:	4770      	bx	lr
	...

00000624 <dac_sync_init>:
     624:	b570      	push	{r4, r5, r6, lr}
     626:	0004      	movs	r4, r0
     628:	000d      	movs	r5, r1
     62a:	2800      	cmp	r0, #0
     62c:	d010      	beq.n	650 <dac_sync_init+0x2c>
     62e:	2900      	cmp	r1, #0
     630:	d00c      	beq.n	64c <dac_sync_init+0x28>
     632:	2001      	movs	r0, #1
     634:	2232      	movs	r2, #50	; 0x32
     636:	490c      	ldr	r1, [pc, #48]	; (668 <dac_sync_init+0x44>)
     638:	4b0c      	ldr	r3, [pc, #48]	; (66c <dac_sync_init+0x48>)
     63a:	4798      	blx	r3
     63c:	0029      	movs	r1, r5
     63e:	0020      	movs	r0, r4
     640:	4b0b      	ldr	r3, [pc, #44]	; (670 <dac_sync_init+0x4c>)
     642:	4798      	blx	r3
     644:	2800      	cmp	r0, #0
     646:	d10e      	bne.n	666 <dac_sync_init+0x42>
     648:	2300      	movs	r3, #0
     64a:	e00a      	b.n	662 <dac_sync_init+0x3e>
     64c:	2000      	movs	r0, #0
     64e:	e7f1      	b.n	634 <dac_sync_init+0x10>
     650:	2000      	movs	r0, #0
     652:	e7ef      	b.n	634 <dac_sync_init+0x10>
     654:	00da      	lsls	r2, r3, #3
     656:	18a2      	adds	r2, r4, r2
     658:	2100      	movs	r1, #0
     65a:	6051      	str	r1, [r2, #4]
     65c:	6091      	str	r1, [r2, #8]
     65e:	3301      	adds	r3, #1
     660:	b2db      	uxtb	r3, r3
     662:	2b00      	cmp	r3, #0
     664:	d0f6      	beq.n	654 <dac_sync_init+0x30>
     666:	bd70      	pop	{r4, r5, r6, pc}
     668:	000021e4 	.word	0x000021e4
     66c:	00000cf9 	.word	0x00000cf9
     670:	00001141 	.word	0x00001141

00000674 <delay_init>:
     674:	b510      	push	{r4, lr}
     676:	4b02      	ldr	r3, [pc, #8]	; (680 <delay_init+0xc>)
     678:	6018      	str	r0, [r3, #0]
     67a:	4b02      	ldr	r3, [pc, #8]	; (684 <delay_init+0x10>)
     67c:	4798      	blx	r3
     67e:	bd10      	pop	{r4, pc}
     680:	20000134 	.word	0x20000134
     684:	000018ed 	.word	0x000018ed

00000688 <process_ext_irq>:
     688:	b570      	push	{r4, r5, r6, lr}
     68a:	2501      	movs	r5, #1
     68c:	2400      	movs	r4, #0
     68e:	e007      	b.n	6a0 <process_ext_irq+0x18>
     690:	4a0d      	ldr	r2, [pc, #52]	; (6c8 <process_ext_irq+0x40>)
     692:	58b3      	ldr	r3, [r6, r2]
     694:	2b00      	cmp	r3, #0
     696:	d000      	beq.n	69a <process_ext_irq+0x12>
     698:	4798      	blx	r3
     69a:	bd70      	pop	{r4, r5, r6, pc}
     69c:	3a01      	subs	r2, #1
     69e:	b2d5      	uxtb	r5, r2
     6a0:	42ac      	cmp	r4, r5
     6a2:	d8fa      	bhi.n	69a <process_ext_irq+0x12>
     6a4:	192b      	adds	r3, r5, r4
     6a6:	105b      	asrs	r3, r3, #1
     6a8:	b2da      	uxtb	r2, r3
     6aa:	2a00      	cmp	r2, #0
     6ac:	d1f5      	bne.n	69a <process_ext_irq+0x12>
     6ae:	21ff      	movs	r1, #255	; 0xff
     6b0:	400b      	ands	r3, r1
     6b2:	00de      	lsls	r6, r3, #3
     6b4:	4904      	ldr	r1, [pc, #16]	; (6c8 <process_ext_irq+0x40>)
     6b6:	1989      	adds	r1, r1, r6
     6b8:	6849      	ldr	r1, [r1, #4]
     6ba:	4281      	cmp	r1, r0
     6bc:	d0e8      	beq.n	690 <process_ext_irq+0x8>
     6be:	d2ed      	bcs.n	69c <process_ext_irq+0x14>
     6c0:	3201      	adds	r2, #1
     6c2:	b2d4      	uxtb	r4, r2
     6c4:	e7ec      	b.n	6a0 <process_ext_irq+0x18>
     6c6:	46c0      	nop			; (mov r8, r8)
     6c8:	20000138 	.word	0x20000138

000006cc <ext_irq_init>:
     6cc:	b510      	push	{r4, lr}
     6ce:	2300      	movs	r3, #0
     6d0:	2b00      	cmp	r3, #0
     6d2:	d003      	beq.n	6dc <ext_irq_init+0x10>
     6d4:	4807      	ldr	r0, [pc, #28]	; (6f4 <ext_irq_init+0x28>)
     6d6:	4b08      	ldr	r3, [pc, #32]	; (6f8 <ext_irq_init+0x2c>)
     6d8:	4798      	blx	r3
     6da:	bd10      	pop	{r4, pc}
     6dc:	4a07      	ldr	r2, [pc, #28]	; (6fc <ext_irq_init+0x30>)
     6de:	00d9      	lsls	r1, r3, #3
     6e0:	1850      	adds	r0, r2, r1
     6e2:	2401      	movs	r4, #1
     6e4:	4264      	negs	r4, r4
     6e6:	6044      	str	r4, [r0, #4]
     6e8:	2000      	movs	r0, #0
     6ea:	5088      	str	r0, [r1, r2]
     6ec:	3301      	adds	r3, #1
     6ee:	b29b      	uxth	r3, r3
     6f0:	e7ee      	b.n	6d0 <ext_irq_init+0x4>
     6f2:	46c0      	nop			; (mov r8, r8)
     6f4:	00000689 	.word	0x00000689
     6f8:	0000116d 	.word	0x0000116d
     6fc:	20000138 	.word	0x20000138

00000700 <flash_ready>:
     700:	b510      	push	{r4, lr}
     702:	6943      	ldr	r3, [r0, #20]
     704:	2b00      	cmp	r3, #0
     706:	d000      	beq.n	70a <flash_ready+0xa>
     708:	4798      	blx	r3
     70a:	bd10      	pop	{r4, pc}

0000070c <flash_error>:
     70c:	b510      	push	{r4, lr}
     70e:	6983      	ldr	r3, [r0, #24]
     710:	2b00      	cmp	r3, #0
     712:	d000      	beq.n	716 <flash_error+0xa>
     714:	4798      	blx	r3
     716:	bd10      	pop	{r4, pc}

00000718 <flash_init>:
     718:	b570      	push	{r4, r5, r6, lr}
     71a:	0004      	movs	r4, r0
     71c:	000d      	movs	r5, r1
     71e:	2800      	cmp	r0, #0
     720:	d013      	beq.n	74a <flash_init+0x32>
     722:	2900      	cmp	r1, #0
     724:	d00f      	beq.n	746 <flash_init+0x2e>
     726:	2001      	movs	r0, #1
     728:	2238      	movs	r2, #56	; 0x38
     72a:	4909      	ldr	r1, [pc, #36]	; (750 <flash_init+0x38>)
     72c:	4b09      	ldr	r3, [pc, #36]	; (754 <flash_init+0x3c>)
     72e:	4798      	blx	r3
     730:	0029      	movs	r1, r5
     732:	0020      	movs	r0, r4
     734:	4b08      	ldr	r3, [pc, #32]	; (758 <flash_init+0x40>)
     736:	4798      	blx	r3
     738:	2800      	cmp	r0, #0
     73a:	d103      	bne.n	744 <flash_init+0x2c>
     73c:	4b07      	ldr	r3, [pc, #28]	; (75c <flash_init+0x44>)
     73e:	6023      	str	r3, [r4, #0]
     740:	4b07      	ldr	r3, [pc, #28]	; (760 <flash_init+0x48>)
     742:	6063      	str	r3, [r4, #4]
     744:	bd70      	pop	{r4, r5, r6, pc}
     746:	2000      	movs	r0, #0
     748:	e7ee      	b.n	728 <flash_init+0x10>
     74a:	2000      	movs	r0, #0
     74c:	e7ec      	b.n	728 <flash_init+0x10>
     74e:	46c0      	nop			; (mov r8, r8)
     750:	00002200 	.word	0x00002200
     754:	00000cf9 	.word	0x00000cf9
     758:	000012c1 	.word	0x000012c1
     75c:	00000701 	.word	0x00000701
     760:	0000070d 	.word	0x0000070d

00000764 <io_write>:
     764:	b570      	push	{r4, r5, r6, lr}
     766:	0004      	movs	r4, r0
     768:	000d      	movs	r5, r1
     76a:	0016      	movs	r6, r2
     76c:	2800      	cmp	r0, #0
     76e:	d00e      	beq.n	78e <io_write+0x2a>
     770:	2900      	cmp	r1, #0
     772:	d00a      	beq.n	78a <io_write+0x26>
     774:	2001      	movs	r0, #1
     776:	2234      	movs	r2, #52	; 0x34
     778:	4906      	ldr	r1, [pc, #24]	; (794 <io_write+0x30>)
     77a:	4b07      	ldr	r3, [pc, #28]	; (798 <io_write+0x34>)
     77c:	4798      	blx	r3
     77e:	6823      	ldr	r3, [r4, #0]
     780:	0032      	movs	r2, r6
     782:	0029      	movs	r1, r5
     784:	0020      	movs	r0, r4
     786:	4798      	blx	r3
     788:	bd70      	pop	{r4, r5, r6, pc}
     78a:	2000      	movs	r0, #0
     78c:	e7f3      	b.n	776 <io_write+0x12>
     78e:	2000      	movs	r0, #0
     790:	e7f1      	b.n	776 <io_write+0x12>
     792:	46c0      	nop			; (mov r8, r8)
     794:	00002218 	.word	0x00002218
     798:	00000cf9 	.word	0x00000cf9

0000079c <io_read>:
     79c:	b570      	push	{r4, r5, r6, lr}
     79e:	0004      	movs	r4, r0
     7a0:	000d      	movs	r5, r1
     7a2:	0016      	movs	r6, r2
     7a4:	2800      	cmp	r0, #0
     7a6:	d00e      	beq.n	7c6 <io_read+0x2a>
     7a8:	2900      	cmp	r1, #0
     7aa:	d00a      	beq.n	7c2 <io_read+0x26>
     7ac:	2001      	movs	r0, #1
     7ae:	223d      	movs	r2, #61	; 0x3d
     7b0:	4906      	ldr	r1, [pc, #24]	; (7cc <io_read+0x30>)
     7b2:	4b07      	ldr	r3, [pc, #28]	; (7d0 <io_read+0x34>)
     7b4:	4798      	blx	r3
     7b6:	6863      	ldr	r3, [r4, #4]
     7b8:	0032      	movs	r2, r6
     7ba:	0029      	movs	r1, r5
     7bc:	0020      	movs	r0, r4
     7be:	4798      	blx	r3
     7c0:	bd70      	pop	{r4, r5, r6, pc}
     7c2:	2000      	movs	r0, #0
     7c4:	e7f3      	b.n	7ae <io_read+0x12>
     7c6:	2000      	movs	r0, #0
     7c8:	e7f1      	b.n	7ae <io_read+0x12>
     7ca:	46c0      	nop			; (mov r8, r8)
     7cc:	00002218 	.word	0x00002218
     7d0:	00000cf9 	.word	0x00000cf9

000007d4 <pwm_period_expired>:
     7d4:	b510      	push	{r4, lr}
     7d6:	6943      	ldr	r3, [r0, #20]
     7d8:	2b00      	cmp	r3, #0
     7da:	d000      	beq.n	7de <pwm_period_expired+0xa>
     7dc:	4798      	blx	r3
     7de:	bd10      	pop	{r4, pc}

000007e0 <pwm_detect_fault>:
     7e0:	b510      	push	{r4, lr}
     7e2:	6983      	ldr	r3, [r0, #24]
     7e4:	2b00      	cmp	r3, #0
     7e6:	d000      	beq.n	7ea <pwm_detect_fault+0xa>
     7e8:	4798      	blx	r3
     7ea:	bd10      	pop	{r4, pc}

000007ec <pwm_init>:
     7ec:	b570      	push	{r4, r5, r6, lr}
     7ee:	0004      	movs	r4, r0
     7f0:	000d      	movs	r5, r1
     7f2:	2800      	cmp	r0, #0
     7f4:	d012      	beq.n	81c <pwm_init+0x30>
     7f6:	2900      	cmp	r1, #0
     7f8:	d00e      	beq.n	818 <pwm_init+0x2c>
     7fa:	2001      	movs	r0, #1
     7fc:	2233      	movs	r2, #51	; 0x33
     7fe:	4908      	ldr	r1, [pc, #32]	; (820 <pwm_init+0x34>)
     800:	4b08      	ldr	r3, [pc, #32]	; (824 <pwm_init+0x38>)
     802:	4798      	blx	r3
     804:	0029      	movs	r1, r5
     806:	0020      	movs	r0, r4
     808:	4b07      	ldr	r3, [pc, #28]	; (828 <pwm_init+0x3c>)
     80a:	4798      	blx	r3
     80c:	4b07      	ldr	r3, [pc, #28]	; (82c <pwm_init+0x40>)
     80e:	6023      	str	r3, [r4, #0]
     810:	4b07      	ldr	r3, [pc, #28]	; (830 <pwm_init+0x44>)
     812:	6063      	str	r3, [r4, #4]
     814:	2000      	movs	r0, #0
     816:	bd70      	pop	{r4, r5, r6, pc}
     818:	2000      	movs	r0, #0
     81a:	e7ef      	b.n	7fc <pwm_init+0x10>
     81c:	2000      	movs	r0, #0
     81e:	e7ed      	b.n	7fc <pwm_init+0x10>
     820:	0000222c 	.word	0x0000222c
     824:	00000cf9 	.word	0x00000cf9
     828:	00001ae1 	.word	0x00001ae1
     82c:	000007d5 	.word	0x000007d5
     830:	000007e1 	.word	0x000007e1

00000834 <spi_m_sync_init>:
     834:	b570      	push	{r4, r5, r6, lr}
     836:	0004      	movs	r4, r0
     838:	000d      	movs	r5, r1
     83a:	2800      	cmp	r0, #0
     83c:	d017      	beq.n	86e <spi_m_sync_init+0x3a>
     83e:	2900      	cmp	r1, #0
     840:	d013      	beq.n	86a <spi_m_sync_init+0x36>
     842:	2001      	movs	r0, #1
     844:	2240      	movs	r2, #64	; 0x40
     846:	490b      	ldr	r1, [pc, #44]	; (874 <spi_m_sync_init+0x40>)
     848:	4b0b      	ldr	r3, [pc, #44]	; (878 <spi_m_sync_init+0x44>)
     84a:	4798      	blx	r3
     84c:	6065      	str	r5, [r4, #4]
     84e:	1d20      	adds	r0, r4, #4
     850:	0029      	movs	r1, r5
     852:	4b0a      	ldr	r3, [pc, #40]	; (87c <spi_m_sync_init+0x48>)
     854:	4798      	blx	r3
     856:	2800      	cmp	r0, #0
     858:	db06      	blt.n	868 <spi_m_sync_init+0x34>
     85a:	4b09      	ldr	r3, [pc, #36]	; (880 <spi_m_sync_init+0x4c>)
     85c:	82a3      	strh	r3, [r4, #20]
     85e:	4b09      	ldr	r3, [pc, #36]	; (884 <spi_m_sync_init+0x50>)
     860:	6123      	str	r3, [r4, #16]
     862:	4b09      	ldr	r3, [pc, #36]	; (888 <spi_m_sync_init+0x54>)
     864:	60e3      	str	r3, [r4, #12]
     866:	2000      	movs	r0, #0
     868:	bd70      	pop	{r4, r5, r6, pc}
     86a:	2000      	movs	r0, #0
     86c:	e7ea      	b.n	844 <spi_m_sync_init+0x10>
     86e:	2000      	movs	r0, #0
     870:	e7e8      	b.n	844 <spi_m_sync_init+0x10>
     872:	46c0      	nop			; (mov r8, r8)
     874:	00002244 	.word	0x00002244
     878:	00000cf9 	.word	0x00000cf9
     87c:	000015d9 	.word	0x000015d9
     880:	ffff8000 	.word	0xffff8000
     884:	00000911 	.word	0x00000911
     888:	000008d5 	.word	0x000008d5

0000088c <spi_m_sync_transfer>:
     88c:	b530      	push	{r4, r5, lr}
     88e:	b087      	sub	sp, #28
     890:	0004      	movs	r4, r0
     892:	000d      	movs	r5, r1
     894:	2800      	cmp	r0, #0
     896:	d015      	beq.n	8c4 <spi_m_sync_transfer+0x38>
     898:	2900      	cmp	r1, #0
     89a:	d011      	beq.n	8c0 <spi_m_sync_transfer+0x34>
     89c:	2001      	movs	r0, #1
     89e:	22b3      	movs	r2, #179	; 0xb3
     8a0:	4909      	ldr	r1, [pc, #36]	; (8c8 <spi_m_sync_transfer+0x3c>)
     8a2:	4b0a      	ldr	r3, [pc, #40]	; (8cc <spi_m_sync_transfer+0x40>)
     8a4:	4798      	blx	r3
     8a6:	682b      	ldr	r3, [r5, #0]
     8a8:	9303      	str	r3, [sp, #12]
     8aa:	686b      	ldr	r3, [r5, #4]
     8ac:	9304      	str	r3, [sp, #16]
     8ae:	68ab      	ldr	r3, [r5, #8]
     8b0:	9301      	str	r3, [sp, #4]
     8b2:	9305      	str	r3, [sp, #20]
     8b4:	1d20      	adds	r0, r4, #4
     8b6:	a903      	add	r1, sp, #12
     8b8:	4b05      	ldr	r3, [pc, #20]	; (8d0 <spi_m_sync_transfer+0x44>)
     8ba:	4798      	blx	r3
     8bc:	b007      	add	sp, #28
     8be:	bd30      	pop	{r4, r5, pc}
     8c0:	2000      	movs	r0, #0
     8c2:	e7ec      	b.n	89e <spi_m_sync_transfer+0x12>
     8c4:	2000      	movs	r0, #0
     8c6:	e7ea      	b.n	89e <spi_m_sync_transfer+0x12>
     8c8:	00002244 	.word	0x00002244
     8cc:	00000cf9 	.word	0x00000cf9
     8d0:	00001795 	.word	0x00001795

000008d4 <_spi_m_sync_io_write>:
     8d4:	b570      	push	{r4, r5, r6, lr}
     8d6:	b084      	sub	sp, #16
     8d8:	0004      	movs	r4, r0
     8da:	000e      	movs	r6, r1
     8dc:	0015      	movs	r5, r2
     8de:	1e43      	subs	r3, r0, #1
     8e0:	4198      	sbcs	r0, r3
     8e2:	b2c0      	uxtb	r0, r0
     8e4:	22a3      	movs	r2, #163	; 0xa3
     8e6:	4907      	ldr	r1, [pc, #28]	; (904 <_spi_m_sync_io_write+0x30>)
     8e8:	4b07      	ldr	r3, [pc, #28]	; (908 <_spi_m_sync_io_write+0x34>)
     8ea:	4798      	blx	r3
     8ec:	0020      	movs	r0, r4
     8ee:	380c      	subs	r0, #12
     8f0:	2300      	movs	r3, #0
     8f2:	9302      	str	r3, [sp, #8]
     8f4:	9601      	str	r6, [sp, #4]
     8f6:	9503      	str	r5, [sp, #12]
     8f8:	a901      	add	r1, sp, #4
     8fa:	4b04      	ldr	r3, [pc, #16]	; (90c <_spi_m_sync_io_write+0x38>)
     8fc:	4798      	blx	r3
     8fe:	b004      	add	sp, #16
     900:	bd70      	pop	{r4, r5, r6, pc}
     902:	46c0      	nop			; (mov r8, r8)
     904:	00002244 	.word	0x00002244
     908:	00000cf9 	.word	0x00000cf9
     90c:	0000088d 	.word	0x0000088d

00000910 <_spi_m_sync_io_read>:
     910:	b570      	push	{r4, r5, r6, lr}
     912:	b084      	sub	sp, #16
     914:	0004      	movs	r4, r0
     916:	000e      	movs	r6, r1
     918:	0015      	movs	r5, r2
     91a:	1e43      	subs	r3, r0, #1
     91c:	4198      	sbcs	r0, r3
     91e:	b2c0      	uxtb	r0, r0
     920:	2287      	movs	r2, #135	; 0x87
     922:	4907      	ldr	r1, [pc, #28]	; (940 <_spi_m_sync_io_read+0x30>)
     924:	4b07      	ldr	r3, [pc, #28]	; (944 <_spi_m_sync_io_read+0x34>)
     926:	4798      	blx	r3
     928:	0020      	movs	r0, r4
     92a:	380c      	subs	r0, #12
     92c:	9602      	str	r6, [sp, #8]
     92e:	2300      	movs	r3, #0
     930:	9301      	str	r3, [sp, #4]
     932:	9503      	str	r5, [sp, #12]
     934:	a901      	add	r1, sp, #4
     936:	4b04      	ldr	r3, [pc, #16]	; (948 <_spi_m_sync_io_read+0x38>)
     938:	4798      	blx	r3
     93a:	b004      	add	sp, #16
     93c:	bd70      	pop	{r4, r5, r6, pc}
     93e:	46c0      	nop			; (mov r8, r8)
     940:	00002244 	.word	0x00002244
     944:	00000cf9 	.word	0x00000cf9
     948:	0000088d 	.word	0x0000088d

0000094c <timer_add_timer_task>:
     94c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     94e:	6806      	ldr	r6, [r0, #0]
     950:	2e00      	cmp	r6, #0
     952:	d002      	beq.n	95a <timer_add_timer_task+0xe>
     954:	0033      	movs	r3, r6
     956:	2500      	movs	r5, #0
     958:	e00c      	b.n	974 <timer_add_timer_task+0x28>
     95a:	4b10      	ldr	r3, [pc, #64]	; (99c <timer_add_timer_task+0x50>)
     95c:	4798      	blx	r3
     95e:	e018      	b.n	992 <timer_add_timer_task+0x46>
     960:	689f      	ldr	r7, [r3, #8]
     962:	46bc      	mov	ip, r7
     964:	4464      	add	r4, ip
     966:	1aa4      	subs	r4, r4, r2
     968:	3401      	adds	r4, #1
     96a:	688f      	ldr	r7, [r1, #8]
     96c:	42bc      	cmp	r4, r7
     96e:	d20b      	bcs.n	988 <timer_add_timer_task+0x3c>
     970:	001d      	movs	r5, r3
     972:	681b      	ldr	r3, [r3, #0]
     974:	2b00      	cmp	r3, #0
     976:	d007      	beq.n	988 <timer_add_timer_task+0x3c>
     978:	685c      	ldr	r4, [r3, #4]
     97a:	4294      	cmp	r4, r2
     97c:	d8f0      	bhi.n	960 <timer_add_timer_task+0x14>
     97e:	1aa4      	subs	r4, r4, r2
     980:	689f      	ldr	r7, [r3, #8]
     982:	46bc      	mov	ip, r7
     984:	4464      	add	r4, ip
     986:	e7f0      	b.n	96a <timer_add_timer_task+0x1e>
     988:	42b3      	cmp	r3, r6
     98a:	d003      	beq.n	994 <timer_add_timer_task+0x48>
     98c:	0028      	movs	r0, r5
     98e:	4b04      	ldr	r3, [pc, #16]	; (9a0 <timer_add_timer_task+0x54>)
     990:	4798      	blx	r3
     992:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     994:	4b01      	ldr	r3, [pc, #4]	; (99c <timer_add_timer_task+0x50>)
     996:	4798      	blx	r3
     998:	e7fb      	b.n	992 <timer_add_timer_task+0x46>
     99a:	46c0      	nop			; (mov r8, r8)
     99c:	00000d19 	.word	0x00000d19
     9a0:	00000d45 	.word	0x00000d45

000009a4 <timer_process_counted>:
     9a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     9a6:	0005      	movs	r5, r0
     9a8:	6944      	ldr	r4, [r0, #20]
     9aa:	6903      	ldr	r3, [r0, #16]
     9ac:	1c5e      	adds	r6, r3, #1
     9ae:	6106      	str	r6, [r0, #16]
     9b0:	7e03      	ldrb	r3, [r0, #24]
     9b2:	07db      	lsls	r3, r3, #31
     9b4:	d402      	bmi.n	9bc <timer_process_counted+0x18>
     9b6:	7e03      	ldrb	r3, [r0, #24]
     9b8:	079b      	lsls	r3, r3, #30
     9ba:	d50a      	bpl.n	9d2 <timer_process_counted+0x2e>
     9bc:	7e2b      	ldrb	r3, [r5, #24]
     9be:	2202      	movs	r2, #2
     9c0:	4313      	orrs	r3, r2
     9c2:	b2db      	uxtb	r3, r3
     9c4:	762b      	strb	r3, [r5, #24]
     9c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     9c8:	696f      	ldr	r7, [r5, #20]
     9ca:	68e3      	ldr	r3, [r4, #12]
     9cc:	0020      	movs	r0, r4
     9ce:	4798      	blx	r3
     9d0:	003c      	movs	r4, r7
     9d2:	2c00      	cmp	r4, #0
     9d4:	d0f7      	beq.n	9c6 <timer_process_counted+0x22>
     9d6:	6863      	ldr	r3, [r4, #4]
     9d8:	1af3      	subs	r3, r6, r3
     9da:	68a2      	ldr	r2, [r4, #8]
     9dc:	4293      	cmp	r3, r2
     9de:	d3f2      	bcc.n	9c6 <timer_process_counted+0x22>
     9e0:	002f      	movs	r7, r5
     9e2:	3714      	adds	r7, #20
     9e4:	0038      	movs	r0, r7
     9e6:	4b06      	ldr	r3, [pc, #24]	; (a00 <timer_process_counted+0x5c>)
     9e8:	4798      	blx	r3
     9ea:	7c23      	ldrb	r3, [r4, #16]
     9ec:	2b01      	cmp	r3, #1
     9ee:	d1eb      	bne.n	9c8 <timer_process_counted+0x24>
     9f0:	6066      	str	r6, [r4, #4]
     9f2:	0032      	movs	r2, r6
     9f4:	0021      	movs	r1, r4
     9f6:	0038      	movs	r0, r7
     9f8:	4b02      	ldr	r3, [pc, #8]	; (a04 <timer_process_counted+0x60>)
     9fa:	4798      	blx	r3
     9fc:	e7e4      	b.n	9c8 <timer_process_counted+0x24>
     9fe:	46c0      	nop			; (mov r8, r8)
     a00:	00000d4d 	.word	0x00000d4d
     a04:	0000094d 	.word	0x0000094d

00000a08 <timer_init>:
     a08:	b570      	push	{r4, r5, r6, lr}
     a0a:	0004      	movs	r4, r0
     a0c:	000d      	movs	r5, r1
     a0e:	2800      	cmp	r0, #0
     a10:	d012      	beq.n	a38 <timer_init+0x30>
     a12:	2900      	cmp	r1, #0
     a14:	d00e      	beq.n	a34 <timer_init+0x2c>
     a16:	2001      	movs	r0, #1
     a18:	223b      	movs	r2, #59	; 0x3b
     a1a:	4908      	ldr	r1, [pc, #32]	; (a3c <timer_init+0x34>)
     a1c:	4b08      	ldr	r3, [pc, #32]	; (a40 <timer_init+0x38>)
     a1e:	4798      	blx	r3
     a20:	0029      	movs	r1, r5
     a22:	0020      	movs	r0, r4
     a24:	4b07      	ldr	r3, [pc, #28]	; (a44 <timer_init+0x3c>)
     a26:	4798      	blx	r3
     a28:	2300      	movs	r3, #0
     a2a:	6123      	str	r3, [r4, #16]
     a2c:	4b06      	ldr	r3, [pc, #24]	; (a48 <timer_init+0x40>)
     a2e:	6023      	str	r3, [r4, #0]
     a30:	2000      	movs	r0, #0
     a32:	bd70      	pop	{r4, r5, r6, pc}
     a34:	2000      	movs	r0, #0
     a36:	e7ef      	b.n	a18 <timer_init+0x10>
     a38:	2000      	movs	r0, #0
     a3a:	e7ed      	b.n	a18 <timer_init+0x10>
     a3c:	00002260 	.word	0x00002260
     a40:	00000cf9 	.word	0x00000cf9
     a44:	000019bd 	.word	0x000019bd
     a48:	000009a5 	.word	0x000009a5

00000a4c <usart_transmission_complete>:
     a4c:	b510      	push	{r4, lr}
     a4e:	3808      	subs	r0, #8
     a50:	2300      	movs	r3, #0
     a52:	6303      	str	r3, [r0, #48]	; 0x30
     a54:	6a43      	ldr	r3, [r0, #36]	; 0x24
     a56:	2b00      	cmp	r3, #0
     a58:	d000      	beq.n	a5c <usart_transmission_complete+0x10>
     a5a:	4798      	blx	r3
     a5c:	bd10      	pop	{r4, pc}

00000a5e <usart_error>:
     a5e:	b510      	push	{r4, lr}
     a60:	3808      	subs	r0, #8
     a62:	2300      	movs	r3, #0
     a64:	6303      	str	r3, [r0, #48]	; 0x30
     a66:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
     a68:	2b00      	cmp	r3, #0
     a6a:	d000      	beq.n	a6e <usart_error+0x10>
     a6c:	4798      	blx	r3
     a6e:	bd10      	pop	{r4, pc}

00000a70 <usart_fill_rx_buffer>:
     a70:	b510      	push	{r4, lr}
     a72:	0004      	movs	r4, r0
     a74:	302c      	adds	r0, #44	; 0x2c
     a76:	4b04      	ldr	r3, [pc, #16]	; (a88 <usart_fill_rx_buffer+0x18>)
     a78:	4798      	blx	r3
     a7a:	6a23      	ldr	r3, [r4, #32]
     a7c:	3c08      	subs	r4, #8
     a7e:	2b00      	cmp	r3, #0
     a80:	d001      	beq.n	a86 <usart_fill_rx_buffer+0x16>
     a82:	0020      	movs	r0, r4
     a84:	4798      	blx	r3
     a86:	bd10      	pop	{r4, pc}
     a88:	00000df9 	.word	0x00000df9

00000a8c <usart_async_write>:
     a8c:	b570      	push	{r4, r5, r6, lr}
     a8e:	0004      	movs	r4, r0
     a90:	000e      	movs	r6, r1
     a92:	0015      	movs	r5, r2
     a94:	2800      	cmp	r0, #0
     a96:	d01d      	beq.n	ad4 <usart_async_write+0x48>
     a98:	2900      	cmp	r1, #0
     a9a:	d01d      	beq.n	ad8 <usart_async_write+0x4c>
     a9c:	2a00      	cmp	r2, #0
     a9e:	d11d      	bne.n	adc <usart_async_write+0x50>
     aa0:	2000      	movs	r0, #0
     aa2:	223c      	movs	r2, #60	; 0x3c
     aa4:	32ff      	adds	r2, #255	; 0xff
     aa6:	4910      	ldr	r1, [pc, #64]	; (ae8 <usart_async_write+0x5c>)
     aa8:	4b10      	ldr	r3, [pc, #64]	; (aec <usart_async_write+0x60>)
     aaa:	4798      	blx	r3
     aac:	2344      	movs	r3, #68	; 0x44
     aae:	5ae2      	ldrh	r2, [r4, r3]
     ab0:	3308      	adds	r3, #8
     ab2:	5ae3      	ldrh	r3, [r4, r3]
     ab4:	429a      	cmp	r2, r3
     ab6:	d113      	bne.n	ae0 <usart_async_write+0x54>
     ab8:	64a6      	str	r6, [r4, #72]	; 0x48
     aba:	234c      	movs	r3, #76	; 0x4c
     abc:	52e5      	strh	r5, [r4, r3]
     abe:	2200      	movs	r2, #0
     ac0:	3b08      	subs	r3, #8
     ac2:	52e2      	strh	r2, [r4, r3]
     ac4:	3b43      	subs	r3, #67	; 0x43
     ac6:	6323      	str	r3, [r4, #48]	; 0x30
     ac8:	0020      	movs	r0, r4
     aca:	3008      	adds	r0, #8
     acc:	4b08      	ldr	r3, [pc, #32]	; (af0 <usart_async_write+0x64>)
     ace:	4798      	blx	r3
     ad0:	0028      	movs	r0, r5
     ad2:	bd70      	pop	{r4, r5, r6, pc}
     ad4:	2000      	movs	r0, #0
     ad6:	e7e4      	b.n	aa2 <usart_async_write+0x16>
     ad8:	2000      	movs	r0, #0
     ada:	e7e2      	b.n	aa2 <usart_async_write+0x16>
     adc:	2001      	movs	r0, #1
     ade:	e7e0      	b.n	aa2 <usart_async_write+0x16>
     ae0:	201c      	movs	r0, #28
     ae2:	4240      	negs	r0, r0
     ae4:	e7f5      	b.n	ad2 <usart_async_write+0x46>
     ae6:	46c0      	nop			; (mov r8, r8)
     ae8:	00002278 	.word	0x00002278
     aec:	00000cf9 	.word	0x00000cf9
     af0:	00001553 	.word	0x00001553

00000af4 <usart_process_byte_sent>:
     af4:	b570      	push	{r4, r5, r6, lr}
     af6:	0004      	movs	r4, r0
     af8:	0002      	movs	r2, r0
     afa:	3a08      	subs	r2, #8
     afc:	2344      	movs	r3, #68	; 0x44
     afe:	5ad3      	ldrh	r3, [r2, r3]
     b00:	214c      	movs	r1, #76	; 0x4c
     b02:	5a52      	ldrh	r2, [r2, r1]
     b04:	4293      	cmp	r3, r2
     b06:	d00d      	beq.n	b24 <usart_process_byte_sent+0x30>
     b08:	0002      	movs	r2, r0
     b0a:	6c01      	ldr	r1, [r0, #64]	; 0x40
     b0c:	3a08      	subs	r2, #8
     b0e:	1c5d      	adds	r5, r3, #1
     b10:	2044      	movs	r0, #68	; 0x44
     b12:	5215      	strh	r5, [r2, r0]
     b14:	5cc9      	ldrb	r1, [r1, r3]
     b16:	0020      	movs	r0, r4
     b18:	4b04      	ldr	r3, [pc, #16]	; (b2c <usart_process_byte_sent+0x38>)
     b1a:	4798      	blx	r3
     b1c:	0020      	movs	r0, r4
     b1e:	4b04      	ldr	r3, [pc, #16]	; (b30 <usart_process_byte_sent+0x3c>)
     b20:	4798      	blx	r3
     b22:	bd70      	pop	{r4, r5, r6, pc}
     b24:	4b03      	ldr	r3, [pc, #12]	; (b34 <usart_process_byte_sent+0x40>)
     b26:	4798      	blx	r3
     b28:	e7fb      	b.n	b22 <usart_process_byte_sent+0x2e>
     b2a:	46c0      	nop			; (mov r8, r8)
     b2c:	0000154b 	.word	0x0000154b
     b30:	00001553 	.word	0x00001553
     b34:	0000155b 	.word	0x0000155b

00000b38 <usart_async_read>:
     b38:	b5f0      	push	{r4, r5, r6, r7, lr}
     b3a:	b085      	sub	sp, #20
     b3c:	0004      	movs	r4, r0
     b3e:	000d      	movs	r5, r1
     b40:	0016      	movs	r6, r2
     b42:	2800      	cmp	r0, #0
     b44:	d017      	beq.n	b76 <usart_async_read+0x3e>
     b46:	2900      	cmp	r1, #0
     b48:	d017      	beq.n	b7a <usart_async_read+0x42>
     b4a:	2a00      	cmp	r2, #0
     b4c:	d117      	bne.n	b7e <usart_async_read+0x46>
     b4e:	2000      	movs	r0, #0
     b50:	22ac      	movs	r2, #172	; 0xac
     b52:	0052      	lsls	r2, r2, #1
     b54:	4912      	ldr	r1, [pc, #72]	; (ba0 <usart_async_read+0x68>)
     b56:	4b13      	ldr	r3, [pc, #76]	; (ba4 <usart_async_read+0x6c>)
     b58:	4798      	blx	r3
     b5a:	a803      	add	r0, sp, #12
     b5c:	4b12      	ldr	r3, [pc, #72]	; (ba8 <usart_async_read+0x70>)
     b5e:	4798      	blx	r3
     b60:	3434      	adds	r4, #52	; 0x34
     b62:	0020      	movs	r0, r4
     b64:	9401      	str	r4, [sp, #4]
     b66:	4b11      	ldr	r3, [pc, #68]	; (bac <usart_async_read+0x74>)
     b68:	4798      	blx	r3
     b6a:	0007      	movs	r7, r0
     b6c:	a803      	add	r0, sp, #12
     b6e:	4b10      	ldr	r3, [pc, #64]	; (bb0 <usart_async_read+0x78>)
     b70:	4798      	blx	r3
     b72:	2400      	movs	r4, #0
     b74:	e00b      	b.n	b8e <usart_async_read+0x56>
     b76:	2000      	movs	r0, #0
     b78:	e7ea      	b.n	b50 <usart_async_read+0x18>
     b7a:	2000      	movs	r0, #0
     b7c:	e7e8      	b.n	b50 <usart_async_read+0x18>
     b7e:	2001      	movs	r0, #1
     b80:	e7e6      	b.n	b50 <usart_async_read+0x18>
     b82:	3401      	adds	r4, #1
     b84:	b2a4      	uxth	r4, r4
     b86:	1869      	adds	r1, r5, r1
     b88:	9801      	ldr	r0, [sp, #4]
     b8a:	4b0a      	ldr	r3, [pc, #40]	; (bb4 <usart_async_read+0x7c>)
     b8c:	4798      	blx	r3
     b8e:	0021      	movs	r1, r4
     b90:	42a7      	cmp	r7, r4
     b92:	d901      	bls.n	b98 <usart_async_read+0x60>
     b94:	42b4      	cmp	r4, r6
     b96:	d3f4      	bcc.n	b82 <usart_async_read+0x4a>
     b98:	0020      	movs	r0, r4
     b9a:	b005      	add	sp, #20
     b9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
     b9e:	46c0      	nop			; (mov r8, r8)
     ba0:	00002278 	.word	0x00002278
     ba4:	00000cf9 	.word	0x00000cf9
     ba8:	00000609 	.word	0x00000609
     bac:	00000e39 	.word	0x00000e39
     bb0:	00000617 	.word	0x00000617
     bb4:	00000dad 	.word	0x00000dad

00000bb8 <usart_async_init>:
     bb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     bba:	0004      	movs	r4, r0
     bbc:	000d      	movs	r5, r1
     bbe:	0016      	movs	r6, r2
     bc0:	001f      	movs	r7, r3
     bc2:	2800      	cmp	r0, #0
     bc4:	d026      	beq.n	c14 <usart_async_init+0x5c>
     bc6:	2900      	cmp	r1, #0
     bc8:	d026      	beq.n	c18 <usart_async_init+0x60>
     bca:	2a00      	cmp	r2, #0
     bcc:	d026      	beq.n	c1c <usart_async_init+0x64>
     bce:	2b00      	cmp	r3, #0
     bd0:	d126      	bne.n	c20 <usart_async_init+0x68>
     bd2:	2000      	movs	r0, #0
     bd4:	223a      	movs	r2, #58	; 0x3a
     bd6:	4915      	ldr	r1, [pc, #84]	; (c2c <usart_async_init+0x74>)
     bd8:	4b15      	ldr	r3, [pc, #84]	; (c30 <usart_async_init+0x78>)
     bda:	4798      	blx	r3
     bdc:	0020      	movs	r0, r4
     bde:	3034      	adds	r0, #52	; 0x34
     be0:	003a      	movs	r2, r7
     be2:	0031      	movs	r1, r6
     be4:	4b13      	ldr	r3, [pc, #76]	; (c34 <usart_async_init+0x7c>)
     be6:	4798      	blx	r3
     be8:	2800      	cmp	r0, #0
     bea:	d11b      	bne.n	c24 <usart_async_init+0x6c>
     bec:	0020      	movs	r0, r4
     bee:	3008      	adds	r0, #8
     bf0:	0029      	movs	r1, r5
     bf2:	4b11      	ldr	r3, [pc, #68]	; (c38 <usart_async_init+0x80>)
     bf4:	4798      	blx	r3
     bf6:	2800      	cmp	r0, #0
     bf8:	d10b      	bne.n	c12 <usart_async_init+0x5a>
     bfa:	4b10      	ldr	r3, [pc, #64]	; (c3c <usart_async_init+0x84>)
     bfc:	6063      	str	r3, [r4, #4]
     bfe:	4b10      	ldr	r3, [pc, #64]	; (c40 <usart_async_init+0x88>)
     c00:	6023      	str	r3, [r4, #0]
     c02:	4b10      	ldr	r3, [pc, #64]	; (c44 <usart_async_init+0x8c>)
     c04:	60a3      	str	r3, [r4, #8]
     c06:	4b10      	ldr	r3, [pc, #64]	; (c48 <usart_async_init+0x90>)
     c08:	60e3      	str	r3, [r4, #12]
     c0a:	4b10      	ldr	r3, [pc, #64]	; (c4c <usart_async_init+0x94>)
     c0c:	6123      	str	r3, [r4, #16]
     c0e:	4b10      	ldr	r3, [pc, #64]	; (c50 <usart_async_init+0x98>)
     c10:	6163      	str	r3, [r4, #20]
     c12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     c14:	2000      	movs	r0, #0
     c16:	e7dd      	b.n	bd4 <usart_async_init+0x1c>
     c18:	2000      	movs	r0, #0
     c1a:	e7db      	b.n	bd4 <usart_async_init+0x1c>
     c1c:	2000      	movs	r0, #0
     c1e:	e7d9      	b.n	bd4 <usart_async_init+0x1c>
     c20:	2001      	movs	r0, #1
     c22:	e7d7      	b.n	bd4 <usart_async_init+0x1c>
     c24:	200d      	movs	r0, #13
     c26:	4240      	negs	r0, r0
     c28:	e7f3      	b.n	c12 <usart_async_init+0x5a>
     c2a:	46c0      	nop			; (mov r8, r8)
     c2c:	00002278 	.word	0x00002278
     c30:	00000cf9 	.word	0x00000cf9
     c34:	00000d61 	.word	0x00000d61
     c38:	000014ad 	.word	0x000014ad
     c3c:	00000b39 	.word	0x00000b39
     c40:	00000a8d 	.word	0x00000a8d
     c44:	00000af5 	.word	0x00000af5
     c48:	00000a71 	.word	0x00000a71
     c4c:	00000a4d 	.word	0x00000a4d
     c50:	00000a5f 	.word	0x00000a5f

00000c54 <usart_async_enable>:
     c54:	b510      	push	{r4, lr}
     c56:	0004      	movs	r4, r0
     c58:	1e43      	subs	r3, r0, #1
     c5a:	4198      	sbcs	r0, r3
     c5c:	b2c0      	uxtb	r0, r0
     c5e:	2261      	movs	r2, #97	; 0x61
     c60:	4904      	ldr	r1, [pc, #16]	; (c74 <usart_async_enable+0x20>)
     c62:	4b05      	ldr	r3, [pc, #20]	; (c78 <usart_async_enable+0x24>)
     c64:	4798      	blx	r3
     c66:	0020      	movs	r0, r4
     c68:	3008      	adds	r0, #8
     c6a:	4b04      	ldr	r3, [pc, #16]	; (c7c <usart_async_enable+0x28>)
     c6c:	4798      	blx	r3
     c6e:	2000      	movs	r0, #0
     c70:	bd10      	pop	{r4, pc}
     c72:	46c0      	nop			; (mov r8, r8)
     c74:	00002278 	.word	0x00002278
     c78:	00000cf9 	.word	0x00000cf9
     c7c:	00001539 	.word	0x00001539

00000c80 <usart_async_register_callback>:
     c80:	b570      	push	{r4, r5, r6, lr}
     c82:	0005      	movs	r5, r0
     c84:	000e      	movs	r6, r1
     c86:	0014      	movs	r4, r2
     c88:	1e43      	subs	r3, r0, #1
     c8a:	4198      	sbcs	r0, r3
     c8c:	b2c0      	uxtb	r0, r0
     c8e:	2283      	movs	r2, #131	; 0x83
     c90:	4916      	ldr	r1, [pc, #88]	; (cec <usart_async_register_callback+0x6c>)
     c92:	4b17      	ldr	r3, [pc, #92]	; (cf0 <usart_async_register_callback+0x70>)
     c94:	4798      	blx	r3
     c96:	2e01      	cmp	r6, #1
     c98:	d011      	beq.n	cbe <usart_async_register_callback+0x3e>
     c9a:	2e00      	cmp	r6, #0
     c9c:	d004      	beq.n	ca8 <usart_async_register_callback+0x28>
     c9e:	2e02      	cmp	r6, #2
     ca0:	d018      	beq.n	cd4 <usart_async_register_callback+0x54>
     ca2:	200d      	movs	r0, #13
     ca4:	4240      	negs	r0, r0
     ca6:	e009      	b.n	cbc <usart_async_register_callback+0x3c>
     ca8:	62ac      	str	r4, [r5, #40]	; 0x28
     caa:	1e62      	subs	r2, r4, #1
     cac:	4194      	sbcs	r4, r2
     cae:	b2e2      	uxtb	r2, r4
     cb0:	0028      	movs	r0, r5
     cb2:	3008      	adds	r0, #8
     cb4:	2101      	movs	r1, #1
     cb6:	4b0f      	ldr	r3, [pc, #60]	; (cf4 <usart_async_register_callback+0x74>)
     cb8:	4798      	blx	r3
     cba:	2000      	movs	r0, #0
     cbc:	bd70      	pop	{r4, r5, r6, pc}
     cbe:	626c      	str	r4, [r5, #36]	; 0x24
     cc0:	1e62      	subs	r2, r4, #1
     cc2:	4194      	sbcs	r4, r2
     cc4:	b2e2      	uxtb	r2, r4
     cc6:	0028      	movs	r0, r5
     cc8:	3008      	adds	r0, #8
     cca:	2102      	movs	r1, #2
     ccc:	4b09      	ldr	r3, [pc, #36]	; (cf4 <usart_async_register_callback+0x74>)
     cce:	4798      	blx	r3
     cd0:	2000      	movs	r0, #0
     cd2:	e7f3      	b.n	cbc <usart_async_register_callback+0x3c>
     cd4:	62ec      	str	r4, [r5, #44]	; 0x2c
     cd6:	1e62      	subs	r2, r4, #1
     cd8:	4194      	sbcs	r4, r2
     cda:	b2e2      	uxtb	r2, r4
     cdc:	0028      	movs	r0, r5
     cde:	3008      	adds	r0, #8
     ce0:	2103      	movs	r1, #3
     ce2:	4b04      	ldr	r3, [pc, #16]	; (cf4 <usart_async_register_callback+0x74>)
     ce4:	4798      	blx	r3
     ce6:	2000      	movs	r0, #0
     ce8:	e7e8      	b.n	cbc <usart_async_register_callback+0x3c>
     cea:	46c0      	nop			; (mov r8, r8)
     cec:	00002278 	.word	0x00002278
     cf0:	00000cf9 	.word	0x00000cf9
     cf4:	00001565 	.word	0x00001565

00000cf8 <assert>:
     cf8:	2800      	cmp	r0, #0
     cfa:	d100      	bne.n	cfe <assert+0x6>
     cfc:	be00      	bkpt	0x0000
     cfe:	4770      	bx	lr

00000d00 <is_list_element>:
     d00:	6803      	ldr	r3, [r0, #0]
     d02:	2b00      	cmp	r3, #0
     d04:	d003      	beq.n	d0e <is_list_element+0xe>
     d06:	428b      	cmp	r3, r1
     d08:	d003      	beq.n	d12 <is_list_element+0x12>
     d0a:	681b      	ldr	r3, [r3, #0]
     d0c:	e7f9      	b.n	d02 <is_list_element+0x2>
     d0e:	2000      	movs	r0, #0
     d10:	4770      	bx	lr
     d12:	2001      	movs	r0, #1
     d14:	e7fc      	b.n	d10 <is_list_element+0x10>
	...

00000d18 <list_insert_as_head>:
     d18:	b570      	push	{r4, r5, r6, lr}
     d1a:	0004      	movs	r4, r0
     d1c:	000d      	movs	r5, r1
     d1e:	4b06      	ldr	r3, [pc, #24]	; (d38 <list_insert_as_head+0x20>)
     d20:	4798      	blx	r3
     d22:	2301      	movs	r3, #1
     d24:	4058      	eors	r0, r3
     d26:	b2c0      	uxtb	r0, r0
     d28:	2239      	movs	r2, #57	; 0x39
     d2a:	4904      	ldr	r1, [pc, #16]	; (d3c <list_insert_as_head+0x24>)
     d2c:	4b04      	ldr	r3, [pc, #16]	; (d40 <list_insert_as_head+0x28>)
     d2e:	4798      	blx	r3
     d30:	6823      	ldr	r3, [r4, #0]
     d32:	602b      	str	r3, [r5, #0]
     d34:	6025      	str	r5, [r4, #0]
     d36:	bd70      	pop	{r4, r5, r6, pc}
     d38:	00000d01 	.word	0x00000d01
     d3c:	00002298 	.word	0x00002298
     d40:	00000cf9 	.word	0x00000cf9

00000d44 <list_insert_after>:
     d44:	6803      	ldr	r3, [r0, #0]
     d46:	600b      	str	r3, [r1, #0]
     d48:	6001      	str	r1, [r0, #0]
     d4a:	4770      	bx	lr

00000d4c <list_remove_head>:
     d4c:	6803      	ldr	r3, [r0, #0]
     d4e:	2b00      	cmp	r3, #0
     d50:	d003      	beq.n	d5a <list_remove_head+0xe>
     d52:	681a      	ldr	r2, [r3, #0]
     d54:	6002      	str	r2, [r0, #0]
     d56:	0018      	movs	r0, r3
     d58:	4770      	bx	lr
     d5a:	2000      	movs	r0, #0
     d5c:	e7fc      	b.n	d58 <list_remove_head+0xc>
	...

00000d60 <ringbuffer_init>:
     d60:	b570      	push	{r4, r5, r6, lr}
     d62:	0004      	movs	r4, r0
     d64:	000e      	movs	r6, r1
     d66:	0015      	movs	r5, r2
     d68:	2800      	cmp	r0, #0
     d6a:	d012      	beq.n	d92 <ringbuffer_init+0x32>
     d6c:	2900      	cmp	r1, #0
     d6e:	d012      	beq.n	d96 <ringbuffer_init+0x36>
     d70:	2a00      	cmp	r2, #0
     d72:	d112      	bne.n	d9a <ringbuffer_init+0x3a>
     d74:	2000      	movs	r0, #0
     d76:	2228      	movs	r2, #40	; 0x28
     d78:	490a      	ldr	r1, [pc, #40]	; (da4 <ringbuffer_init+0x44>)
     d7a:	4b0b      	ldr	r3, [pc, #44]	; (da8 <ringbuffer_init+0x48>)
     d7c:	4798      	blx	r3
     d7e:	1e6b      	subs	r3, r5, #1
     d80:	422b      	tst	r3, r5
     d82:	d10c      	bne.n	d9e <ringbuffer_init+0x3e>
     d84:	6063      	str	r3, [r4, #4]
     d86:	2300      	movs	r3, #0
     d88:	60a3      	str	r3, [r4, #8]
     d8a:	60e3      	str	r3, [r4, #12]
     d8c:	6026      	str	r6, [r4, #0]
     d8e:	2000      	movs	r0, #0
     d90:	bd70      	pop	{r4, r5, r6, pc}
     d92:	2000      	movs	r0, #0
     d94:	e7ef      	b.n	d76 <ringbuffer_init+0x16>
     d96:	2000      	movs	r0, #0
     d98:	e7ed      	b.n	d76 <ringbuffer_init+0x16>
     d9a:	2001      	movs	r0, #1
     d9c:	e7eb      	b.n	d76 <ringbuffer_init+0x16>
     d9e:	200d      	movs	r0, #13
     da0:	4240      	negs	r0, r0
     da2:	e7f5      	b.n	d90 <ringbuffer_init+0x30>
     da4:	000022b8 	.word	0x000022b8
     da8:	00000cf9 	.word	0x00000cf9

00000dac <ringbuffer_get>:
     dac:	b570      	push	{r4, r5, r6, lr}
     dae:	0004      	movs	r4, r0
     db0:	000d      	movs	r5, r1
     db2:	2800      	cmp	r0, #0
     db4:	d016      	beq.n	de4 <ringbuffer_get+0x38>
     db6:	2900      	cmp	r1, #0
     db8:	d012      	beq.n	de0 <ringbuffer_get+0x34>
     dba:	2001      	movs	r0, #1
     dbc:	2240      	movs	r2, #64	; 0x40
     dbe:	490c      	ldr	r1, [pc, #48]	; (df0 <ringbuffer_get+0x44>)
     dc0:	4b0c      	ldr	r3, [pc, #48]	; (df4 <ringbuffer_get+0x48>)
     dc2:	4798      	blx	r3
     dc4:	68a3      	ldr	r3, [r4, #8]
     dc6:	68e2      	ldr	r2, [r4, #12]
     dc8:	429a      	cmp	r2, r3
     dca:	d00d      	beq.n	de8 <ringbuffer_get+0x3c>
     dcc:	6862      	ldr	r2, [r4, #4]
     dce:	4013      	ands	r3, r2
     dd0:	6822      	ldr	r2, [r4, #0]
     dd2:	5cd3      	ldrb	r3, [r2, r3]
     dd4:	702b      	strb	r3, [r5, #0]
     dd6:	68a3      	ldr	r3, [r4, #8]
     dd8:	3301      	adds	r3, #1
     dda:	60a3      	str	r3, [r4, #8]
     ddc:	2000      	movs	r0, #0
     dde:	bd70      	pop	{r4, r5, r6, pc}
     de0:	2000      	movs	r0, #0
     de2:	e7eb      	b.n	dbc <ringbuffer_get+0x10>
     de4:	2000      	movs	r0, #0
     de6:	e7e9      	b.n	dbc <ringbuffer_get+0x10>
     de8:	200a      	movs	r0, #10
     dea:	4240      	negs	r0, r0
     dec:	e7f7      	b.n	dde <ringbuffer_get+0x32>
     dee:	46c0      	nop			; (mov r8, r8)
     df0:	000022b8 	.word	0x000022b8
     df4:	00000cf9 	.word	0x00000cf9

00000df8 <ringbuffer_put>:
     df8:	b570      	push	{r4, r5, r6, lr}
     dfa:	0004      	movs	r4, r0
     dfc:	000d      	movs	r5, r1
     dfe:	1e43      	subs	r3, r0, #1
     e00:	4198      	sbcs	r0, r3
     e02:	b2c0      	uxtb	r0, r0
     e04:	2251      	movs	r2, #81	; 0x51
     e06:	490a      	ldr	r1, [pc, #40]	; (e30 <ringbuffer_put+0x38>)
     e08:	4b0a      	ldr	r3, [pc, #40]	; (e34 <ringbuffer_put+0x3c>)
     e0a:	4798      	blx	r3
     e0c:	6863      	ldr	r3, [r4, #4]
     e0e:	68e2      	ldr	r2, [r4, #12]
     e10:	4013      	ands	r3, r2
     e12:	6822      	ldr	r2, [r4, #0]
     e14:	54d5      	strb	r5, [r2, r3]
     e16:	68e3      	ldr	r3, [r4, #12]
     e18:	68a2      	ldr	r2, [r4, #8]
     e1a:	1a9a      	subs	r2, r3, r2
     e1c:	6861      	ldr	r1, [r4, #4]
     e1e:	428a      	cmp	r2, r1
     e20:	d901      	bls.n	e26 <ringbuffer_put+0x2e>
     e22:	1a59      	subs	r1, r3, r1
     e24:	60a1      	str	r1, [r4, #8]
     e26:	3301      	adds	r3, #1
     e28:	60e3      	str	r3, [r4, #12]
     e2a:	2000      	movs	r0, #0
     e2c:	bd70      	pop	{r4, r5, r6, pc}
     e2e:	46c0      	nop			; (mov r8, r8)
     e30:	000022b8 	.word	0x000022b8
     e34:	00000cf9 	.word	0x00000cf9

00000e38 <ringbuffer_num>:
     e38:	b510      	push	{r4, lr}
     e3a:	0004      	movs	r4, r0
     e3c:	1e43      	subs	r3, r0, #1
     e3e:	4198      	sbcs	r0, r3
     e40:	b2c0      	uxtb	r0, r0
     e42:	2267      	movs	r2, #103	; 0x67
     e44:	4903      	ldr	r1, [pc, #12]	; (e54 <ringbuffer_num+0x1c>)
     e46:	4b04      	ldr	r3, [pc, #16]	; (e58 <ringbuffer_num+0x20>)
     e48:	4798      	blx	r3
     e4a:	68e0      	ldr	r0, [r4, #12]
     e4c:	68a3      	ldr	r3, [r4, #8]
     e4e:	1ac0      	subs	r0, r0, r3
     e50:	bd10      	pop	{r4, pc}
     e52:	46c0      	nop			; (mov r8, r8)
     e54:	000022b8 	.word	0x000022b8
     e58:	00000cf9 	.word	0x00000cf9

00000e5c <_get_ac_cfg>:
     e5c:	b510      	push	{r4, lr}
     e5e:	2300      	movs	r3, #0
     e60:	2b00      	cmp	r3, #0
     e62:	d001      	beq.n	e68 <_get_ac_cfg+0xc>
     e64:	2000      	movs	r0, #0
     e66:	bd10      	pop	{r4, pc}
     e68:	009a      	lsls	r2, r3, #2
     e6a:	18d2      	adds	r2, r2, r3
     e6c:	0091      	lsls	r1, r2, #2
     e6e:	4a05      	ldr	r2, [pc, #20]	; (e84 <_get_ac_cfg+0x28>)
     e70:	588a      	ldr	r2, [r1, r2]
     e72:	4282      	cmp	r2, r0
     e74:	d002      	beq.n	e7c <_get_ac_cfg+0x20>
     e76:	3301      	adds	r3, #1
     e78:	b2db      	uxtb	r3, r3
     e7a:	e7f1      	b.n	e60 <_get_ac_cfg+0x4>
     e7c:	4801      	ldr	r0, [pc, #4]	; (e84 <_get_ac_cfg+0x28>)
     e7e:	1840      	adds	r0, r0, r1
     e80:	e7f1      	b.n	e66 <_get_ac_cfg+0xa>
     e82:	46c0      	nop			; (mov r8, r8)
     e84:	000022dc 	.word	0x000022dc

00000e88 <_ac_init>:
     e88:	b510      	push	{r4, lr}
     e8a:	0004      	movs	r4, r0
     e8c:	1e43      	subs	r3, r0, #1
     e8e:	4198      	sbcs	r0, r3
     e90:	b2c0      	uxtb	r0, r0
     e92:	22fa      	movs	r2, #250	; 0xfa
     e94:	491e      	ldr	r1, [pc, #120]	; (f10 <_ac_init+0x88>)
     e96:	4b1f      	ldr	r3, [pc, #124]	; (f14 <_ac_init+0x8c>)
     e98:	4798      	blx	r3
     e9a:	0020      	movs	r0, r4
     e9c:	4b1e      	ldr	r3, [pc, #120]	; (f18 <_ac_init+0x90>)
     e9e:	4798      	blx	r3
     ea0:	2800      	cmp	r0, #0
     ea2:	d031      	beq.n	f08 <_ac_init+0x80>
     ea4:	7a63      	ldrb	r3, [r4, #9]
     ea6:	09db      	lsrs	r3, r3, #7
     ea8:	d1fc      	bne.n	ea4 <_ac_init+0x1c>
     eaa:	7a63      	ldrb	r3, [r4, #9]
     eac:	09db      	lsrs	r3, r3, #7
     eae:	d1fc      	bne.n	eaa <_ac_init+0x22>
     eb0:	7823      	ldrb	r3, [r4, #0]
     eb2:	079b      	lsls	r3, r3, #30
     eb4:	d507      	bpl.n	ec6 <_ac_init+0x3e>
     eb6:	2300      	movs	r3, #0
     eb8:	7023      	strb	r3, [r4, #0]
     eba:	7a63      	ldrb	r3, [r4, #9]
     ebc:	09db      	lsrs	r3, r3, #7
     ebe:	d1fc      	bne.n	eba <_ac_init+0x32>
     ec0:	7a63      	ldrb	r3, [r4, #9]
     ec2:	09db      	lsrs	r3, r3, #7
     ec4:	d1fc      	bne.n	ec0 <_ac_init+0x38>
     ec6:	2301      	movs	r3, #1
     ec8:	7023      	strb	r3, [r4, #0]
     eca:	7a63      	ldrb	r3, [r4, #9]
     ecc:	09db      	lsrs	r3, r3, #7
     ece:	d1fc      	bne.n	eca <_ac_init+0x42>
     ed0:	7a63      	ldrb	r3, [r4, #9]
     ed2:	09db      	lsrs	r3, r3, #7
     ed4:	d1fc      	bne.n	ed0 <_ac_init+0x48>
     ed6:	6883      	ldr	r3, [r0, #8]
     ed8:	6123      	str	r3, [r4, #16]
     eda:	7a63      	ldrb	r3, [r4, #9]
     edc:	09db      	lsrs	r3, r3, #7
     ede:	d1fc      	bne.n	eda <_ac_init+0x52>
     ee0:	68c3      	ldr	r3, [r0, #12]
     ee2:	6163      	str	r3, [r4, #20]
     ee4:	7a63      	ldrb	r3, [r4, #9]
     ee6:	09db      	lsrs	r3, r3, #7
     ee8:	d1fc      	bne.n	ee4 <_ac_init+0x5c>
     eea:	7c02      	ldrb	r2, [r0, #16]
     eec:	3320      	adds	r3, #32
     eee:	54e2      	strb	r2, [r4, r3]
     ef0:	7c42      	ldrb	r2, [r0, #17]
     ef2:	3301      	adds	r3, #1
     ef4:	54e2      	strb	r2, [r4, r3]
     ef6:	88c3      	ldrh	r3, [r0, #6]
     ef8:	8063      	strh	r3, [r4, #2]
     efa:	7943      	ldrb	r3, [r0, #5]
     efc:	7023      	strb	r3, [r4, #0]
     efe:	7a63      	ldrb	r3, [r4, #9]
     f00:	09db      	lsrs	r3, r3, #7
     f02:	d1fc      	bne.n	efe <_ac_init+0x76>
     f04:	2000      	movs	r0, #0
     f06:	bd10      	pop	{r4, pc}
     f08:	200a      	movs	r0, #10
     f0a:	4240      	negs	r0, r0
     f0c:	e7fb      	b.n	f06 <_ac_init+0x7e>
     f0e:	46c0      	nop			; (mov r8, r8)
     f10:	000022f0 	.word	0x000022f0
     f14:	00000cf9 	.word	0x00000cf9
     f18:	00000e5d 	.word	0x00000e5d

00000f1c <_ac_sync_init>:
     f1c:	b570      	push	{r4, r5, r6, lr}
     f1e:	0005      	movs	r5, r0
     f20:	000c      	movs	r4, r1
     f22:	1e43      	subs	r3, r0, #1
     f24:	4198      	sbcs	r0, r3
     f26:	b2c0      	uxtb	r0, r0
     f28:	2262      	movs	r2, #98	; 0x62
     f2a:	4904      	ldr	r1, [pc, #16]	; (f3c <_ac_sync_init+0x20>)
     f2c:	4b04      	ldr	r3, [pc, #16]	; (f40 <_ac_sync_init+0x24>)
     f2e:	4798      	blx	r3
     f30:	602c      	str	r4, [r5, #0]
     f32:	0020      	movs	r0, r4
     f34:	4b03      	ldr	r3, [pc, #12]	; (f44 <_ac_sync_init+0x28>)
     f36:	4798      	blx	r3
     f38:	bd70      	pop	{r4, r5, r6, pc}
     f3a:	46c0      	nop			; (mov r8, r8)
     f3c:	000022f0 	.word	0x000022f0
     f40:	00000cf9 	.word	0x00000cf9
     f44:	00000e89 	.word	0x00000e89

00000f48 <_adc_get_hardware_index>:
     f48:	2000      	movs	r0, #0
     f4a:	4770      	bx	lr

00000f4c <_adc_get_regs>:
     f4c:	b510      	push	{r4, lr}
     f4e:	4b0b      	ldr	r3, [pc, #44]	; (f7c <_adc_get_regs+0x30>)
     f50:	4798      	blx	r3
     f52:	0002      	movs	r2, r0
     f54:	2000      	movs	r0, #0
     f56:	2800      	cmp	r0, #0
     f58:	d006      	beq.n	f68 <_adc_get_regs+0x1c>
     f5a:	227f      	movs	r2, #127	; 0x7f
     f5c:	4908      	ldr	r1, [pc, #32]	; (f80 <_adc_get_regs+0x34>)
     f5e:	2000      	movs	r0, #0
     f60:	4b08      	ldr	r3, [pc, #32]	; (f84 <_adc_get_regs+0x38>)
     f62:	4798      	blx	r3
     f64:	2000      	movs	r0, #0
     f66:	bd10      	pop	{r4, pc}
     f68:	00c3      	lsls	r3, r0, #3
     f6a:	1a1b      	subs	r3, r3, r0
     f6c:	0099      	lsls	r1, r3, #2
     f6e:	4b06      	ldr	r3, [pc, #24]	; (f88 <_adc_get_regs+0x3c>)
     f70:	5ccb      	ldrb	r3, [r1, r3]
     f72:	429a      	cmp	r2, r3
     f74:	d0f7      	beq.n	f66 <_adc_get_regs+0x1a>
     f76:	3001      	adds	r0, #1
     f78:	b2c0      	uxtb	r0, r0
     f7a:	e7ec      	b.n	f56 <_adc_get_regs+0xa>
     f7c:	00000f49 	.word	0x00000f49
     f80:	00002320 	.word	0x00002320
     f84:	00000cf9 	.word	0x00000cf9
     f88:	00002304 	.word	0x00002304

00000f8c <_adc_init>:
     f8c:	b570      	push	{r4, r5, r6, lr}
     f8e:	0004      	movs	r4, r0
     f90:	000d      	movs	r5, r1
     f92:	4b3a      	ldr	r3, [pc, #232]	; (107c <_adc_init+0xf0>)
     f94:	18c0      	adds	r0, r0, r3
     f96:	4243      	negs	r3, r0
     f98:	4158      	adcs	r0, r3
     f9a:	b2c0      	uxtb	r0, r0
     f9c:	2294      	movs	r2, #148	; 0x94
     f9e:	4938      	ldr	r1, [pc, #224]	; (1080 <_adc_init+0xf4>)
     fa0:	4b38      	ldr	r3, [pc, #224]	; (1084 <_adc_init+0xf8>)
     fa2:	4798      	blx	r3
     fa4:	4b38      	ldr	r3, [pc, #224]	; (1088 <_adc_init+0xfc>)
     fa6:	681a      	ldr	r2, [r3, #0]
     fa8:	08d2      	lsrs	r2, r2, #3
     faa:	0212      	lsls	r2, r2, #8
     fac:	23e0      	movs	r3, #224	; 0xe0
     fae:	00db      	lsls	r3, r3, #3
     fb0:	401a      	ands	r2, r3
     fb2:	4936      	ldr	r1, [pc, #216]	; (108c <_adc_init+0x100>)
     fb4:	680b      	ldr	r3, [r1, #0]
     fb6:	6849      	ldr	r1, [r1, #4]
     fb8:	0149      	lsls	r1, r1, #5
     fba:	0edb      	lsrs	r3, r3, #27
     fbc:	430b      	orrs	r3, r1
     fbe:	21ff      	movs	r1, #255	; 0xff
     fc0:	400b      	ands	r3, r1
     fc2:	431a      	orrs	r2, r3
     fc4:	7e63      	ldrb	r3, [r4, #25]
     fc6:	09db      	lsrs	r3, r3, #7
     fc8:	d1fc      	bne.n	fc4 <_adc_init+0x38>
     fca:	7823      	ldrb	r3, [r4, #0]
     fcc:	079b      	lsls	r3, r3, #30
     fce:	d504      	bpl.n	fda <_adc_init+0x4e>
     fd0:	2300      	movs	r3, #0
     fd2:	7023      	strb	r3, [r4, #0]
     fd4:	7e63      	ldrb	r3, [r4, #25]
     fd6:	09db      	lsrs	r3, r3, #7
     fd8:	d1fc      	bne.n	fd4 <_adc_init+0x48>
     fda:	2301      	movs	r3, #1
     fdc:	7023      	strb	r3, [r4, #0]
     fde:	7e63      	ldrb	r3, [r4, #25]
     fe0:	09db      	lsrs	r3, r3, #7
     fe2:	d1fc      	bne.n	fde <_adc_init+0x52>
     fe4:	8522      	strh	r2, [r4, #40]	; 0x28
     fe6:	00ea      	lsls	r2, r5, #3
     fe8:	1b52      	subs	r2, r2, r5
     fea:	0091      	lsls	r1, r2, #2
     fec:	4b28      	ldr	r3, [pc, #160]	; (1090 <_adc_init+0x104>)
     fee:	185b      	adds	r3, r3, r1
     ff0:	789a      	ldrb	r2, [r3, #2]
     ff2:	7062      	strb	r2, [r4, #1]
     ff4:	78da      	ldrb	r2, [r3, #3]
     ff6:	70a2      	strb	r2, [r4, #2]
     ff8:	791a      	ldrb	r2, [r3, #4]
     ffa:	70e2      	strb	r2, [r4, #3]
     ffc:	7c1a      	ldrb	r2, [r3, #16]
     ffe:	7522      	strb	r2, [r4, #20]
    1000:	8ada      	ldrh	r2, [r3, #22]
    1002:	84a2      	strh	r2, [r4, #36]	; 0x24
    1004:	8b1a      	ldrh	r2, [r3, #24]
    1006:	84e2      	strh	r2, [r4, #38]	; 0x26
    1008:	7e99      	ldrb	r1, [r3, #26]
    100a:	222a      	movs	r2, #42	; 0x2a
    100c:	54a1      	strb	r1, [r4, r2]
    100e:	88db      	ldrh	r3, [r3, #6]
    1010:	80a3      	strh	r3, [r4, #4]
    1012:	7e63      	ldrb	r3, [r4, #25]
    1014:	09db      	lsrs	r3, r3, #7
    1016:	d1fc      	bne.n	1012 <_adc_init+0x86>
    1018:	00eb      	lsls	r3, r5, #3
    101a:	1b5b      	subs	r3, r3, r5
    101c:	009a      	lsls	r2, r3, #2
    101e:	4b1c      	ldr	r3, [pc, #112]	; (1090 <_adc_init+0x104>)
    1020:	189b      	adds	r3, r3, r2
    1022:	68db      	ldr	r3, [r3, #12]
    1024:	6123      	str	r3, [r4, #16]
    1026:	7e63      	ldrb	r3, [r4, #25]
    1028:	09db      	lsrs	r3, r3, #7
    102a:	d1fc      	bne.n	1026 <_adc_init+0x9a>
    102c:	00eb      	lsls	r3, r5, #3
    102e:	1b5b      	subs	r3, r3, r5
    1030:	009a      	lsls	r2, r3, #2
    1032:	4b17      	ldr	r3, [pc, #92]	; (1090 <_adc_init+0x104>)
    1034:	189b      	adds	r3, r3, r2
    1036:	7a1b      	ldrb	r3, [r3, #8]
    1038:	7223      	strb	r3, [r4, #8]
    103a:	7e63      	ldrb	r3, [r4, #25]
    103c:	09db      	lsrs	r3, r3, #7
    103e:	d1fc      	bne.n	103a <_adc_init+0xae>
    1040:	00eb      	lsls	r3, r5, #3
    1042:	1b5b      	subs	r3, r3, r5
    1044:	009a      	lsls	r2, r3, #2
    1046:	4b12      	ldr	r3, [pc, #72]	; (1090 <_adc_init+0x104>)
    1048:	189b      	adds	r3, r3, r2
    104a:	8a5b      	ldrh	r3, [r3, #18]
    104c:	83a3      	strh	r3, [r4, #28]
    104e:	7e63      	ldrb	r3, [r4, #25]
    1050:	09db      	lsrs	r3, r3, #7
    1052:	d1fc      	bne.n	104e <_adc_init+0xc2>
    1054:	00eb      	lsls	r3, r5, #3
    1056:	1b5b      	subs	r3, r3, r5
    1058:	009a      	lsls	r2, r3, #2
    105a:	4b0d      	ldr	r3, [pc, #52]	; (1090 <_adc_init+0x104>)
    105c:	189b      	adds	r3, r3, r2
    105e:	8a9b      	ldrh	r3, [r3, #20]
    1060:	8423      	strh	r3, [r4, #32]
    1062:	7e63      	ldrb	r3, [r4, #25]
    1064:	09db      	lsrs	r3, r3, #7
    1066:	d1fc      	bne.n	1062 <_adc_init+0xd6>
    1068:	00eb      	lsls	r3, r5, #3
    106a:	1b5d      	subs	r5, r3, r5
    106c:	00aa      	lsls	r2, r5, #2
    106e:	4b08      	ldr	r3, [pc, #32]	; (1090 <_adc_init+0x104>)
    1070:	189b      	adds	r3, r3, r2
    1072:	785b      	ldrb	r3, [r3, #1]
    1074:	7023      	strb	r3, [r4, #0]
    1076:	2000      	movs	r0, #0
    1078:	bd70      	pop	{r4, r5, r6, pc}
    107a:	46c0      	nop			; (mov r8, r8)
    107c:	bdffc000 	.word	0xbdffc000
    1080:	00002320 	.word	0x00002320
    1084:	00000cf9 	.word	0x00000cf9
    1088:	00806024 	.word	0x00806024
    108c:	00806020 	.word	0x00806020
    1090:	00002304 	.word	0x00002304

00001094 <_adc_sync_init>:
    1094:	b570      	push	{r4, r5, r6, lr}
    1096:	0005      	movs	r5, r0
    1098:	000c      	movs	r4, r1
    109a:	1e43      	subs	r3, r0, #1
    109c:	4198      	sbcs	r0, r3
    109e:	b2c0      	uxtb	r0, r0
    10a0:	22c5      	movs	r2, #197	; 0xc5
    10a2:	4906      	ldr	r1, [pc, #24]	; (10bc <_adc_sync_init+0x28>)
    10a4:	4b06      	ldr	r3, [pc, #24]	; (10c0 <_adc_sync_init+0x2c>)
    10a6:	4798      	blx	r3
    10a8:	602c      	str	r4, [r5, #0]
    10aa:	0020      	movs	r0, r4
    10ac:	4b05      	ldr	r3, [pc, #20]	; (10c4 <_adc_sync_init+0x30>)
    10ae:	4798      	blx	r3
    10b0:	0001      	movs	r1, r0
    10b2:	0020      	movs	r0, r4
    10b4:	4b04      	ldr	r3, [pc, #16]	; (10c8 <_adc_sync_init+0x34>)
    10b6:	4798      	blx	r3
    10b8:	bd70      	pop	{r4, r5, r6, pc}
    10ba:	46c0      	nop			; (mov r8, r8)
    10bc:	00002320 	.word	0x00002320
    10c0:	00000cf9 	.word	0x00000cf9
    10c4:	00000f4d 	.word	0x00000f4d
    10c8:	00000f8d 	.word	0x00000f8d

000010cc <_init_chip>:
    10cc:	b510      	push	{r4, lr}
    10ce:	4b06      	ldr	r3, [pc, #24]	; (10e8 <_init_chip+0x1c>)
    10d0:	685a      	ldr	r2, [r3, #4]
    10d2:	605a      	str	r2, [r3, #4]
    10d4:	4b05      	ldr	r3, [pc, #20]	; (10ec <_init_chip+0x20>)
    10d6:	4798      	blx	r3
    10d8:	4b05      	ldr	r3, [pc, #20]	; (10f0 <_init_chip+0x24>)
    10da:	4798      	blx	r3
    10dc:	4b05      	ldr	r3, [pc, #20]	; (10f4 <_init_chip+0x28>)
    10de:	4798      	blx	r3
    10e0:	20ff      	movs	r0, #255	; 0xff
    10e2:	4b05      	ldr	r3, [pc, #20]	; (10f8 <_init_chip+0x2c>)
    10e4:	4798      	blx	r3
    10e6:	bd10      	pop	{r4, pc}
    10e8:	41004000 	.word	0x41004000
    10ec:	00001351 	.word	0x00001351
    10f0:	0000187d 	.word	0x0000187d
    10f4:	000018c9 	.word	0x000018c9
    10f8:	000012a1 	.word	0x000012a1

000010fc <_dac_init>:
    10fc:	79c3      	ldrb	r3, [r0, #7]
    10fe:	09db      	lsrs	r3, r3, #7
    1100:	d1fc      	bne.n	10fc <_dac_init>
    1102:	79c3      	ldrb	r3, [r0, #7]
    1104:	09db      	lsrs	r3, r3, #7
    1106:	d1fc      	bne.n	1102 <_dac_init+0x6>
    1108:	7803      	ldrb	r3, [r0, #0]
    110a:	079b      	lsls	r3, r3, #30
    110c:	d507      	bpl.n	111e <_dac_init+0x22>
    110e:	2300      	movs	r3, #0
    1110:	7003      	strb	r3, [r0, #0]
    1112:	79c3      	ldrb	r3, [r0, #7]
    1114:	09db      	lsrs	r3, r3, #7
    1116:	d1fc      	bne.n	1112 <_dac_init+0x16>
    1118:	79c3      	ldrb	r3, [r0, #7]
    111a:	09db      	lsrs	r3, r3, #7
    111c:	d1fc      	bne.n	1118 <_dac_init+0x1c>
    111e:	2301      	movs	r3, #1
    1120:	7003      	strb	r3, [r0, #0]
    1122:	79c3      	ldrb	r3, [r0, #7]
    1124:	09db      	lsrs	r3, r3, #7
    1126:	d1fc      	bne.n	1122 <_dac_init+0x26>
    1128:	79c3      	ldrb	r3, [r0, #7]
    112a:	09db      	lsrs	r3, r3, #7
    112c:	d1fc      	bne.n	1128 <_dac_init+0x2c>
    112e:	7083      	strb	r3, [r0, #2]
    1130:	2201      	movs	r2, #1
    1132:	7042      	strb	r2, [r0, #1]
    1134:	7003      	strb	r3, [r0, #0]
    1136:	79c3      	ldrb	r3, [r0, #7]
    1138:	09db      	lsrs	r3, r3, #7
    113a:	d1fc      	bne.n	1136 <_dac_init+0x3a>
    113c:	2000      	movs	r0, #0
    113e:	4770      	bx	lr

00001140 <_dac_sync_init>:
    1140:	b570      	push	{r4, r5, r6, lr}
    1142:	0005      	movs	r5, r0
    1144:	000c      	movs	r4, r1
    1146:	1e43      	subs	r3, r0, #1
    1148:	4198      	sbcs	r0, r3
    114a:	b2c0      	uxtb	r0, r0
    114c:	2249      	movs	r2, #73	; 0x49
    114e:	4904      	ldr	r1, [pc, #16]	; (1160 <_dac_sync_init+0x20>)
    1150:	4b04      	ldr	r3, [pc, #16]	; (1164 <_dac_sync_init+0x24>)
    1152:	4798      	blx	r3
    1154:	602c      	str	r4, [r5, #0]
    1156:	0020      	movs	r0, r4
    1158:	4b03      	ldr	r3, [pc, #12]	; (1168 <_dac_sync_init+0x28>)
    115a:	4798      	blx	r3
    115c:	bd70      	pop	{r4, r5, r6, pc}
    115e:	46c0      	nop			; (mov r8, r8)
    1160:	00002338 	.word	0x00002338
    1164:	00000cf9 	.word	0x00000cf9
    1168:	000010fd 	.word	0x000010fd

0000116c <_ext_irq_init>:
    116c:	4b20      	ldr	r3, [pc, #128]	; (11f0 <_ext_irq_init+0x84>)
    116e:	785b      	ldrb	r3, [r3, #1]
    1170:	09db      	lsrs	r3, r3, #7
    1172:	d1fb      	bne.n	116c <_ext_irq_init>
    1174:	4b1e      	ldr	r3, [pc, #120]	; (11f0 <_ext_irq_init+0x84>)
    1176:	785b      	ldrb	r3, [r3, #1]
    1178:	09db      	lsrs	r3, r3, #7
    117a:	d1fb      	bne.n	1174 <_ext_irq_init+0x8>
    117c:	4b1c      	ldr	r3, [pc, #112]	; (11f0 <_ext_irq_init+0x84>)
    117e:	781b      	ldrb	r3, [r3, #0]
    1180:	079b      	lsls	r3, r3, #30
    1182:	d50a      	bpl.n	119a <_ext_irq_init+0x2e>
    1184:	2200      	movs	r2, #0
    1186:	4b1a      	ldr	r3, [pc, #104]	; (11f0 <_ext_irq_init+0x84>)
    1188:	701a      	strb	r2, [r3, #0]
    118a:	4b19      	ldr	r3, [pc, #100]	; (11f0 <_ext_irq_init+0x84>)
    118c:	785b      	ldrb	r3, [r3, #1]
    118e:	09db      	lsrs	r3, r3, #7
    1190:	d1fb      	bne.n	118a <_ext_irq_init+0x1e>
    1192:	4b17      	ldr	r3, [pc, #92]	; (11f0 <_ext_irq_init+0x84>)
    1194:	785b      	ldrb	r3, [r3, #1]
    1196:	09db      	lsrs	r3, r3, #7
    1198:	d1fb      	bne.n	1192 <_ext_irq_init+0x26>
    119a:	2201      	movs	r2, #1
    119c:	4b14      	ldr	r3, [pc, #80]	; (11f0 <_ext_irq_init+0x84>)
    119e:	701a      	strb	r2, [r3, #0]
    11a0:	4b13      	ldr	r3, [pc, #76]	; (11f0 <_ext_irq_init+0x84>)
    11a2:	785b      	ldrb	r3, [r3, #1]
    11a4:	09db      	lsrs	r3, r3, #7
    11a6:	d1fb      	bne.n	11a0 <_ext_irq_init+0x34>
    11a8:	4b11      	ldr	r3, [pc, #68]	; (11f0 <_ext_irq_init+0x84>)
    11aa:	785b      	ldrb	r3, [r3, #1]
    11ac:	09db      	lsrs	r3, r3, #7
    11ae:	d1fb      	bne.n	11a8 <_ext_irq_init+0x3c>
    11b0:	4b0f      	ldr	r3, [pc, #60]	; (11f0 <_ext_irq_init+0x84>)
    11b2:	2200      	movs	r2, #0
    11b4:	709a      	strb	r2, [r3, #2]
    11b6:	605a      	str	r2, [r3, #4]
    11b8:	615a      	str	r2, [r3, #20]
    11ba:	619a      	str	r2, [r3, #24]
    11bc:	61da      	str	r2, [r3, #28]
    11be:	781a      	ldrb	r2, [r3, #0]
    11c0:	2102      	movs	r1, #2
    11c2:	430a      	orrs	r2, r1
    11c4:	b2d2      	uxtb	r2, r2
    11c6:	701a      	strb	r2, [r3, #0]
    11c8:	4b09      	ldr	r3, [pc, #36]	; (11f0 <_ext_irq_init+0x84>)
    11ca:	785b      	ldrb	r3, [r3, #1]
    11cc:	09db      	lsrs	r3, r3, #7
    11ce:	d1fb      	bne.n	11c8 <_ext_irq_init+0x5c>
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    11d0:	4b08      	ldr	r3, [pc, #32]	; (11f4 <_ext_irq_init+0x88>)
    11d2:	2210      	movs	r2, #16
    11d4:	2180      	movs	r1, #128	; 0x80
    11d6:	505a      	str	r2, [r3, r1]
  __ASM volatile ("dsb 0xF":::"memory");
    11d8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    11dc:	f3bf 8f6f 	isb	sy
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    11e0:	3101      	adds	r1, #1
    11e2:	31ff      	adds	r1, #255	; 0xff
    11e4:	505a      	str	r2, [r3, r1]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    11e6:	601a      	str	r2, [r3, #0]
    11e8:	4b03      	ldr	r3, [pc, #12]	; (11f8 <_ext_irq_init+0x8c>)
    11ea:	6018      	str	r0, [r3, #0]
    11ec:	2000      	movs	r0, #0
    11ee:	4770      	bx	lr
    11f0:	40001800 	.word	0x40001800
    11f4:	e000e100 	.word	0xe000e100
    11f8:	20000140 	.word	0x20000140

000011fc <EIC_Handler>:
    11fc:	b530      	push	{r4, r5, lr}
    11fe:	b083      	sub	sp, #12
    1200:	4b21      	ldr	r3, [pc, #132]	; (1288 <EIC_Handler+0x8c>)
    1202:	691a      	ldr	r2, [r3, #16]
    1204:	68d9      	ldr	r1, [r3, #12]
    1206:	400a      	ands	r2, r1
    1208:	9201      	str	r2, [sp, #4]
    120a:	9a01      	ldr	r2, [sp, #4]
    120c:	611a      	str	r2, [r3, #16]
    120e:	4b1f      	ldr	r3, [pc, #124]	; (128c <EIC_Handler+0x90>)
    1210:	6818      	ldr	r0, [r3, #0]
    1212:	1e43      	subs	r3, r0, #1
    1214:	4198      	sbcs	r0, r3
    1216:	b2c0      	uxtb	r0, r0
    1218:	22d2      	movs	r2, #210	; 0xd2
    121a:	491d      	ldr	r1, [pc, #116]	; (1290 <EIC_Handler+0x94>)
    121c:	4b1d      	ldr	r3, [pc, #116]	; (1294 <EIC_Handler+0x98>)
    121e:	4798      	blx	r3
    1220:	e027      	b.n	1272 <EIC_Handler+0x76>
    1222:	3901      	subs	r1, #1
    1224:	b2cd      	uxtb	r5, r1
    1226:	42ac      	cmp	r4, r5
    1228:	d80d      	bhi.n	1246 <EIC_Handler+0x4a>
    122a:	192a      	adds	r2, r5, r4
    122c:	1052      	asrs	r2, r2, #1
    122e:	b2d1      	uxtb	r1, r2
    1230:	23ff      	movs	r3, #255	; 0xff
    1232:	4013      	ands	r3, r2
    1234:	00db      	lsls	r3, r3, #3
    1236:	4a18      	ldr	r2, [pc, #96]	; (1298 <EIC_Handler+0x9c>)
    1238:	5c9b      	ldrb	r3, [r3, r2]
    123a:	4283      	cmp	r3, r0
    123c:	d003      	beq.n	1246 <EIC_Handler+0x4a>
    123e:	daf0      	bge.n	1222 <EIC_Handler+0x26>
    1240:	3101      	adds	r1, #1
    1242:	b2cc      	uxtb	r4, r1
    1244:	e7ef      	b.n	1226 <EIC_Handler+0x2a>
    1246:	2201      	movs	r2, #1
    1248:	4082      	lsls	r2, r0
    124a:	9b01      	ldr	r3, [sp, #4]
    124c:	4393      	bics	r3, r2
    124e:	9301      	str	r3, [sp, #4]
    1250:	9801      	ldr	r0, [sp, #4]
    1252:	4b12      	ldr	r3, [pc, #72]	; (129c <EIC_Handler+0xa0>)
    1254:	4798      	blx	r3
    1256:	3801      	subs	r0, #1
    1258:	b240      	sxtb	r0, r0
    125a:	1c43      	adds	r3, r0, #1
    125c:	d002      	beq.n	1264 <EIC_Handler+0x68>
    125e:	2500      	movs	r5, #0
    1260:	2400      	movs	r4, #0
    1262:	e7e0      	b.n	1226 <EIC_Handler+0x2a>
    1264:	4b08      	ldr	r3, [pc, #32]	; (1288 <EIC_Handler+0x8c>)
    1266:	691a      	ldr	r2, [r3, #16]
    1268:	68d9      	ldr	r1, [r3, #12]
    126a:	400a      	ands	r2, r1
    126c:	9201      	str	r2, [sp, #4]
    126e:	9a01      	ldr	r2, [sp, #4]
    1270:	611a      	str	r2, [r3, #16]
    1272:	9b01      	ldr	r3, [sp, #4]
    1274:	2b00      	cmp	r3, #0
    1276:	d005      	beq.n	1284 <EIC_Handler+0x88>
    1278:	9801      	ldr	r0, [sp, #4]
    127a:	4b08      	ldr	r3, [pc, #32]	; (129c <EIC_Handler+0xa0>)
    127c:	4798      	blx	r3
    127e:	3801      	subs	r0, #1
    1280:	b240      	sxtb	r0, r0
    1282:	e7ea      	b.n	125a <EIC_Handler+0x5e>
    1284:	b003      	add	sp, #12
    1286:	bd30      	pop	{r4, r5, pc}
    1288:	40001800 	.word	0x40001800
    128c:	20000140 	.word	0x20000140
    1290:	00002358 	.word	0x00002358
    1294:	00000cf9 	.word	0x00000cf9
    1298:	00002350 	.word	0x00002350
    129c:	000020ed 	.word	0x000020ed

000012a0 <_gclk_init_generators_by_fref>:
    12a0:	07c3      	lsls	r3, r0, #31
    12a2:	d50a      	bpl.n	12ba <_gclk_init_generators_by_fref+0x1a>
    12a4:	4b05      	ldr	r3, [pc, #20]	; (12bc <_gclk_init_generators_by_fref+0x1c>)
    12a6:	2280      	movs	r2, #128	; 0x80
    12a8:	0052      	lsls	r2, r2, #1
    12aa:	609a      	str	r2, [r3, #8]
    12ac:	2283      	movs	r2, #131	; 0x83
    12ae:	0252      	lsls	r2, r2, #9
    12b0:	605a      	str	r2, [r3, #4]
    12b2:	4b02      	ldr	r3, [pc, #8]	; (12bc <_gclk_init_generators_by_fref+0x1c>)
    12b4:	785b      	ldrb	r3, [r3, #1]
    12b6:	09db      	lsrs	r3, r3, #7
    12b8:	d1fb      	bne.n	12b2 <_gclk_init_generators_by_fref+0x12>
    12ba:	4770      	bx	lr
    12bc:	40000c00 	.word	0x40000c00

000012c0 <_flash_init>:
    12c0:	b570      	push	{r4, r5, r6, lr}
    12c2:	0005      	movs	r5, r0
    12c4:	000c      	movs	r4, r1
    12c6:	2800      	cmp	r0, #0
    12c8:	d01c      	beq.n	1304 <_flash_init+0x44>
    12ca:	4b10      	ldr	r3, [pc, #64]	; (130c <_flash_init+0x4c>)
    12cc:	4299      	cmp	r1, r3
    12ce:	d01b      	beq.n	1308 <_flash_init+0x48>
    12d0:	2000      	movs	r0, #0
    12d2:	2246      	movs	r2, #70	; 0x46
    12d4:	490e      	ldr	r1, [pc, #56]	; (1310 <_flash_init+0x50>)
    12d6:	4b0f      	ldr	r3, [pc, #60]	; (1314 <_flash_init+0x54>)
    12d8:	4798      	blx	r3
    12da:	612c      	str	r4, [r5, #16]
    12dc:	6862      	ldr	r2, [r4, #4]
    12de:	239e      	movs	r3, #158	; 0x9e
    12e0:	4013      	ands	r3, r2
    12e2:	6063      	str	r3, [r4, #4]
    12e4:	4b0c      	ldr	r3, [pc, #48]	; (1318 <_flash_init+0x58>)
    12e6:	601d      	str	r5, [r3, #0]
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    12e8:	4b0c      	ldr	r3, [pc, #48]	; (131c <_flash_init+0x5c>)
    12ea:	2220      	movs	r2, #32
    12ec:	2180      	movs	r1, #128	; 0x80
    12ee:	505a      	str	r2, [r3, r1]
  __ASM volatile ("dsb 0xF":::"memory");
    12f0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    12f4:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    12f8:	3101      	adds	r1, #1
    12fa:	31ff      	adds	r1, #255	; 0xff
    12fc:	505a      	str	r2, [r3, r1]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    12fe:	601a      	str	r2, [r3, #0]
    1300:	2000      	movs	r0, #0
    1302:	bd70      	pop	{r4, r5, r6, pc}
    1304:	2000      	movs	r0, #0
    1306:	e7e4      	b.n	12d2 <_flash_init+0x12>
    1308:	2001      	movs	r0, #1
    130a:	e7e2      	b.n	12d2 <_flash_init+0x12>
    130c:	41004000 	.word	0x41004000
    1310:	00002370 	.word	0x00002370
    1314:	00000cf9 	.word	0x00000cf9
    1318:	20000144 	.word	0x20000144
    131c:	e000e100 	.word	0xe000e100

00001320 <NVMCTRL_Handler>:
    1320:	b510      	push	{r4, lr}
    1322:	4b0a      	ldr	r3, [pc, #40]	; (134c <NVMCTRL_Handler+0x2c>)
    1324:	6818      	ldr	r0, [r3, #0]
    1326:	6903      	ldr	r3, [r0, #16]
    1328:	7d1a      	ldrb	r2, [r3, #20]
    132a:	07d2      	lsls	r2, r2, #31
    132c:	d504      	bpl.n	1338 <NVMCTRL_Handler+0x18>
    132e:	6803      	ldr	r3, [r0, #0]
    1330:	2b00      	cmp	r3, #0
    1332:	d000      	beq.n	1336 <NVMCTRL_Handler+0x16>
    1334:	4798      	blx	r3
    1336:	bd10      	pop	{r4, pc}
    1338:	7d1a      	ldrb	r2, [r3, #20]
    133a:	0792      	lsls	r2, r2, #30
    133c:	d5fb      	bpl.n	1336 <NVMCTRL_Handler+0x16>
    133e:	2202      	movs	r2, #2
    1340:	751a      	strb	r2, [r3, #20]
    1342:	6843      	ldr	r3, [r0, #4]
    1344:	2b00      	cmp	r3, #0
    1346:	d0f6      	beq.n	1336 <NVMCTRL_Handler+0x16>
    1348:	4798      	blx	r3
    134a:	e7f4      	b.n	1336 <NVMCTRL_Handler+0x16>
    134c:	20000144 	.word	0x20000144

00001350 <_pm_init>:
    1350:	4b06      	ldr	r3, [pc, #24]	; (136c <_pm_init+0x1c>)
    1352:	7a1a      	ldrb	r2, [r3, #8]
    1354:	b2d2      	uxtb	r2, r2
    1356:	721a      	strb	r2, [r3, #8]
    1358:	7a5a      	ldrb	r2, [r3, #9]
    135a:	b2d2      	uxtb	r2, r2
    135c:	725a      	strb	r2, [r3, #9]
    135e:	7a9a      	ldrb	r2, [r3, #10]
    1360:	b2d2      	uxtb	r2, r2
    1362:	729a      	strb	r2, [r3, #10]
    1364:	7ada      	ldrb	r2, [r3, #11]
    1366:	b2d2      	uxtb	r2, r2
    1368:	72da      	strb	r2, [r3, #11]
    136a:	4770      	bx	lr
    136c:	40000400 	.word	0x40000400

00001370 <_sercom_get_hardware_index>:
    1370:	4b02      	ldr	r3, [pc, #8]	; (137c <_sercom_get_hardware_index+0xc>)
    1372:	469c      	mov	ip, r3
    1374:	4460      	add	r0, ip
    1376:	0a80      	lsrs	r0, r0, #10
    1378:	b2c0      	uxtb	r0, r0
    137a:	4770      	bx	lr
    137c:	bdfff800 	.word	0xbdfff800

00001380 <_sercom_usart_interrupt_handler>:
    1380:	b510      	push	{r4, lr}
    1382:	6983      	ldr	r3, [r0, #24]
    1384:	7b9a      	ldrb	r2, [r3, #14]
    1386:	07d2      	lsls	r2, r2, #31
    1388:	d502      	bpl.n	1390 <_sercom_usart_interrupt_handler+0x10>
    138a:	7b5a      	ldrb	r2, [r3, #13]
    138c:	07d2      	lsls	r2, r2, #31
    138e:	d40e      	bmi.n	13ae <_sercom_usart_interrupt_handler+0x2e>
    1390:	7b9a      	ldrb	r2, [r3, #14]
    1392:	0792      	lsls	r2, r2, #30
    1394:	d502      	bpl.n	139c <_sercom_usart_interrupt_handler+0x1c>
    1396:	7b5a      	ldrb	r2, [r3, #13]
    1398:	0792      	lsls	r2, r2, #30
    139a:	d40d      	bmi.n	13b8 <_sercom_usart_interrupt_handler+0x38>
    139c:	7b9a      	ldrb	r2, [r3, #14]
    139e:	0752      	lsls	r2, r2, #29
    13a0:	d504      	bpl.n	13ac <_sercom_usart_interrupt_handler+0x2c>
    13a2:	8a1a      	ldrh	r2, [r3, #16]
    13a4:	0752      	lsls	r2, r2, #29
    13a6:	d00c      	beq.n	13c2 <_sercom_usart_interrupt_handler+0x42>
    13a8:	4a08      	ldr	r2, [pc, #32]	; (13cc <_sercom_usart_interrupt_handler+0x4c>)
    13aa:	821a      	strh	r2, [r3, #16]
    13ac:	bd10      	pop	{r4, pc}
    13ae:	2201      	movs	r2, #1
    13b0:	731a      	strb	r2, [r3, #12]
    13b2:	6803      	ldr	r3, [r0, #0]
    13b4:	4798      	blx	r3
    13b6:	e7f9      	b.n	13ac <_sercom_usart_interrupt_handler+0x2c>
    13b8:	2202      	movs	r2, #2
    13ba:	731a      	strb	r2, [r3, #12]
    13bc:	6883      	ldr	r3, [r0, #8]
    13be:	4798      	blx	r3
    13c0:	e7f4      	b.n	13ac <_sercom_usart_interrupt_handler+0x2c>
    13c2:	6842      	ldr	r2, [r0, #4]
    13c4:	8b19      	ldrh	r1, [r3, #24]
    13c6:	b2c9      	uxtb	r1, r1
    13c8:	4790      	blx	r2
    13ca:	e7ef      	b.n	13ac <_sercom_usart_interrupt_handler+0x2c>
    13cc:	ffff8007 	.word	0xffff8007

000013d0 <_sercom_get_irq_num>:
    13d0:	b510      	push	{r4, lr}
    13d2:	4b02      	ldr	r3, [pc, #8]	; (13dc <_sercom_get_irq_num+0xc>)
    13d4:	4798      	blx	r3
    13d6:	3007      	adds	r0, #7
    13d8:	b2c0      	uxtb	r0, r0
    13da:	bd10      	pop	{r4, pc}
    13dc:	00001371 	.word	0x00001371

000013e0 <_sercom_init_irq_param>:
    13e0:	4b03      	ldr	r3, [pc, #12]	; (13f0 <_sercom_init_irq_param+0x10>)
    13e2:	4298      	cmp	r0, r3
    13e4:	d000      	beq.n	13e8 <_sercom_init_irq_param+0x8>
    13e6:	4770      	bx	lr
    13e8:	4b02      	ldr	r3, [pc, #8]	; (13f4 <_sercom_init_irq_param+0x14>)
    13ea:	6019      	str	r1, [r3, #0]
    13ec:	e7fb      	b.n	13e6 <_sercom_init_irq_param+0x6>
    13ee:	46c0      	nop			; (mov r8, r8)
    13f0:	42001400 	.word	0x42001400
    13f4:	20000148 	.word	0x20000148

000013f8 <_get_sercom_index>:
    13f8:	b510      	push	{r4, lr}
    13fa:	4b0a      	ldr	r3, [pc, #40]	; (1424 <_get_sercom_index+0x2c>)
    13fc:	4798      	blx	r3
    13fe:	0003      	movs	r3, r0
    1400:	2000      	movs	r0, #0
    1402:	2800      	cmp	r0, #0
    1404:	d006      	beq.n	1414 <_get_sercom_index+0x1c>
    1406:	4a08      	ldr	r2, [pc, #32]	; (1428 <_get_sercom_index+0x30>)
    1408:	4908      	ldr	r1, [pc, #32]	; (142c <_get_sercom_index+0x34>)
    140a:	2000      	movs	r0, #0
    140c:	4b08      	ldr	r3, [pc, #32]	; (1430 <_get_sercom_index+0x38>)
    140e:	4798      	blx	r3
    1410:	2000      	movs	r0, #0
    1412:	bd10      	pop	{r4, pc}
    1414:	0102      	lsls	r2, r0, #4
    1416:	4907      	ldr	r1, [pc, #28]	; (1434 <_get_sercom_index+0x3c>)
    1418:	5c52      	ldrb	r2, [r2, r1]
    141a:	4293      	cmp	r3, r2
    141c:	d0f9      	beq.n	1412 <_get_sercom_index+0x1a>
    141e:	3001      	adds	r0, #1
    1420:	b2c0      	uxtb	r0, r0
    1422:	e7ee      	b.n	1402 <_get_sercom_index+0xa>
    1424:	00001371 	.word	0x00001371
    1428:	0000024e 	.word	0x0000024e
    142c:	000023d8 	.word	0x000023d8
    1430:	00000cf9 	.word	0x00000cf9
    1434:	00002390 	.word	0x00002390

00001438 <_usart_init>:
    1438:	b510      	push	{r4, lr}
    143a:	0004      	movs	r4, r0
    143c:	4b19      	ldr	r3, [pc, #100]	; (14a4 <_usart_init+0x6c>)
    143e:	4798      	blx	r3
    1440:	8a23      	ldrh	r3, [r4, #16]
    1442:	0bdb      	lsrs	r3, r3, #15
    1444:	d1fc      	bne.n	1440 <_usart_init+0x8>
    1446:	8a23      	ldrh	r3, [r4, #16]
    1448:	0bdb      	lsrs	r3, r3, #15
    144a:	d1fc      	bne.n	1446 <_usart_init+0xe>
    144c:	6823      	ldr	r3, [r4, #0]
    144e:	079b      	lsls	r3, r3, #30
    1450:	d507      	bpl.n	1462 <_usart_init+0x2a>
    1452:	2300      	movs	r3, #0
    1454:	6023      	str	r3, [r4, #0]
    1456:	8a23      	ldrh	r3, [r4, #16]
    1458:	0bdb      	lsrs	r3, r3, #15
    145a:	d1fc      	bne.n	1456 <_usart_init+0x1e>
    145c:	8a23      	ldrh	r3, [r4, #16]
    145e:	0bdb      	lsrs	r3, r3, #15
    1460:	d1fc      	bne.n	145c <_usart_init+0x24>
    1462:	2301      	movs	r3, #1
    1464:	6023      	str	r3, [r4, #0]
    1466:	8a23      	ldrh	r3, [r4, #16]
    1468:	0bdb      	lsrs	r3, r3, #15
    146a:	d1fc      	bne.n	1466 <_usart_init+0x2e>
    146c:	8a23      	ldrh	r3, [r4, #16]
    146e:	0bdb      	lsrs	r3, r3, #15
    1470:	d1fc      	bne.n	146c <_usart_init+0x34>
    1472:	0102      	lsls	r2, r0, #4
    1474:	4b0c      	ldr	r3, [pc, #48]	; (14a8 <_usart_init+0x70>)
    1476:	189b      	adds	r3, r3, r2
    1478:	685b      	ldr	r3, [r3, #4]
    147a:	6023      	str	r3, [r4, #0]
    147c:	8a23      	ldrh	r3, [r4, #16]
    147e:	0bdb      	lsrs	r3, r3, #15
    1480:	d1fc      	bne.n	147c <_usart_init+0x44>
    1482:	0102      	lsls	r2, r0, #4
    1484:	4b08      	ldr	r3, [pc, #32]	; (14a8 <_usart_init+0x70>)
    1486:	189b      	adds	r3, r3, r2
    1488:	689b      	ldr	r3, [r3, #8]
    148a:	6063      	str	r3, [r4, #4]
    148c:	8a23      	ldrh	r3, [r4, #16]
    148e:	0bdb      	lsrs	r3, r3, #15
    1490:	d1fc      	bne.n	148c <_usart_init+0x54>
    1492:	0100      	lsls	r0, r0, #4
    1494:	4b04      	ldr	r3, [pc, #16]	; (14a8 <_usart_init+0x70>)
    1496:	1818      	adds	r0, r3, r0
    1498:	8983      	ldrh	r3, [r0, #12]
    149a:	8163      	strh	r3, [r4, #10]
    149c:	7b83      	ldrb	r3, [r0, #14]
    149e:	7223      	strb	r3, [r4, #8]
    14a0:	2000      	movs	r0, #0
    14a2:	bd10      	pop	{r4, pc}
    14a4:	000013f9 	.word	0x000013f9
    14a8:	00002390 	.word	0x00002390

000014ac <_usart_async_init>:
    14ac:	b570      	push	{r4, r5, r6, lr}
    14ae:	0006      	movs	r6, r0
    14b0:	000c      	movs	r4, r1
    14b2:	1e43      	subs	r3, r0, #1
    14b4:	4198      	sbcs	r0, r3
    14b6:	b2c0      	uxtb	r0, r0
    14b8:	22b1      	movs	r2, #177	; 0xb1
    14ba:	4919      	ldr	r1, [pc, #100]	; (1520 <_usart_async_init+0x74>)
    14bc:	4b19      	ldr	r3, [pc, #100]	; (1524 <_usart_async_init+0x78>)
    14be:	4798      	blx	r3
    14c0:	0020      	movs	r0, r4
    14c2:	4b19      	ldr	r3, [pc, #100]	; (1528 <_usart_async_init+0x7c>)
    14c4:	4798      	blx	r3
    14c6:	1e05      	subs	r5, r0, #0
    14c8:	d001      	beq.n	14ce <_usart_async_init+0x22>
    14ca:	0028      	movs	r0, r5
    14cc:	bd70      	pop	{r4, r5, r6, pc}
    14ce:	61b4      	str	r4, [r6, #24]
    14d0:	0031      	movs	r1, r6
    14d2:	0020      	movs	r0, r4
    14d4:	4b15      	ldr	r3, [pc, #84]	; (152c <_usart_async_init+0x80>)
    14d6:	4798      	blx	r3
    14d8:	0020      	movs	r0, r4
    14da:	4b15      	ldr	r3, [pc, #84]	; (1530 <_usart_async_init+0x84>)
    14dc:	4798      	blx	r3
    14de:	b243      	sxtb	r3, r0
  if ((int32_t)(IRQn) >= 0)
    14e0:	2b00      	cmp	r3, #0
    14e2:	db0a      	blt.n	14fa <_usart_async_init+0x4e>
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    14e4:	211f      	movs	r1, #31
    14e6:	4001      	ands	r1, r0
    14e8:	2201      	movs	r2, #1
    14ea:	408a      	lsls	r2, r1
    14ec:	2180      	movs	r1, #128	; 0x80
    14ee:	4c11      	ldr	r4, [pc, #68]	; (1534 <_usart_async_init+0x88>)
    14f0:	5062      	str	r2, [r4, r1]
  __ASM volatile ("dsb 0xF":::"memory");
    14f2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    14f6:	f3bf 8f6f 	isb	sy
  if ((int32_t)(IRQn) >= 0)
    14fa:	2b00      	cmp	r3, #0
    14fc:	db07      	blt.n	150e <_usart_async_init+0x62>
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    14fe:	211f      	movs	r1, #31
    1500:	4001      	ands	r1, r0
    1502:	2201      	movs	r2, #1
    1504:	408a      	lsls	r2, r1
    1506:	21c0      	movs	r1, #192	; 0xc0
    1508:	0049      	lsls	r1, r1, #1
    150a:	4c0a      	ldr	r4, [pc, #40]	; (1534 <_usart_async_init+0x88>)
    150c:	5062      	str	r2, [r4, r1]
  if ((int32_t)(IRQn) >= 0)
    150e:	2b00      	cmp	r3, #0
    1510:	dbdb      	blt.n	14ca <_usart_async_init+0x1e>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1512:	231f      	movs	r3, #31
    1514:	4018      	ands	r0, r3
    1516:	3b1e      	subs	r3, #30
    1518:	4083      	lsls	r3, r0
    151a:	4a06      	ldr	r2, [pc, #24]	; (1534 <_usart_async_init+0x88>)
    151c:	6013      	str	r3, [r2, #0]
    151e:	e7d4      	b.n	14ca <_usart_async_init+0x1e>
    1520:	000023d8 	.word	0x000023d8
    1524:	00000cf9 	.word	0x00000cf9
    1528:	00001439 	.word	0x00001439
    152c:	000013e1 	.word	0x000013e1
    1530:	000013d1 	.word	0x000013d1
    1534:	e000e100 	.word	0xe000e100

00001538 <_usart_async_enable>:
    1538:	6982      	ldr	r2, [r0, #24]
    153a:	6813      	ldr	r3, [r2, #0]
    153c:	2102      	movs	r1, #2
    153e:	430b      	orrs	r3, r1
    1540:	6013      	str	r3, [r2, #0]
    1542:	8a13      	ldrh	r3, [r2, #16]
    1544:	0bdb      	lsrs	r3, r3, #15
    1546:	d1fc      	bne.n	1542 <_usart_async_enable+0xa>
    1548:	4770      	bx	lr

0000154a <_usart_async_write_byte>:
    154a:	6983      	ldr	r3, [r0, #24]
    154c:	b289      	uxth	r1, r1
    154e:	8319      	strh	r1, [r3, #24]
    1550:	4770      	bx	lr

00001552 <_usart_async_enable_byte_sent_irq>:
    1552:	6983      	ldr	r3, [r0, #24]
    1554:	2201      	movs	r2, #1
    1556:	735a      	strb	r2, [r3, #13]
    1558:	4770      	bx	lr

0000155a <_usart_async_enable_tx_done_irq>:
    155a:	6983      	ldr	r3, [r0, #24]
    155c:	2202      	movs	r2, #2
    155e:	735a      	strb	r2, [r3, #13]
    1560:	4770      	bx	lr
	...

00001564 <_usart_async_set_irq_state>:
    1564:	b570      	push	{r4, r5, r6, lr}
    1566:	0004      	movs	r4, r0
    1568:	000d      	movs	r5, r1
    156a:	0016      	movs	r6, r2
    156c:	1e43      	subs	r3, r0, #1
    156e:	4198      	sbcs	r0, r3
    1570:	b2c0      	uxtb	r0, r0
    1572:	2284      	movs	r2, #132	; 0x84
    1574:	0092      	lsls	r2, r2, #2
    1576:	4911      	ldr	r1, [pc, #68]	; (15bc <_usart_async_set_irq_state+0x58>)
    1578:	4b11      	ldr	r3, [pc, #68]	; (15c0 <_usart_async_set_irq_state+0x5c>)
    157a:	4798      	blx	r3
    157c:	2d00      	cmp	r5, #0
    157e:	d009      	beq.n	1594 <_usart_async_set_irq_state+0x30>
    1580:	2d02      	cmp	r5, #2
    1582:	d007      	beq.n	1594 <_usart_async_set_irq_state+0x30>
    1584:	2d01      	cmp	r5, #1
    1586:	d10f      	bne.n	15a8 <_usart_async_set_irq_state+0x44>
    1588:	69a3      	ldr	r3, [r4, #24]
    158a:	2e00      	cmp	r6, #0
    158c:	d013      	beq.n	15b6 <_usart_async_set_irq_state+0x52>
    158e:	2204      	movs	r2, #4
    1590:	735a      	strb	r2, [r3, #13]
    1592:	e009      	b.n	15a8 <_usart_async_set_irq_state+0x44>
    1594:	69a3      	ldr	r3, [r4, #24]
    1596:	2e00      	cmp	r6, #0
    1598:	d107      	bne.n	15aa <_usart_async_set_irq_state+0x46>
    159a:	2201      	movs	r2, #1
    159c:	731a      	strb	r2, [r3, #12]
    159e:	69a3      	ldr	r3, [r4, #24]
    15a0:	2e00      	cmp	r6, #0
    15a2:	d105      	bne.n	15b0 <_usart_async_set_irq_state+0x4c>
    15a4:	2202      	movs	r2, #2
    15a6:	731a      	strb	r2, [r3, #12]
    15a8:	bd70      	pop	{r4, r5, r6, pc}
    15aa:	2201      	movs	r2, #1
    15ac:	735a      	strb	r2, [r3, #13]
    15ae:	e7f6      	b.n	159e <_usart_async_set_irq_state+0x3a>
    15b0:	2202      	movs	r2, #2
    15b2:	735a      	strb	r2, [r3, #13]
    15b4:	e7f8      	b.n	15a8 <_usart_async_set_irq_state+0x44>
    15b6:	2204      	movs	r2, #4
    15b8:	731a      	strb	r2, [r3, #12]
    15ba:	e7f5      	b.n	15a8 <_usart_async_set_irq_state+0x44>
    15bc:	000023d8 	.word	0x000023d8
    15c0:	00000cf9 	.word	0x00000cf9

000015c4 <SERCOM3_Handler>:
    15c4:	b510      	push	{r4, lr}
    15c6:	4b02      	ldr	r3, [pc, #8]	; (15d0 <SERCOM3_Handler+0xc>)
    15c8:	6818      	ldr	r0, [r3, #0]
    15ca:	4b02      	ldr	r3, [pc, #8]	; (15d4 <SERCOM3_Handler+0x10>)
    15cc:	4798      	blx	r3
    15ce:	bd10      	pop	{r4, pc}
    15d0:	20000148 	.word	0x20000148
    15d4:	00001381 	.word	0x00001381

000015d8 <_spi_m_sync_init>:
    15d8:	b570      	push	{r4, r5, r6, lr}
    15da:	0006      	movs	r6, r0
    15dc:	000c      	movs	r4, r1
    15de:	0008      	movs	r0, r1
    15e0:	4b62      	ldr	r3, [pc, #392]	; (176c <_spi_m_sync_init+0x194>)
    15e2:	4798      	blx	r3
    15e4:	2300      	movs	r3, #0
    15e6:	2b00      	cmp	r3, #0
    15e8:	d100      	bne.n	15ec <_spi_m_sync_init+0x14>
    15ea:	e06c      	b.n	16c6 <_spi_m_sync_init+0xee>
    15ec:	2500      	movs	r5, #0
    15ee:	2e00      	cmp	r6, #0
    15f0:	d100      	bne.n	15f4 <_spi_m_sync_init+0x1c>
    15f2:	e074      	b.n	16de <_spi_m_sync_init+0x106>
    15f4:	2c00      	cmp	r4, #0
    15f6:	d100      	bne.n	15fa <_spi_m_sync_init+0x22>
    15f8:	e06f      	b.n	16da <_spi_m_sync_init+0x102>
    15fa:	2001      	movs	r0, #1
    15fc:	4a5c      	ldr	r2, [pc, #368]	; (1770 <_spi_m_sync_init+0x198>)
    15fe:	495d      	ldr	r1, [pc, #372]	; (1774 <_spi_m_sync_init+0x19c>)
    1600:	4b5d      	ldr	r3, [pc, #372]	; (1778 <_spi_m_sync_init+0x1a0>)
    1602:	4798      	blx	r3
    1604:	2d00      	cmp	r5, #0
    1606:	d100      	bne.n	160a <_spi_m_sync_init+0x32>
    1608:	e0ac      	b.n	1764 <_spi_m_sync_init+0x18c>
    160a:	8a23      	ldrh	r3, [r4, #16]
    160c:	0bdb      	lsrs	r3, r3, #15
    160e:	d1fc      	bne.n	160a <_spi_m_sync_init+0x32>
    1610:	8a23      	ldrh	r3, [r4, #16]
    1612:	0bdb      	lsrs	r3, r3, #15
    1614:	d1fc      	bne.n	1610 <_spi_m_sync_init+0x38>
    1616:	6823      	ldr	r3, [r4, #0]
    1618:	079b      	lsls	r3, r3, #30
    161a:	d507      	bpl.n	162c <_spi_m_sync_init+0x54>
    161c:	2300      	movs	r3, #0
    161e:	6023      	str	r3, [r4, #0]
    1620:	8a23      	ldrh	r3, [r4, #16]
    1622:	0bdb      	lsrs	r3, r3, #15
    1624:	d1fc      	bne.n	1620 <_spi_m_sync_init+0x48>
    1626:	8a23      	ldrh	r3, [r4, #16]
    1628:	0bdb      	lsrs	r3, r3, #15
    162a:	d1fc      	bne.n	1626 <_spi_m_sync_init+0x4e>
    162c:	2301      	movs	r3, #1
    162e:	6023      	str	r3, [r4, #0]
    1630:	8a23      	ldrh	r3, [r4, #16]
    1632:	0bdb      	lsrs	r3, r3, #15
    1634:	d1fc      	bne.n	1630 <_spi_m_sync_init+0x58>
    1636:	8a23      	ldrh	r3, [r4, #16]
    1638:	0bdb      	lsrs	r3, r3, #15
    163a:	d1fc      	bne.n	1636 <_spi_m_sync_init+0x5e>
    163c:	6034      	str	r4, [r6, #0]
    163e:	782b      	ldrb	r3, [r5, #0]
    1640:	786a      	ldrb	r2, [r5, #1]
    1642:	0212      	lsls	r2, r2, #8
    1644:	431a      	orrs	r2, r3
    1646:	78ab      	ldrb	r3, [r5, #2]
    1648:	041b      	lsls	r3, r3, #16
    164a:	431a      	orrs	r2, r3
    164c:	78eb      	ldrb	r3, [r5, #3]
    164e:	061b      	lsls	r3, r3, #24
    1650:	4313      	orrs	r3, r2
    1652:	221c      	movs	r2, #28
    1654:	4013      	ands	r3, r2
    1656:	2b08      	cmp	r3, #8
    1658:	d043      	beq.n	16e2 <_spi_m_sync_init+0x10a>
    165a:	2c00      	cmp	r4, #0
    165c:	d100      	bne.n	1660 <_spi_m_sync_init+0x88>
    165e:	e07d      	b.n	175c <_spi_m_sync_init+0x184>
    1660:	2d00      	cmp	r5, #0
    1662:	d100      	bne.n	1666 <_spi_m_sync_init+0x8e>
    1664:	e078      	b.n	1758 <_spi_m_sync_init+0x180>
    1666:	2001      	movs	r0, #1
    1668:	4a44      	ldr	r2, [pc, #272]	; (177c <_spi_m_sync_init+0x1a4>)
    166a:	4942      	ldr	r1, [pc, #264]	; (1774 <_spi_m_sync_init+0x19c>)
    166c:	4b42      	ldr	r3, [pc, #264]	; (1778 <_spi_m_sync_init+0x1a0>)
    166e:	4798      	blx	r3
    1670:	782b      	ldrb	r3, [r5, #0]
    1672:	786a      	ldrb	r2, [r5, #1]
    1674:	0212      	lsls	r2, r2, #8
    1676:	431a      	orrs	r2, r3
    1678:	78ab      	ldrb	r3, [r5, #2]
    167a:	041b      	lsls	r3, r3, #16
    167c:	431a      	orrs	r2, r3
    167e:	78eb      	ldrb	r3, [r5, #3]
    1680:	061b      	lsls	r3, r3, #24
    1682:	4313      	orrs	r3, r2
    1684:	4a3e      	ldr	r2, [pc, #248]	; (1780 <_spi_m_sync_init+0x1a8>)
    1686:	4013      	ands	r3, r2
    1688:	6023      	str	r3, [r4, #0]
    168a:	8a23      	ldrh	r3, [r4, #16]
    168c:	0bdb      	lsrs	r3, r3, #15
    168e:	d1fc      	bne.n	168a <_spi_m_sync_init+0xb2>
    1690:	792b      	ldrb	r3, [r5, #4]
    1692:	796a      	ldrb	r2, [r5, #5]
    1694:	0212      	lsls	r2, r2, #8
    1696:	431a      	orrs	r2, r3
    1698:	79ab      	ldrb	r3, [r5, #6]
    169a:	041b      	lsls	r3, r3, #16
    169c:	431a      	orrs	r2, r3
    169e:	79eb      	ldrb	r3, [r5, #7]
    16a0:	061b      	lsls	r3, r3, #24
    16a2:	4313      	orrs	r3, r2
    16a4:	4a37      	ldr	r2, [pc, #220]	; (1784 <_spi_m_sync_init+0x1ac>)
    16a6:	4013      	ands	r3, r2
    16a8:	2280      	movs	r2, #128	; 0x80
    16aa:	0292      	lsls	r2, r2, #10
    16ac:	4313      	orrs	r3, r2
    16ae:	6063      	str	r3, [r4, #4]
    16b0:	7b2b      	ldrb	r3, [r5, #12]
    16b2:	72a3      	strb	r3, [r4, #10]
    16b4:	7b6b      	ldrb	r3, [r5, #13]
    16b6:	7223      	strb	r3, [r4, #8]
    16b8:	792b      	ldrb	r3, [r5, #4]
    16ba:	075b      	lsls	r3, r3, #29
    16bc:	d150      	bne.n	1760 <_spi_m_sync_init+0x188>
    16be:	2301      	movs	r3, #1
    16c0:	7133      	strb	r3, [r6, #4]
    16c2:	2000      	movs	r0, #0
    16c4:	bd70      	pop	{r4, r5, r6, pc}
    16c6:	2801      	cmp	r0, #1
    16c8:	d002      	beq.n	16d0 <_spi_m_sync_init+0xf8>
    16ca:	3301      	adds	r3, #1
    16cc:	b2db      	uxtb	r3, r3
    16ce:	e78a      	b.n	15e6 <_spi_m_sync_init+0xe>
    16d0:	011d      	lsls	r5, r3, #4
    16d2:	4b2d      	ldr	r3, [pc, #180]	; (1788 <_spi_m_sync_init+0x1b0>)
    16d4:	3338      	adds	r3, #56	; 0x38
    16d6:	195d      	adds	r5, r3, r5
    16d8:	e789      	b.n	15ee <_spi_m_sync_init+0x16>
    16da:	2000      	movs	r0, #0
    16dc:	e78e      	b.n	15fc <_spi_m_sync_init+0x24>
    16de:	2000      	movs	r0, #0
    16e0:	e78c      	b.n	15fc <_spi_m_sync_init+0x24>
    16e2:	2c00      	cmp	r4, #0
    16e4:	d036      	beq.n	1754 <_spi_m_sync_init+0x17c>
    16e6:	2d00      	cmp	r5, #0
    16e8:	d032      	beq.n	1750 <_spi_m_sync_init+0x178>
    16ea:	2001      	movs	r0, #1
    16ec:	4a27      	ldr	r2, [pc, #156]	; (178c <_spi_m_sync_init+0x1b4>)
    16ee:	4921      	ldr	r1, [pc, #132]	; (1774 <_spi_m_sync_init+0x19c>)
    16f0:	4b21      	ldr	r3, [pc, #132]	; (1778 <_spi_m_sync_init+0x1a0>)
    16f2:	4798      	blx	r3
    16f4:	782b      	ldrb	r3, [r5, #0]
    16f6:	786a      	ldrb	r2, [r5, #1]
    16f8:	0212      	lsls	r2, r2, #8
    16fa:	431a      	orrs	r2, r3
    16fc:	78ab      	ldrb	r3, [r5, #2]
    16fe:	041b      	lsls	r3, r3, #16
    1700:	431a      	orrs	r2, r3
    1702:	78eb      	ldrb	r3, [r5, #3]
    1704:	061b      	lsls	r3, r3, #24
    1706:	4313      	orrs	r3, r2
    1708:	4a1d      	ldr	r2, [pc, #116]	; (1780 <_spi_m_sync_init+0x1a8>)
    170a:	4013      	ands	r3, r2
    170c:	6023      	str	r3, [r4, #0]
    170e:	8a23      	ldrh	r3, [r4, #16]
    1710:	0bdb      	lsrs	r3, r3, #15
    1712:	d1fc      	bne.n	170e <_spi_m_sync_init+0x136>
    1714:	792b      	ldrb	r3, [r5, #4]
    1716:	796a      	ldrb	r2, [r5, #5]
    1718:	0212      	lsls	r2, r2, #8
    171a:	431a      	orrs	r2, r3
    171c:	79ab      	ldrb	r3, [r5, #6]
    171e:	041b      	lsls	r3, r3, #16
    1720:	431a      	orrs	r2, r3
    1722:	79eb      	ldrb	r3, [r5, #7]
    1724:	061b      	lsls	r3, r3, #24
    1726:	4313      	orrs	r3, r2
    1728:	4a19      	ldr	r2, [pc, #100]	; (1790 <_spi_m_sync_init+0x1b8>)
    172a:	4313      	orrs	r3, r2
    172c:	6063      	str	r3, [r4, #4]
    172e:	7a2b      	ldrb	r3, [r5, #8]
    1730:	7a6a      	ldrb	r2, [r5, #9]
    1732:	0212      	lsls	r2, r2, #8
    1734:	431a      	orrs	r2, r3
    1736:	7aab      	ldrb	r3, [r5, #10]
    1738:	041b      	lsls	r3, r3, #16
    173a:	431a      	orrs	r2, r3
    173c:	7aeb      	ldrb	r3, [r5, #11]
    173e:	061b      	lsls	r3, r3, #24
    1740:	4313      	orrs	r3, r2
    1742:	6163      	str	r3, [r4, #20]
    1744:	7b6b      	ldrb	r3, [r5, #13]
    1746:	7223      	strb	r3, [r4, #8]
    1748:	8a23      	ldrh	r3, [r4, #16]
    174a:	0bdb      	lsrs	r3, r3, #15
    174c:	d1fc      	bne.n	1748 <_spi_m_sync_init+0x170>
    174e:	e7b3      	b.n	16b8 <_spi_m_sync_init+0xe0>
    1750:	2000      	movs	r0, #0
    1752:	e7cb      	b.n	16ec <_spi_m_sync_init+0x114>
    1754:	2000      	movs	r0, #0
    1756:	e7c9      	b.n	16ec <_spi_m_sync_init+0x114>
    1758:	2000      	movs	r0, #0
    175a:	e785      	b.n	1668 <_spi_m_sync_init+0x90>
    175c:	2000      	movs	r0, #0
    175e:	e783      	b.n	1668 <_spi_m_sync_init+0x90>
    1760:	2302      	movs	r3, #2
    1762:	e7ad      	b.n	16c0 <_spi_m_sync_init+0xe8>
    1764:	200d      	movs	r0, #13
    1766:	4240      	negs	r0, r0
    1768:	e7ac      	b.n	16c4 <_spi_m_sync_init+0xec>
    176a:	46c0      	nop			; (mov r8, r8)
    176c:	00001371 	.word	0x00001371
    1770:	000008cb 	.word	0x000008cb
    1774:	000023d8 	.word	0x000023d8
    1778:	00000cf9 	.word	0x00000cf9
    177c:	0000089a 	.word	0x0000089a
    1780:	fffffefc 	.word	0xfffffefc
    1784:	fffd3fbf 	.word	0xfffd3fbf
    1788:	00002390 	.word	0x00002390
    178c:	000008ab 	.word	0x000008ab
    1790:	00020040 	.word	0x00020040

00001794 <_spi_m_sync_trans>:
    1794:	b570      	push	{r4, r5, r6, lr}
    1796:	b088      	sub	sp, #32
    1798:	000d      	movs	r5, r1
    179a:	6804      	ldr	r4, [r0, #0]
    179c:	680b      	ldr	r3, [r1, #0]
    179e:	9303      	str	r3, [sp, #12]
    17a0:	684b      	ldr	r3, [r1, #4]
    17a2:	9304      	str	r3, [sp, #16]
    17a4:	2300      	movs	r3, #0
    17a6:	9305      	str	r3, [sp, #20]
    17a8:	9306      	str	r3, [sp, #24]
    17aa:	7906      	ldrb	r6, [r0, #4]
    17ac:	2800      	cmp	r0, #0
    17ae:	d014      	beq.n	17da <_spi_m_sync_trans+0x46>
    17b0:	2c00      	cmp	r4, #0
    17b2:	d010      	beq.n	17d6 <_spi_m_sync_trans+0x42>
    17b4:	2001      	movs	r0, #1
    17b6:	4a2d      	ldr	r2, [pc, #180]	; (186c <_spi_m_sync_trans+0xd8>)
    17b8:	492d      	ldr	r1, [pc, #180]	; (1870 <_spi_m_sync_trans+0xdc>)
    17ba:	4b2e      	ldr	r3, [pc, #184]	; (1874 <_spi_m_sync_trans+0xe0>)
    17bc:	4798      	blx	r3
    17be:	8a23      	ldrh	r3, [r4, #16]
    17c0:	0bdb      	lsrs	r3, r3, #15
    17c2:	d14f      	bne.n	1864 <_spi_m_sync_trans+0xd0>
    17c4:	8a23      	ldrh	r3, [r4, #16]
    17c6:	0bdb      	lsrs	r3, r3, #15
    17c8:	d1fc      	bne.n	17c4 <_spi_m_sync_trans+0x30>
    17ca:	6823      	ldr	r3, [r4, #0]
    17cc:	079b      	lsls	r3, r3, #30
    17ce:	d418      	bmi.n	1802 <_spi_m_sync_trans+0x6e>
    17d0:	2014      	movs	r0, #20
    17d2:	4240      	negs	r0, r0
    17d4:	e044      	b.n	1860 <_spi_m_sync_trans+0xcc>
    17d6:	2000      	movs	r0, #0
    17d8:	e7ed      	b.n	17b6 <_spi_m_sync_trans+0x22>
    17da:	2000      	movs	r0, #0
    17dc:	e7eb      	b.n	17b6 <_spi_m_sync_trans+0x22>
    17de:	2200      	movs	r2, #0
    17e0:	e026      	b.n	1830 <_spi_m_sync_trans+0x9c>
    17e2:	7858      	ldrb	r0, [r3, #1]
    17e4:	0200      	lsls	r0, r0, #8
    17e6:	4301      	orrs	r1, r0
    17e8:	3302      	adds	r3, #2
    17ea:	9303      	str	r3, [sp, #12]
    17ec:	3201      	adds	r2, #1
    17ee:	9205      	str	r2, [sp, #20]
    17f0:	b289      	uxth	r1, r1
    17f2:	8321      	strh	r1, [r4, #24]
    17f4:	9805      	ldr	r0, [sp, #20]
    17f6:	68ab      	ldr	r3, [r5, #8]
    17f8:	4298      	cmp	r0, r3
    17fa:	d302      	bcc.n	1802 <_spi_m_sync_trans+0x6e>
    17fc:	9a06      	ldr	r2, [sp, #24]
    17fe:	4293      	cmp	r3, r2
    1800:	d929      	bls.n	1856 <_spi_m_sync_trans+0xc2>
    1802:	7ba3      	ldrb	r3, [r4, #14]
    1804:	b2db      	uxtb	r3, r3
    1806:	075a      	lsls	r2, r3, #29
    1808:	d5e9      	bpl.n	17de <_spi_m_sync_trans+0x4a>
    180a:	8b22      	ldrh	r2, [r4, #24]
    180c:	b292      	uxth	r2, r2
    180e:	9904      	ldr	r1, [sp, #16]
    1810:	2900      	cmp	r1, #0
    1812:	d008      	beq.n	1826 <_spi_m_sync_trans+0x92>
    1814:	1c48      	adds	r0, r1, #1
    1816:	9004      	str	r0, [sp, #16]
    1818:	700a      	strb	r2, [r1, #0]
    181a:	2e01      	cmp	r6, #1
    181c:	d903      	bls.n	1826 <_spi_m_sync_trans+0x92>
    181e:	1c88      	adds	r0, r1, #2
    1820:	9004      	str	r0, [sp, #16]
    1822:	0a12      	lsrs	r2, r2, #8
    1824:	704a      	strb	r2, [r1, #1]
    1826:	9a06      	ldr	r2, [sp, #24]
    1828:	9201      	str	r2, [sp, #4]
    182a:	3201      	adds	r2, #1
    182c:	9206      	str	r2, [sp, #24]
    182e:	2201      	movs	r2, #1
    1830:	2a00      	cmp	r2, #0
    1832:	d1df      	bne.n	17f4 <_spi_m_sync_trans+0x60>
    1834:	9906      	ldr	r1, [sp, #24]
    1836:	9a05      	ldr	r2, [sp, #20]
    1838:	4291      	cmp	r1, r2
    183a:	d3db      	bcc.n	17f4 <_spi_m_sync_trans+0x60>
    183c:	07db      	lsls	r3, r3, #31
    183e:	d5d9      	bpl.n	17f4 <_spi_m_sync_trans+0x60>
    1840:	9b03      	ldr	r3, [sp, #12]
    1842:	2b00      	cmp	r3, #0
    1844:	d005      	beq.n	1852 <_spi_m_sync_trans+0xbe>
    1846:	1c59      	adds	r1, r3, #1
    1848:	9103      	str	r1, [sp, #12]
    184a:	7819      	ldrb	r1, [r3, #0]
    184c:	2e01      	cmp	r6, #1
    184e:	d8c8      	bhi.n	17e2 <_spi_m_sync_trans+0x4e>
    1850:	e7cc      	b.n	17ec <_spi_m_sync_trans+0x58>
    1852:	4909      	ldr	r1, [pc, #36]	; (1878 <_spi_m_sync_trans+0xe4>)
    1854:	e7ca      	b.n	17ec <_spi_m_sync_trans+0x58>
    1856:	7ba3      	ldrb	r3, [r4, #14]
    1858:	079b      	lsls	r3, r3, #30
    185a:	d0fc      	beq.n	1856 <_spi_m_sync_trans+0xc2>
    185c:	2303      	movs	r3, #3
    185e:	73a3      	strb	r3, [r4, #14]
    1860:	b008      	add	sp, #32
    1862:	bd70      	pop	{r4, r5, r6, pc}
    1864:	2004      	movs	r0, #4
    1866:	4240      	negs	r0, r0
    1868:	e7fa      	b.n	1860 <_spi_m_sync_trans+0xcc>
    186a:	46c0      	nop			; (mov r8, r8)
    186c:	00000a29 	.word	0x00000a29
    1870:	000023d8 	.word	0x000023d8
    1874:	00000cf9 	.word	0x00000cf9
    1878:	000001ff 	.word	0x000001ff

0000187c <_sysctrl_init_sources>:
    187c:	4b0f      	ldr	r3, [pc, #60]	; (18bc <_sysctrl_init_sources+0x40>)
    187e:	6a19      	ldr	r1, [r3, #32]
    1880:	0c09      	lsrs	r1, r1, #16
    1882:	6a1a      	ldr	r2, [r3, #32]
    1884:	0f92      	lsrs	r2, r2, #30
    1886:	0792      	lsls	r2, r2, #30
    1888:	0409      	lsls	r1, r1, #16
    188a:	480d      	ldr	r0, [pc, #52]	; (18c0 <_sysctrl_init_sources+0x44>)
    188c:	4001      	ands	r1, r0
    188e:	430a      	orrs	r2, r1
    1890:	490c      	ldr	r1, [pc, #48]	; (18c4 <_sysctrl_init_sources+0x48>)
    1892:	430a      	orrs	r2, r1
    1894:	621a      	str	r2, [r3, #32]
    1896:	699a      	ldr	r2, [r3, #24]
    1898:	2102      	movs	r1, #2
    189a:	430a      	orrs	r2, r1
    189c:	619a      	str	r2, [r3, #24]
    189e:	7f1a      	ldrb	r2, [r3, #28]
    18a0:	311d      	adds	r1, #29
    18a2:	400a      	ands	r2, r1
    18a4:	771a      	strb	r2, [r3, #28]
    18a6:	4b05      	ldr	r3, [pc, #20]	; (18bc <_sysctrl_init_sources+0x40>)
    18a8:	68db      	ldr	r3, [r3, #12]
    18aa:	071b      	lsls	r3, r3, #28
    18ac:	d5fb      	bpl.n	18a6 <_sysctrl_init_sources+0x2a>
    18ae:	4a03      	ldr	r2, [pc, #12]	; (18bc <_sysctrl_init_sources+0x40>)
    18b0:	6a13      	ldr	r3, [r2, #32]
    18b2:	2180      	movs	r1, #128	; 0x80
    18b4:	430b      	orrs	r3, r1
    18b6:	6213      	str	r3, [r2, #32]
    18b8:	4770      	bx	lr
    18ba:	46c0      	nop			; (mov r8, r8)
    18bc:	40000800 	.word	0x40000800
    18c0:	0fff0000 	.word	0x0fff0000
    18c4:	00000302 	.word	0x00000302

000018c8 <_sysctrl_init_referenced_generators>:
    18c8:	4a02      	ldr	r2, [pc, #8]	; (18d4 <_sysctrl_init_referenced_generators+0xc>)
    18ca:	6993      	ldr	r3, [r2, #24]
    18cc:	2102      	movs	r1, #2
    18ce:	438b      	bics	r3, r1
    18d0:	6193      	str	r3, [r2, #24]
    18d2:	4770      	bx	lr
    18d4:	40000800 	.word	0x40000800

000018d8 <_system_time_init>:
    18d8:	4b02      	ldr	r3, [pc, #8]	; (18e4 <_system_time_init+0xc>)
    18da:	4a03      	ldr	r2, [pc, #12]	; (18e8 <_system_time_init+0x10>)
    18dc:	605a      	str	r2, [r3, #4]
    18de:	2205      	movs	r2, #5
    18e0:	601a      	str	r2, [r3, #0]
    18e2:	4770      	bx	lr
    18e4:	e000e010 	.word	0xe000e010
    18e8:	00ffffff 	.word	0x00ffffff

000018ec <_delay_init>:
    18ec:	b510      	push	{r4, lr}
    18ee:	4b01      	ldr	r3, [pc, #4]	; (18f4 <_delay_init+0x8>)
    18f0:	4798      	blx	r3
    18f2:	bd10      	pop	{r4, pc}
    18f4:	000018d9 	.word	0x000018d9

000018f8 <tc_interrupt_handler>:
    18f8:	b510      	push	{r4, lr}
    18fa:	68c3      	ldr	r3, [r0, #12]
    18fc:	7b9a      	ldrb	r2, [r3, #14]
    18fe:	07d2      	lsls	r2, r2, #31
    1900:	d400      	bmi.n	1904 <tc_interrupt_handler+0xc>
    1902:	bd10      	pop	{r4, pc}
    1904:	2201      	movs	r2, #1
    1906:	739a      	strb	r2, [r3, #14]
    1908:	6803      	ldr	r3, [r0, #0]
    190a:	4798      	blx	r3
    190c:	e7f9      	b.n	1902 <tc_interrupt_handler+0xa>

0000190e <tc_pwm_interrupt_handler>:
    190e:	b570      	push	{r4, r5, r6, lr}
    1910:	0005      	movs	r5, r0
    1912:	6904      	ldr	r4, [r0, #16]
    1914:	7ba3      	ldrb	r3, [r4, #14]
    1916:	07db      	lsls	r3, r3, #31
    1918:	d505      	bpl.n	1926 <tc_pwm_interrupt_handler+0x18>
    191a:	2301      	movs	r3, #1
    191c:	73a3      	strb	r3, [r4, #14]
    191e:	6803      	ldr	r3, [r0, #0]
    1920:	2b00      	cmp	r3, #0
    1922:	d000      	beq.n	1926 <tc_pwm_interrupt_handler+0x18>
    1924:	4798      	blx	r3
    1926:	7b63      	ldrb	r3, [r4, #13]
    1928:	079b      	lsls	r3, r3, #30
    192a:	d506      	bpl.n	193a <tc_pwm_interrupt_handler+0x2c>
    192c:	2302      	movs	r3, #2
    192e:	73a3      	strb	r3, [r4, #14]
    1930:	686b      	ldr	r3, [r5, #4]
    1932:	2b00      	cmp	r3, #0
    1934:	d001      	beq.n	193a <tc_pwm_interrupt_handler+0x2c>
    1936:	0028      	movs	r0, r5
    1938:	4798      	blx	r3
    193a:	bd70      	pop	{r4, r5, r6, pc}

0000193c <tc_get_hardware_index>:
    193c:	4b02      	ldr	r3, [pc, #8]	; (1948 <tc_get_hardware_index+0xc>)
    193e:	469c      	mov	ip, r3
    1940:	4460      	add	r0, ip
    1942:	0a80      	lsrs	r0, r0, #10
    1944:	b2c0      	uxtb	r0, r0
    1946:	4770      	bx	lr
    1948:	bdffe000 	.word	0xbdffe000

0000194c <_tc_init_irq_param>:
    194c:	4b06      	ldr	r3, [pc, #24]	; (1968 <_tc_init_irq_param+0x1c>)
    194e:	4298      	cmp	r0, r3
    1950:	d003      	beq.n	195a <_tc_init_irq_param+0xe>
    1952:	4b06      	ldr	r3, [pc, #24]	; (196c <_tc_init_irq_param+0x20>)
    1954:	4298      	cmp	r0, r3
    1956:	d003      	beq.n	1960 <_tc_init_irq_param+0x14>
    1958:	4770      	bx	lr
    195a:	4b05      	ldr	r3, [pc, #20]	; (1970 <_tc_init_irq_param+0x24>)
    195c:	6019      	str	r1, [r3, #0]
    195e:	e7f8      	b.n	1952 <_tc_init_irq_param+0x6>
    1960:	4b03      	ldr	r3, [pc, #12]	; (1970 <_tc_init_irq_param+0x24>)
    1962:	6059      	str	r1, [r3, #4]
    1964:	e7f8      	b.n	1958 <_tc_init_irq_param+0xc>
    1966:	46c0      	nop			; (mov r8, r8)
    1968:	42002000 	.word	0x42002000
    196c:	42002400 	.word	0x42002400
    1970:	2000014c 	.word	0x2000014c

00001974 <get_tc_index>:
    1974:	b510      	push	{r4, lr}
    1976:	4b0d      	ldr	r3, [pc, #52]	; (19ac <get_tc_index+0x38>)
    1978:	4798      	blx	r3
    197a:	2300      	movs	r3, #0
    197c:	2b01      	cmp	r3, #1
    197e:	d80b      	bhi.n	1998 <get_tc_index+0x24>
    1980:	009a      	lsls	r2, r3, #2
    1982:	18d2      	adds	r2, r2, r3
    1984:	0091      	lsls	r1, r2, #2
    1986:	4a0a      	ldr	r2, [pc, #40]	; (19b0 <get_tc_index+0x3c>)
    1988:	5c8a      	ldrb	r2, [r1, r2]
    198a:	4290      	cmp	r0, r2
    198c:	d002      	beq.n	1994 <get_tc_index+0x20>
    198e:	3301      	adds	r3, #1
    1990:	b2db      	uxtb	r3, r3
    1992:	e7f3      	b.n	197c <get_tc_index+0x8>
    1994:	b258      	sxtb	r0, r3
    1996:	e007      	b.n	19a8 <get_tc_index+0x34>
    1998:	22f8      	movs	r2, #248	; 0xf8
    199a:	32ff      	adds	r2, #255	; 0xff
    199c:	4905      	ldr	r1, [pc, #20]	; (19b4 <get_tc_index+0x40>)
    199e:	2000      	movs	r0, #0
    19a0:	4b05      	ldr	r3, [pc, #20]	; (19b8 <get_tc_index+0x44>)
    19a2:	4798      	blx	r3
    19a4:	2001      	movs	r0, #1
    19a6:	4240      	negs	r0, r0
    19a8:	bd10      	pop	{r4, pc}
    19aa:	46c0      	nop			; (mov r8, r8)
    19ac:	0000193d 	.word	0x0000193d
    19b0:	20000000 	.word	0x20000000
    19b4:	000023f4 	.word	0x000023f4
    19b8:	00000cf9 	.word	0x00000cf9

000019bc <_timer_init>:
    19bc:	b570      	push	{r4, r5, r6, lr}
    19be:	0006      	movs	r6, r0
    19c0:	000c      	movs	r4, r1
    19c2:	0008      	movs	r0, r1
    19c4:	4b3f      	ldr	r3, [pc, #252]	; (1ac4 <_timer_init+0x108>)
    19c6:	4798      	blx	r3
    19c8:	0005      	movs	r5, r0
    19ca:	60f4      	str	r4, [r6, #12]
    19cc:	229f      	movs	r2, #159	; 0x9f
    19ce:	493e      	ldr	r1, [pc, #248]	; (1ac8 <_timer_init+0x10c>)
    19d0:	2001      	movs	r0, #1
    19d2:	4b3e      	ldr	r3, [pc, #248]	; (1acc <_timer_init+0x110>)
    19d4:	4798      	blx	r3
    19d6:	7be3      	ldrb	r3, [r4, #15]
    19d8:	09db      	lsrs	r3, r3, #7
    19da:	d1fc      	bne.n	19d6 <_timer_init+0x1a>
    19dc:	8823      	ldrh	r3, [r4, #0]
    19de:	079b      	lsls	r3, r3, #30
    19e0:	d504      	bpl.n	19ec <_timer_init+0x30>
    19e2:	2300      	movs	r3, #0
    19e4:	8023      	strh	r3, [r4, #0]
    19e6:	7be3      	ldrb	r3, [r4, #15]
    19e8:	09db      	lsrs	r3, r3, #7
    19ea:	d1fc      	bne.n	19e6 <_timer_init+0x2a>
    19ec:	2301      	movs	r3, #1
    19ee:	8023      	strh	r3, [r4, #0]
    19f0:	7be3      	ldrb	r3, [r4, #15]
    19f2:	09db      	lsrs	r3, r3, #7
    19f4:	d1fc      	bne.n	19f0 <_timer_init+0x34>
    19f6:	00aa      	lsls	r2, r5, #2
    19f8:	1952      	adds	r2, r2, r5
    19fa:	0091      	lsls	r1, r2, #2
    19fc:	4b34      	ldr	r3, [pc, #208]	; (1ad0 <_timer_init+0x114>)
    19fe:	185b      	adds	r3, r3, r1
    1a00:	885a      	ldrh	r2, [r3, #2]
    1a02:	8022      	strh	r2, [r4, #0]
    1a04:	7919      	ldrb	r1, [r3, #4]
    1a06:	7221      	strb	r1, [r4, #8]
    1a08:	88db      	ldrh	r3, [r3, #6]
    1a0a:	8163      	strh	r3, [r4, #10]
    1a0c:	230c      	movs	r3, #12
    1a0e:	4013      	ands	r3, r2
    1a10:	2b08      	cmp	r3, #8
    1a12:	d039      	beq.n	1a88 <_timer_init+0xcc>
    1a14:	2b00      	cmp	r3, #0
    1a16:	d143      	bne.n	1aa0 <_timer_init+0xe4>
    1a18:	4a2d      	ldr	r2, [pc, #180]	; (1ad0 <_timer_init+0x114>)
    1a1a:	00ab      	lsls	r3, r5, #2
    1a1c:	1958      	adds	r0, r3, r5
    1a1e:	0081      	lsls	r1, r0, #2
    1a20:	0008      	movs	r0, r1
    1a22:	1851      	adds	r1, r2, r1
    1a24:	8989      	ldrh	r1, [r1, #12]
    1a26:	8321      	strh	r1, [r4, #24]
    1a28:	1812      	adds	r2, r2, r0
    1a2a:	8a13      	ldrh	r3, [r2, #16]
    1a2c:	8363      	strh	r3, [r4, #26]
    1a2e:	2301      	movs	r3, #1
    1a30:	7363      	strb	r3, [r4, #13]
    1a32:	0031      	movs	r1, r6
    1a34:	0020      	movs	r0, r4
    1a36:	4b27      	ldr	r3, [pc, #156]	; (1ad4 <_timer_init+0x118>)
    1a38:	4798      	blx	r3
    1a3a:	0020      	movs	r0, r4
    1a3c:	4b26      	ldr	r3, [pc, #152]	; (1ad8 <_timer_init+0x11c>)
    1a3e:	4798      	blx	r3
    1a40:	300d      	adds	r0, #13
    1a42:	b2c0      	uxtb	r0, r0
    1a44:	b243      	sxtb	r3, r0
  if ((int32_t)(IRQn) >= 0)
    1a46:	2b00      	cmp	r3, #0
    1a48:	db0a      	blt.n	1a60 <_timer_init+0xa4>
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1a4a:	211f      	movs	r1, #31
    1a4c:	4001      	ands	r1, r0
    1a4e:	2201      	movs	r2, #1
    1a50:	408a      	lsls	r2, r1
    1a52:	2180      	movs	r1, #128	; 0x80
    1a54:	4c21      	ldr	r4, [pc, #132]	; (1adc <_timer_init+0x120>)
    1a56:	5062      	str	r2, [r4, r1]
  __ASM volatile ("dsb 0xF":::"memory");
    1a58:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    1a5c:	f3bf 8f6f 	isb	sy
  if ((int32_t)(IRQn) >= 0)
    1a60:	2b00      	cmp	r3, #0
    1a62:	db07      	blt.n	1a74 <_timer_init+0xb8>
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1a64:	211f      	movs	r1, #31
    1a66:	4001      	ands	r1, r0
    1a68:	2201      	movs	r2, #1
    1a6a:	408a      	lsls	r2, r1
    1a6c:	21c0      	movs	r1, #192	; 0xc0
    1a6e:	0049      	lsls	r1, r1, #1
    1a70:	4c1a      	ldr	r4, [pc, #104]	; (1adc <_timer_init+0x120>)
    1a72:	5062      	str	r2, [r4, r1]
  if ((int32_t)(IRQn) >= 0)
    1a74:	2b00      	cmp	r3, #0
    1a76:	db05      	blt.n	1a84 <_timer_init+0xc8>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1a78:	231f      	movs	r3, #31
    1a7a:	4018      	ands	r0, r3
    1a7c:	3b1e      	subs	r3, #30
    1a7e:	4083      	lsls	r3, r0
    1a80:	4a16      	ldr	r2, [pc, #88]	; (1adc <_timer_init+0x120>)
    1a82:	6013      	str	r3, [r2, #0]
    1a84:	2000      	movs	r0, #0
    1a86:	bd70      	pop	{r4, r5, r6, pc}
    1a88:	4a11      	ldr	r2, [pc, #68]	; (1ad0 <_timer_init+0x114>)
    1a8a:	00ab      	lsls	r3, r5, #2
    1a8c:	1958      	adds	r0, r3, r5
    1a8e:	0081      	lsls	r1, r0, #2
    1a90:	0008      	movs	r0, r1
    1a92:	1851      	adds	r1, r2, r1
    1a94:	68c9      	ldr	r1, [r1, #12]
    1a96:	61a1      	str	r1, [r4, #24]
    1a98:	1812      	adds	r2, r2, r0
    1a9a:	6913      	ldr	r3, [r2, #16]
    1a9c:	61e3      	str	r3, [r4, #28]
    1a9e:	e7c6      	b.n	1a2e <_timer_init+0x72>
    1aa0:	2b04      	cmp	r3, #4
    1aa2:	d1c4      	bne.n	1a2e <_timer_init+0x72>
    1aa4:	490a      	ldr	r1, [pc, #40]	; (1ad0 <_timer_init+0x114>)
    1aa6:	00ab      	lsls	r3, r5, #2
    1aa8:	1958      	adds	r0, r3, r5
    1aaa:	0082      	lsls	r2, r0, #2
    1aac:	188a      	adds	r2, r1, r2
    1aae:	7b10      	ldrb	r0, [r2, #12]
    1ab0:	7620      	strb	r0, [r4, #24]
    1ab2:	7c12      	ldrb	r2, [r2, #16]
    1ab4:	7662      	strb	r2, [r4, #25]
    1ab6:	195d      	adds	r5, r3, r5
    1ab8:	00ab      	lsls	r3, r5, #2
    1aba:	18c9      	adds	r1, r1, r3
    1abc:	7a0b      	ldrb	r3, [r1, #8]
    1abe:	7523      	strb	r3, [r4, #20]
    1ac0:	e7b5      	b.n	1a2e <_timer_init+0x72>
    1ac2:	46c0      	nop			; (mov r8, r8)
    1ac4:	00001975 	.word	0x00001975
    1ac8:	000023f4 	.word	0x000023f4
    1acc:	00000cf9 	.word	0x00000cf9
    1ad0:	20000000 	.word	0x20000000
    1ad4:	0000194d 	.word	0x0000194d
    1ad8:	0000193d 	.word	0x0000193d
    1adc:	e000e100 	.word	0xe000e100

00001ae0 <_pwm_init>:
    1ae0:	b570      	push	{r4, r5, r6, lr}
    1ae2:	0005      	movs	r5, r0
    1ae4:	000c      	movs	r4, r1
    1ae6:	0008      	movs	r0, r1
    1ae8:	4b35      	ldr	r3, [pc, #212]	; (1bc0 <_pwm_init+0xe0>)
    1aea:	4798      	blx	r3
    1aec:	612c      	str	r4, [r5, #16]
    1aee:	7be3      	ldrb	r3, [r4, #15]
    1af0:	09db      	lsrs	r3, r3, #7
    1af2:	d1fc      	bne.n	1aee <_pwm_init+0xe>
    1af4:	8823      	ldrh	r3, [r4, #0]
    1af6:	079b      	lsls	r3, r3, #30
    1af8:	d504      	bpl.n	1b04 <_pwm_init+0x24>
    1afa:	2300      	movs	r3, #0
    1afc:	8023      	strh	r3, [r4, #0]
    1afe:	7be3      	ldrb	r3, [r4, #15]
    1b00:	09db      	lsrs	r3, r3, #7
    1b02:	d1fc      	bne.n	1afe <_pwm_init+0x1e>
    1b04:	2301      	movs	r3, #1
    1b06:	8023      	strh	r3, [r4, #0]
    1b08:	7be3      	ldrb	r3, [r4, #15]
    1b0a:	09db      	lsrs	r3, r3, #7
    1b0c:	d1fc      	bne.n	1b08 <_pwm_init+0x28>
    1b0e:	0082      	lsls	r2, r0, #2
    1b10:	1812      	adds	r2, r2, r0
    1b12:	0091      	lsls	r1, r2, #2
    1b14:	4b2b      	ldr	r3, [pc, #172]	; (1bc4 <_pwm_init+0xe4>)
    1b16:	185b      	adds	r3, r3, r1
    1b18:	885a      	ldrh	r2, [r3, #2]
    1b1a:	8022      	strh	r2, [r4, #0]
    1b1c:	7919      	ldrb	r1, [r3, #4]
    1b1e:	7221      	strb	r1, [r4, #8]
    1b20:	88db      	ldrh	r3, [r3, #6]
    1b22:	8163      	strh	r3, [r4, #10]
    1b24:	230c      	movs	r3, #12
    1b26:	4013      	ands	r3, r2
    1b28:	2b08      	cmp	r3, #8
    1b2a:	d037      	beq.n	1b9c <_pwm_init+0xbc>
    1b2c:	2b00      	cmp	r3, #0
    1b2e:	d141      	bne.n	1bb4 <_pwm_init+0xd4>
    1b30:	4a24      	ldr	r2, [pc, #144]	; (1bc4 <_pwm_init+0xe4>)
    1b32:	0083      	lsls	r3, r0, #2
    1b34:	181e      	adds	r6, r3, r0
    1b36:	00b1      	lsls	r1, r6, #2
    1b38:	000e      	movs	r6, r1
    1b3a:	1851      	adds	r1, r2, r1
    1b3c:	8989      	ldrh	r1, [r1, #12]
    1b3e:	8321      	strh	r1, [r4, #24]
    1b40:	1992      	adds	r2, r2, r6
    1b42:	8a13      	ldrh	r3, [r2, #16]
    1b44:	8363      	strh	r3, [r4, #26]
    1b46:	0029      	movs	r1, r5
    1b48:	0020      	movs	r0, r4
    1b4a:	4b1f      	ldr	r3, [pc, #124]	; (1bc8 <_pwm_init+0xe8>)
    1b4c:	4798      	blx	r3
    1b4e:	0020      	movs	r0, r4
    1b50:	4b1e      	ldr	r3, [pc, #120]	; (1bcc <_pwm_init+0xec>)
    1b52:	4798      	blx	r3
    1b54:	300d      	adds	r0, #13
    1b56:	b2c0      	uxtb	r0, r0
    1b58:	b243      	sxtb	r3, r0
  if ((int32_t)(IRQn) >= 0)
    1b5a:	2b00      	cmp	r3, #0
    1b5c:	db0a      	blt.n	1b74 <_pwm_init+0x94>
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1b5e:	211f      	movs	r1, #31
    1b60:	4001      	ands	r1, r0
    1b62:	2201      	movs	r2, #1
    1b64:	408a      	lsls	r2, r1
    1b66:	2180      	movs	r1, #128	; 0x80
    1b68:	4c19      	ldr	r4, [pc, #100]	; (1bd0 <_pwm_init+0xf0>)
    1b6a:	5062      	str	r2, [r4, r1]
  __ASM volatile ("dsb 0xF":::"memory");
    1b6c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    1b70:	f3bf 8f6f 	isb	sy
  if ((int32_t)(IRQn) >= 0)
    1b74:	2b00      	cmp	r3, #0
    1b76:	db07      	blt.n	1b88 <_pwm_init+0xa8>
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1b78:	211f      	movs	r1, #31
    1b7a:	4001      	ands	r1, r0
    1b7c:	2201      	movs	r2, #1
    1b7e:	408a      	lsls	r2, r1
    1b80:	21c0      	movs	r1, #192	; 0xc0
    1b82:	0049      	lsls	r1, r1, #1
    1b84:	4c12      	ldr	r4, [pc, #72]	; (1bd0 <_pwm_init+0xf0>)
    1b86:	5062      	str	r2, [r4, r1]
  if ((int32_t)(IRQn) >= 0)
    1b88:	2b00      	cmp	r3, #0
    1b8a:	db16      	blt.n	1bba <_pwm_init+0xda>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1b8c:	231f      	movs	r3, #31
    1b8e:	4018      	ands	r0, r3
    1b90:	3b1e      	subs	r3, #30
    1b92:	4083      	lsls	r3, r0
    1b94:	4a0e      	ldr	r2, [pc, #56]	; (1bd0 <_pwm_init+0xf0>)
    1b96:	6013      	str	r3, [r2, #0]
    1b98:	2000      	movs	r0, #0
    1b9a:	bd70      	pop	{r4, r5, r6, pc}
    1b9c:	4a09      	ldr	r2, [pc, #36]	; (1bc4 <_pwm_init+0xe4>)
    1b9e:	0083      	lsls	r3, r0, #2
    1ba0:	181e      	adds	r6, r3, r0
    1ba2:	00b1      	lsls	r1, r6, #2
    1ba4:	000e      	movs	r6, r1
    1ba6:	1851      	adds	r1, r2, r1
    1ba8:	68c9      	ldr	r1, [r1, #12]
    1baa:	61a1      	str	r1, [r4, #24]
    1bac:	1992      	adds	r2, r2, r6
    1bae:	6913      	ldr	r3, [r2, #16]
    1bb0:	61e3      	str	r3, [r4, #28]
    1bb2:	e7c8      	b.n	1b46 <_pwm_init+0x66>
    1bb4:	2001      	movs	r0, #1
    1bb6:	4240      	negs	r0, r0
    1bb8:	e7ef      	b.n	1b9a <_pwm_init+0xba>
    1bba:	2000      	movs	r0, #0
    1bbc:	e7ed      	b.n	1b9a <_pwm_init+0xba>
    1bbe:	46c0      	nop			; (mov r8, r8)
    1bc0:	00001975 	.word	0x00001975
    1bc4:	20000000 	.word	0x20000000
    1bc8:	0000194d 	.word	0x0000194d
    1bcc:	0000193d 	.word	0x0000193d
    1bd0:	e000e100 	.word	0xe000e100

00001bd4 <_tc_get_timer>:
    1bd4:	2000      	movs	r0, #0
    1bd6:	4770      	bx	lr

00001bd8 <_tc_get_pwm>:
    1bd8:	2000      	movs	r0, #0
    1bda:	4770      	bx	lr

00001bdc <TC0_Handler>:
    1bdc:	b510      	push	{r4, lr}
    1bde:	4b02      	ldr	r3, [pc, #8]	; (1be8 <TC0_Handler+0xc>)
    1be0:	6818      	ldr	r0, [r3, #0]
    1be2:	4b02      	ldr	r3, [pc, #8]	; (1bec <TC0_Handler+0x10>)
    1be4:	4798      	blx	r3
    1be6:	bd10      	pop	{r4, pc}
    1be8:	2000014c 	.word	0x2000014c
    1bec:	0000190f 	.word	0x0000190f

00001bf0 <TC1_Handler>:
    1bf0:	b510      	push	{r4, lr}
    1bf2:	4b02      	ldr	r3, [pc, #8]	; (1bfc <TC1_Handler+0xc>)
    1bf4:	6858      	ldr	r0, [r3, #4]
    1bf6:	4b02      	ldr	r3, [pc, #8]	; (1c00 <TC1_Handler+0x10>)
    1bf8:	4798      	blx	r3
    1bfa:	bd10      	pop	{r4, pc}
    1bfc:	2000014c 	.word	0x2000014c
    1c00:	000018f9 	.word	0x000018f9

00001c04 <main>:
volatile uint8_t help[4] = "help";

//QueueHandle_t q1;

int main(void)
{
    1c04:	b510      	push	{r4, lr}
	
	/* Initializes MCU, drivers and middle ware */
	atmel_start_init();
    1c06:	4b02      	ldr	r3, [pc, #8]	; (1c10 <main+0xc>)
    1c08:	4798      	blx	r3
	
	// init asynchronous driver
	async_setup();
    1c0a:	4b02      	ldr	r3, [pc, #8]	; (1c14 <main+0x10>)
    1c0c:	4798      	blx	r3
    1c0e:	e7fe      	b.n	1c0e <main+0xa>
    1c10:	00000105 	.word	0x00000105
    1c14:	00001cf5 	.word	0x00001cf5

00001c18 <touch_init>:
#include <atmel_start.h>

#include "touch.h"
void touch_init(void)
{
}
    1c18:	4770      	bx	lr

00001c1a <serial_tx_cb>:


static void serial_tx_cb(const struct usart_async_descriptor *const io_descr)
{
	
}
    1c1a:	4770      	bx	lr

00001c1c <serial_rx_cb>:
{
    1c1c:	b5f0      	push	{r4, r5, r6, r7, lr}
    1c1e:	b083      	sub	sp, #12
	count = io_read(&SERIAL.io, &ch, 1);
    1c20:	2201      	movs	r2, #1
    1c22:	466b      	mov	r3, sp
    1c24:	1dd9      	adds	r1, r3, #7
    1c26:	482a      	ldr	r0, [pc, #168]	; (1cd0 <serial_rx_cb+0xb4>)
    1c28:	4b2a      	ldr	r3, [pc, #168]	; (1cd4 <serial_rx_cb+0xb8>)
    1c2a:	4798      	blx	r3
    1c2c:	b2c1      	uxtb	r1, r0
	if (serial_receiving == 0)
    1c2e:	4b2a      	ldr	r3, [pc, #168]	; (1cd8 <serial_rx_cb+0xbc>)
    1c30:	781b      	ldrb	r3, [r3, #0]
    1c32:	2b00      	cmp	r3, #0
    1c34:	d112      	bne.n	1c5c <serial_rx_cb+0x40>
		if(ch != '\r' && ch != '\n')
    1c36:	466b      	mov	r3, sp
    1c38:	79da      	ldrb	r2, [r3, #7]
    1c3a:	2a0d      	cmp	r2, #13
    1c3c:	d024      	beq.n	1c88 <serial_rx_cb+0x6c>
    1c3e:	2a0a      	cmp	r2, #10
    1c40:	d022      	beq.n	1c88 <serial_rx_cb+0x6c>
			serial_receiving = 1;
    1c42:	4b25      	ldr	r3, [pc, #148]	; (1cd8 <serial_rx_cb+0xbc>)
    1c44:	2001      	movs	r0, #1
    1c46:	7018      	strb	r0, [r3, #0]
			byteCount = 0;
    1c48:	2000      	movs	r0, #0
    1c4a:	7058      	strb	r0, [r3, #1]
			rx_buffer[byteCount] = ch;
    1c4c:	7858      	ldrb	r0, [r3, #1]
    1c4e:	1818      	adds	r0, r3, r0
    1c50:	7102      	strb	r2, [r0, #4]
			byteCount += count;
    1c52:	7858      	ldrb	r0, [r3, #1]
    1c54:	1840      	adds	r0, r0, r1
    1c56:	b2c0      	uxtb	r0, r0
    1c58:	7058      	strb	r0, [r3, #1]
    1c5a:	e015      	b.n	1c88 <serial_rx_cb+0x6c>
		rx_buffer[byteCount] = ch;
    1c5c:	4b1e      	ldr	r3, [pc, #120]	; (1cd8 <serial_rx_cb+0xbc>)
    1c5e:	785a      	ldrb	r2, [r3, #1]
    1c60:	4668      	mov	r0, sp
    1c62:	79c4      	ldrb	r4, [r0, #7]
    1c64:	189a      	adds	r2, r3, r2
    1c66:	7114      	strb	r4, [r2, #4]
		byteCount += count;
    1c68:	7858      	ldrb	r0, [r3, #1]
    1c6a:	1840      	adds	r0, r0, r1
    1c6c:	b2c0      	uxtb	r0, r0
    1c6e:	7058      	strb	r0, [r3, #1]
		if (ch == '\r' || ch == '\n')
    1c70:	2c0d      	cmp	r4, #13
    1c72:	d00d      	beq.n	1c90 <serial_rx_cb+0x74>
    1c74:	2c0a      	cmp	r4, #10
    1c76:	d00b      	beq.n	1c90 <serial_rx_cb+0x74>
		if (byteCount >= SERIAL_BUFFER_SIZE)
    1c78:	4b17      	ldr	r3, [pc, #92]	; (1cd8 <serial_rx_cb+0xbc>)
    1c7a:	785b      	ldrb	r3, [r3, #1]
    1c7c:	b2db      	uxtb	r3, r3
    1c7e:	2bc7      	cmp	r3, #199	; 0xc7
    1c80:	d902      	bls.n	1c88 <serial_rx_cb+0x6c>
			byteCount = 0;
    1c82:	2200      	movs	r2, #0
    1c84:	4b14      	ldr	r3, [pc, #80]	; (1cd8 <serial_rx_cb+0xbc>)
    1c86:	705a      	strb	r2, [r3, #1]
	xTaskResumeAll();
    1c88:	4b14      	ldr	r3, [pc, #80]	; (1cdc <serial_rx_cb+0xc0>)
    1c8a:	4798      	blx	r3
}
    1c8c:	b003      	add	sp, #12
    1c8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
			totalBytes = byteCount - 2;
    1c90:	4d11      	ldr	r5, [pc, #68]	; (1cd8 <serial_rx_cb+0xbc>)
    1c92:	786b      	ldrb	r3, [r5, #1]
    1c94:	3b02      	subs	r3, #2
    1c96:	b2db      	uxtb	r3, r3
    1c98:	4c11      	ldr	r4, [pc, #68]	; (1ce0 <serial_rx_cb+0xc4>)
    1c9a:	274c      	movs	r7, #76	; 0x4c
    1c9c:	55e3      	strb	r3, [r4, r7]
			serial_receiving = 0;
    1c9e:	2300      	movs	r3, #0
    1ca0:	702b      	strb	r3, [r5, #0]
			serial_complete = 0;
    1ca2:	224d      	movs	r2, #77	; 0x4d
    1ca4:	54a3      	strb	r3, [r4, r2]
			memcpy(&tx_buffer[20], &rx_buffer[0], SERIAL_BUFFER_SIZE);
    1ca6:	4e0f      	ldr	r6, [pc, #60]	; (1ce4 <serial_rx_cb+0xc8>)
    1ca8:	0030      	movs	r0, r6
    1caa:	3014      	adds	r0, #20
    1cac:	3504      	adds	r5, #4
    1cae:	327b      	adds	r2, #123	; 0x7b
    1cb0:	0029      	movs	r1, r5
    1cb2:	4b0d      	ldr	r3, [pc, #52]	; (1ce8 <serial_rx_cb+0xcc>)
    1cb4:	4798      	blx	r3
			io_write(&SERIAL.io, tx_buffer, totalBytes + 22);
    1cb6:	5de2      	ldrb	r2, [r4, r7]
    1cb8:	3216      	adds	r2, #22
    1cba:	0031      	movs	r1, r6
    1cbc:	4804      	ldr	r0, [pc, #16]	; (1cd0 <serial_rx_cb+0xb4>)
    1cbe:	4b0b      	ldr	r3, [pc, #44]	; (1cec <serial_rx_cb+0xd0>)
    1cc0:	4798      	blx	r3
			memset(&rx_buffer, 0x00, SERIAL_BUFFER_SIZE);
    1cc2:	22c8      	movs	r2, #200	; 0xc8
    1cc4:	2100      	movs	r1, #0
    1cc6:	0028      	movs	r0, r5
    1cc8:	4b09      	ldr	r3, [pc, #36]	; (1cf0 <serial_rx_cb+0xd4>)
    1cca:	4798      	blx	r3
    1ccc:	e7d4      	b.n	1c78 <serial_rx_cb+0x5c>
    1cce:	46c0      	nop			; (mov r8, r8)
    1cd0:	20000310 	.word	0x20000310
    1cd4:	0000079d 	.word	0x0000079d
    1cd8:	20000154 	.word	0x20000154
    1cdc:	00001f7d 	.word	0x00001f7d
    1ce0:	200001d4 	.word	0x200001d4
    1ce4:	20000028 	.word	0x20000028
    1ce8:	00002189 	.word	0x00002189
    1cec:	00000765 	.word	0x00000765
    1cf0:	0000219b 	.word	0x0000219b

00001cf4 <async_setup>:

void async_setup(void)
{
    1cf4:	b570      	push	{r4, r5, r6, lr}
	
	usart_async_register_callback(&SERIAL, USART_ASYNC_TXC_CB, serial_tx_cb);
    1cf6:	4c07      	ldr	r4, [pc, #28]	; (1d14 <async_setup+0x20>)
    1cf8:	4a07      	ldr	r2, [pc, #28]	; (1d18 <async_setup+0x24>)
    1cfa:	2101      	movs	r1, #1
    1cfc:	0020      	movs	r0, r4
    1cfe:	4d07      	ldr	r5, [pc, #28]	; (1d1c <async_setup+0x28>)
    1d00:	47a8      	blx	r5
	usart_async_register_callback(&SERIAL, USART_ASYNC_RXC_CB, serial_rx_cb);
    1d02:	4a07      	ldr	r2, [pc, #28]	; (1d20 <async_setup+0x2c>)
    1d04:	2100      	movs	r1, #0
    1d06:	0020      	movs	r0, r4
    1d08:	47a8      	blx	r5
	usart_async_enable(&SERIAL);
    1d0a:	0020      	movs	r0, r4
    1d0c:	4b05      	ldr	r3, [pc, #20]	; (1d24 <async_setup+0x30>)
    1d0e:	4798      	blx	r3
    1d10:	bd70      	pop	{r4, r5, r6, pc}
    1d12:	46c0      	nop			; (mov r8, r8)
    1d14:	20000310 	.word	0x20000310
    1d18:	00001c1b 	.word	0x00001c1b
    1d1c:	00000c81 	.word	0x00000c81
    1d20:	00001c1d 	.word	0x00001c1d
    1d24:	00000c55 	.word	0x00000c55

00001d28 <vListInsertEnd>:
}
/*-----------------------------------------------------------*/

void vListInsertEnd(List_t *const pxList, ListItem_t *const pxNewListItem)
{
	ListItem_t *const pxIndex = pxList->pxIndex;
    1d28:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY(pxNewListItem);

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext     = pxIndex;
    1d2a:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
    1d2c:	689a      	ldr	r2, [r3, #8]
    1d2e:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
    1d30:	689a      	ldr	r2, [r3, #8]
    1d32:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious         = pxNewListItem;
    1d34:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = (void *)pxList;
    1d36:	6108      	str	r0, [r1, #16]

	(pxList->uxNumberOfItems)++;
    1d38:	6803      	ldr	r3, [r0, #0]
    1d3a:	3301      	adds	r3, #1
    1d3c:	6003      	str	r3, [r0, #0]
}
    1d3e:	4770      	bx	lr

00001d40 <uxListRemove>:

UBaseType_t uxListRemove(ListItem_t *const pxItemToRemove)
{
	/* The list item knows which list it is in.  Obtain the list from the list
	item. */
	List_t *const pxList = (List_t *)pxItemToRemove->pvContainer;
    1d40:	6903      	ldr	r3, [r0, #16]

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
    1d42:	6842      	ldr	r2, [r0, #4]
    1d44:	6881      	ldr	r1, [r0, #8]
    1d46:	6091      	str	r1, [r2, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
    1d48:	6882      	ldr	r2, [r0, #8]
    1d4a:	6841      	ldr	r1, [r0, #4]
    1d4c:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if (pxList->pxIndex == pxItemToRemove) {
    1d4e:	685a      	ldr	r2, [r3, #4]
    1d50:	4290      	cmp	r0, r2
    1d52:	d006      	beq.n	1d62 <uxListRemove+0x22>
		pxList->pxIndex = pxItemToRemove->pxPrevious;
	} else {
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pvContainer = NULL;
    1d54:	2200      	movs	r2, #0
    1d56:	6102      	str	r2, [r0, #16]
	(pxList->uxNumberOfItems)--;
    1d58:	681a      	ldr	r2, [r3, #0]
    1d5a:	3a01      	subs	r2, #1
    1d5c:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
    1d5e:	6818      	ldr	r0, [r3, #0]
}
    1d60:	4770      	bx	lr
		pxList->pxIndex = pxItemToRemove->pxPrevious;
    1d62:	6882      	ldr	r2, [r0, #8]
    1d64:	605a      	str	r2, [r3, #4]
    1d66:	e7f5      	b.n	1d54 <uxListRemove+0x14>

00001d68 <SVCall_Handler>:

void vPortSVCHandler(void)
{
	/* This function is no longer used, but retained for backward
	compatibility. */
}
    1d68:	4770      	bx	lr
	...

00001d6c <vPortYield>:
/*-----------------------------------------------------------*/

void vPortYield(void)
{
	/* Set a PendSV to request a context switch. */
	*(portNVIC_INT_CTRL) = portNVIC_PENDSVSET;
    1d6c:	2280      	movs	r2, #128	; 0x80
    1d6e:	0552      	lsls	r2, r2, #21
    1d70:	4b03      	ldr	r3, [pc, #12]	; (1d80 <vPortYield+0x14>)
    1d72:	601a      	str	r2, [r3, #0]

	/* Barriers are normally not required but do ensure the code is completely
	within the specified behaviour for the architecture. */
	__asm volatile("dsb" ::: "memory");
    1d74:	f3bf 8f4f 	dsb	sy
	__asm volatile("isb");
    1d78:	f3bf 8f6f 	isb	sy
}
    1d7c:	4770      	bx	lr
    1d7e:	46c0      	nop			; (mov r8, r8)
    1d80:	e000ed04 	.word	0xe000ed04

00001d84 <vPortEnterCritical>:
/*-----------------------------------------------------------*/

void vPortEnterCritical(void)
{
	portDISABLE_INTERRUPTS();
    1d84:	b672      	cpsid	i
	uxCriticalNesting++;
    1d86:	4a04      	ldr	r2, [pc, #16]	; (1d98 <vPortEnterCritical+0x14>)
    1d88:	6813      	ldr	r3, [r2, #0]
    1d8a:	3301      	adds	r3, #1
    1d8c:	6013      	str	r3, [r2, #0]
	__asm volatile("dsb" ::: "memory");
    1d8e:	f3bf 8f4f 	dsb	sy
	__asm volatile("isb");
    1d92:	f3bf 8f6f 	isb	sy
}
    1d96:	4770      	bx	lr
    1d98:	20000104 	.word	0x20000104

00001d9c <vPortExitCritical>:
/*-----------------------------------------------------------*/

void vPortExitCritical(void)
{
	configASSERT(uxCriticalNesting);
    1d9c:	4b06      	ldr	r3, [pc, #24]	; (1db8 <vPortExitCritical+0x1c>)
    1d9e:	681b      	ldr	r3, [r3, #0]
    1da0:	2b00      	cmp	r3, #0
    1da2:	d101      	bne.n	1da8 <vPortExitCritical+0xc>
    1da4:	b672      	cpsid	i
    1da6:	e7fe      	b.n	1da6 <vPortExitCritical+0xa>
	uxCriticalNesting--;
    1da8:	3b01      	subs	r3, #1
    1daa:	4a03      	ldr	r2, [pc, #12]	; (1db8 <vPortExitCritical+0x1c>)
    1dac:	6013      	str	r3, [r2, #0]
	if (uxCriticalNesting == 0) {
    1dae:	2b00      	cmp	r3, #0
    1db0:	d100      	bne.n	1db4 <vPortExitCritical+0x18>
		portENABLE_INTERRUPTS();
    1db2:	b662      	cpsie	i
	}
}
    1db4:	4770      	bx	lr
    1db6:	46c0      	nop			; (mov r8, r8)
    1db8:	20000104 	.word	0x20000104

00001dbc <ulSetInterruptMaskFromISR>:
/*-----------------------------------------------------------*/

uint32_t ulSetInterruptMaskFromISR(void)
{
	__asm volatile(" mrs r0, PRIMASK	\n"
    1dbc:	f3ef 8010 	mrs	r0, PRIMASK
    1dc0:	b672      	cpsid	i
    1dc2:	4770      	bx	lr

00001dc4 <vClearInterruptMaskFromISR>:
}
/*-----------------------------------------------------------*/

void vClearInterruptMaskFromISR(__attribute__((unused)) uint32_t ulMask)
{
	__asm volatile(" msr PRIMASK, r0	\n"
    1dc4:	f380 8810 	msr	PRIMASK, r0
    1dc8:	4770      	bx	lr
    1dca:	0000      	movs	r0, r0
    1dcc:	0000      	movs	r0, r0
	...

00001dd0 <PendSV_Handler>:

void xPortPendSVHandler(void)
{
	/* This is a naked function. */

	__asm volatile(
    1dd0:	f3ef 8009 	mrs	r0, PSP
    1dd4:	4b0e      	ldr	r3, [pc, #56]	; (1e10 <pxCurrentTCBConst>)
    1dd6:	681a      	ldr	r2, [r3, #0]
    1dd8:	3820      	subs	r0, #32
    1dda:	6010      	str	r0, [r2, #0]
    1ddc:	c0f0      	stmia	r0!, {r4, r5, r6, r7}
    1dde:	4644      	mov	r4, r8
    1de0:	464d      	mov	r5, r9
    1de2:	4656      	mov	r6, sl
    1de4:	465f      	mov	r7, fp
    1de6:	c0f0      	stmia	r0!, {r4, r5, r6, r7}
    1de8:	b508      	push	{r3, lr}
    1dea:	b672      	cpsid	i
    1dec:	f000 f93e 	bl	206c <vTaskSwitchContext>
    1df0:	b662      	cpsie	i
    1df2:	bc0c      	pop	{r2, r3}
    1df4:	6811      	ldr	r1, [r2, #0]
    1df6:	6808      	ldr	r0, [r1, #0]
    1df8:	3010      	adds	r0, #16
    1dfa:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
    1dfc:	46a0      	mov	r8, r4
    1dfe:	46a9      	mov	r9, r5
    1e00:	46b2      	mov	sl, r6
    1e02:	46bb      	mov	fp, r7
    1e04:	f380 8809 	msr	PSP, r0
    1e08:	3820      	subs	r0, #32
    1e0a:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
    1e0c:	4718      	bx	r3
    1e0e:	46c0      	nop			; (mov r8, r8)

00001e10 <pxCurrentTCBConst>:
    1e10:	200002e8 	.word	0x200002e8

00001e14 <SysTick_Handler>:
	    "pxCurrentTCBConst: .word pxCurrentTCB	  ");
}
/*-----------------------------------------------------------*/

void xPortSysTickHandler(void)
{
    1e14:	b510      	push	{r4, lr}
	uint32_t ulPreviousMask;

	ulPreviousMask = portSET_INTERRUPT_MASK_FROM_ISR();
    1e16:	4b07      	ldr	r3, [pc, #28]	; (1e34 <SysTick_Handler+0x20>)
    1e18:	4798      	blx	r3
    1e1a:	0004      	movs	r4, r0
	{
		/* Increment the RTOS tick. */
		if (xTaskIncrementTick() != pdFALSE) {
    1e1c:	4b06      	ldr	r3, [pc, #24]	; (1e38 <SysTick_Handler+0x24>)
    1e1e:	4798      	blx	r3
    1e20:	2800      	cmp	r0, #0
    1e22:	d003      	beq.n	1e2c <SysTick_Handler+0x18>
			/* Pend a context switch. */
			*(portNVIC_INT_CTRL) = portNVIC_PENDSVSET;
    1e24:	2280      	movs	r2, #128	; 0x80
    1e26:	0552      	lsls	r2, r2, #21
    1e28:	4b04      	ldr	r3, [pc, #16]	; (1e3c <SysTick_Handler+0x28>)
    1e2a:	601a      	str	r2, [r3, #0]
		}
	}
	portCLEAR_INTERRUPT_MASK_FROM_ISR(ulPreviousMask);
    1e2c:	0020      	movs	r0, r4
    1e2e:	4b04      	ldr	r3, [pc, #16]	; (1e40 <SysTick_Handler+0x2c>)
    1e30:	4798      	blx	r3
}
    1e32:	bd10      	pop	{r4, pc}
    1e34:	00001dbd 	.word	0x00001dbd
    1e38:	00001e75 	.word	0x00001e75
    1e3c:	e000ed04 	.word	0xe000ed04
    1e40:	00001dc5 	.word	0x00001dc5

00001e44 <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime(void)
{
	TCB_t *pxTCB;

	if (listLIST_IS_EMPTY(pxDelayedTaskList) != pdFALSE) {
    1e44:	4b0a      	ldr	r3, [pc, #40]	; (1e70 <prvResetNextTaskUnblockTime+0x2c>)
    1e46:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1e48:	681b      	ldr	r3, [r3, #0]
    1e4a:	2b00      	cmp	r3, #0
    1e4c:	d109      	bne.n	1e62 <prvResetNextTaskUnblockTime+0x1e>
    1e4e:	3301      	adds	r3, #1
    1e50:	2b00      	cmp	r3, #0
    1e52:	d108      	bne.n	1e66 <prvResetNextTaskUnblockTime+0x22>
	} else {
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		(pxTCB)              = (TCB_t *)listGET_OWNER_OF_HEAD_ENTRY(pxDelayedTaskList);
    1e54:	4b06      	ldr	r3, [pc, #24]	; (1e70 <prvResetNextTaskUnblockTime+0x2c>)
    1e56:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    1e58:	68d2      	ldr	r2, [r2, #12]
    1e5a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE(&((pxTCB)->xStateListItem));
    1e5c:	6852      	ldr	r2, [r2, #4]
    1e5e:	62da      	str	r2, [r3, #44]	; 0x2c
	}
}
    1e60:	4770      	bx	lr
	if (listLIST_IS_EMPTY(pxDelayedTaskList) != pdFALSE) {
    1e62:	2300      	movs	r3, #0
    1e64:	e7f4      	b.n	1e50 <prvResetNextTaskUnblockTime+0xc>
		xNextTaskUnblockTime = portMAX_DELAY;
    1e66:	2201      	movs	r2, #1
    1e68:	4252      	negs	r2, r2
    1e6a:	4b01      	ldr	r3, [pc, #4]	; (1e70 <prvResetNextTaskUnblockTime+0x2c>)
    1e6c:	62da      	str	r2, [r3, #44]	; 0x2c
    1e6e:	e7f7      	b.n	1e60 <prvResetNextTaskUnblockTime+0x1c>
    1e70:	20000224 	.word	0x20000224

00001e74 <xTaskIncrementTick>:
{
    1e74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if (uxSchedulerSuspended == (UBaseType_t)pdFALSE) {
    1e76:	4b3c      	ldr	r3, [pc, #240]	; (1f68 <xTaskIncrementTick+0xf4>)
    1e78:	6d9b      	ldr	r3, [r3, #88]	; 0x58
    1e7a:	2b00      	cmp	r3, #0
    1e7c:	d167      	bne.n	1f4e <xTaskIncrementTick+0xda>
		const TickType_t xConstTickCount = xTickCount + (TickType_t)1;
    1e7e:	4b3a      	ldr	r3, [pc, #232]	; (1f68 <xTaskIncrementTick+0xf4>)
    1e80:	6d5d      	ldr	r5, [r3, #84]	; 0x54
    1e82:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
    1e84:	655d      	str	r5, [r3, #84]	; 0x54
		if (xConstTickCount
    1e86:	2d00      	cmp	r5, #0
    1e88:	d111      	bne.n	1eae <xTaskIncrementTick+0x3a>
			taskSWITCH_DELAYED_LISTS();
    1e8a:	4b38      	ldr	r3, [pc, #224]	; (1f6c <xTaskIncrementTick+0xf8>)
    1e8c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1e8e:	681b      	ldr	r3, [r3, #0]
    1e90:	2b00      	cmp	r3, #0
    1e92:	d001      	beq.n	1e98 <xTaskIncrementTick+0x24>
    1e94:	b672      	cpsid	i
    1e96:	e7fe      	b.n	1e96 <xTaskIncrementTick+0x22>
    1e98:	4a34      	ldr	r2, [pc, #208]	; (1f6c <xTaskIncrementTick+0xf8>)
    1e9a:	6a91      	ldr	r1, [r2, #40]	; 0x28
    1e9c:	4b32      	ldr	r3, [pc, #200]	; (1f68 <xTaskIncrementTick+0xf4>)
    1e9e:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
    1ea0:	6290      	str	r0, [r2, #40]	; 0x28
    1ea2:	63d9      	str	r1, [r3, #60]	; 0x3c
    1ea4:	6e1a      	ldr	r2, [r3, #96]	; 0x60
    1ea6:	3201      	adds	r2, #1
    1ea8:	661a      	str	r2, [r3, #96]	; 0x60
    1eaa:	4b31      	ldr	r3, [pc, #196]	; (1f70 <xTaskIncrementTick+0xfc>)
    1eac:	4798      	blx	r3
		if (xConstTickCount >= xNextTaskUnblockTime) {
    1eae:	4b2f      	ldr	r3, [pc, #188]	; (1f6c <xTaskIncrementTick+0xf8>)
    1eb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    1eb2:	429d      	cmp	r5, r3
    1eb4:	d23f      	bcs.n	1f36 <xTaskIncrementTick+0xc2>
	BaseType_t xSwitchRequired = pdFALSE;
    1eb6:	2400      	movs	r4, #0
			if (listCURRENT_LIST_LENGTH(&(pxReadyTasksLists[pxCurrentTCB->uxPriority])) > (UBaseType_t)1) {
    1eb8:	4b2b      	ldr	r3, [pc, #172]	; (1f68 <xTaskIncrementTick+0xf4>)
    1eba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    1ebc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    1ebe:	0093      	lsls	r3, r2, #2
    1ec0:	189b      	adds	r3, r3, r2
    1ec2:	009a      	lsls	r2, r3, #2
    1ec4:	4b29      	ldr	r3, [pc, #164]	; (1f6c <xTaskIncrementTick+0xf8>)
    1ec6:	189b      	adds	r3, r3, r2
    1ec8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    1eca:	2b01      	cmp	r3, #1
    1ecc:	d944      	bls.n	1f58 <xTaskIncrementTick+0xe4>
				xSwitchRequired = pdTRUE;
    1ece:	2401      	movs	r4, #1
    1ed0:	e042      	b.n	1f58 <xTaskIncrementTick+0xe4>
							xSwitchRequired = pdTRUE;
    1ed2:	2401      	movs	r4, #1
				if (listLIST_IS_EMPTY(pxDelayedTaskList) != pdFALSE) {
    1ed4:	4b25      	ldr	r3, [pc, #148]	; (1f6c <xTaskIncrementTick+0xf8>)
    1ed6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1ed8:	681b      	ldr	r3, [r3, #0]
    1eda:	2b00      	cmp	r3, #0
    1edc:	d02d      	beq.n	1f3a <xTaskIncrementTick+0xc6>
    1ede:	2300      	movs	r3, #0
    1ee0:	2b00      	cmp	r3, #0
    1ee2:	d12c      	bne.n	1f3e <xTaskIncrementTick+0xca>
					pxTCB      = (TCB_t *)listGET_OWNER_OF_HEAD_ENTRY(pxDelayedTaskList);
    1ee4:	4b21      	ldr	r3, [pc, #132]	; (1f6c <xTaskIncrementTick+0xf8>)
    1ee6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1ee8:	68db      	ldr	r3, [r3, #12]
    1eea:	68de      	ldr	r6, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE(&(pxTCB->xStateListItem));
    1eec:	6873      	ldr	r3, [r6, #4]
					if (xConstTickCount < xItemValue) {
    1eee:	429d      	cmp	r5, r3
    1ef0:	d32a      	bcc.n	1f48 <xTaskIncrementTick+0xd4>
					(void)uxListRemove(&(pxTCB->xStateListItem));
    1ef2:	1d37      	adds	r7, r6, #4
    1ef4:	0038      	movs	r0, r7
    1ef6:	4b1f      	ldr	r3, [pc, #124]	; (1f74 <xTaskIncrementTick+0x100>)
    1ef8:	4798      	blx	r3
					if (listLIST_ITEM_CONTAINER(&(pxTCB->xEventListItem)) != NULL) {
    1efa:	6ab3      	ldr	r3, [r6, #40]	; 0x28
    1efc:	2b00      	cmp	r3, #0
    1efe:	d003      	beq.n	1f08 <xTaskIncrementTick+0x94>
						(void)uxListRemove(&(pxTCB->xEventListItem));
    1f00:	0030      	movs	r0, r6
    1f02:	3018      	adds	r0, #24
    1f04:	4b1b      	ldr	r3, [pc, #108]	; (1f74 <xTaskIncrementTick+0x100>)
    1f06:	4798      	blx	r3
					prvAddTaskToReadyList(pxTCB);
    1f08:	6af2      	ldr	r2, [r6, #44]	; 0x2c
    1f0a:	4b17      	ldr	r3, [pc, #92]	; (1f68 <xTaskIncrementTick+0xf4>)
    1f0c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
    1f0e:	429a      	cmp	r2, r3
    1f10:	d901      	bls.n	1f16 <xTaskIncrementTick+0xa2>
    1f12:	4b15      	ldr	r3, [pc, #84]	; (1f68 <xTaskIncrementTick+0xf4>)
    1f14:	651a      	str	r2, [r3, #80]	; 0x50
    1f16:	0093      	lsls	r3, r2, #2
    1f18:	189b      	adds	r3, r3, r2
    1f1a:	009a      	lsls	r2, r3, #2
    1f1c:	4813      	ldr	r0, [pc, #76]	; (1f6c <xTaskIncrementTick+0xf8>)
    1f1e:	3030      	adds	r0, #48	; 0x30
    1f20:	1880      	adds	r0, r0, r2
    1f22:	0039      	movs	r1, r7
    1f24:	4b14      	ldr	r3, [pc, #80]	; (1f78 <xTaskIncrementTick+0x104>)
    1f26:	4798      	blx	r3
						if (pxTCB->uxPriority >= pxCurrentTCB->uxPriority) {
    1f28:	6af2      	ldr	r2, [r6, #44]	; 0x2c
    1f2a:	4b0f      	ldr	r3, [pc, #60]	; (1f68 <xTaskIncrementTick+0xf4>)
    1f2c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    1f2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    1f30:	429a      	cmp	r2, r3
    1f32:	d2ce      	bcs.n	1ed2 <xTaskIncrementTick+0x5e>
    1f34:	e7ce      	b.n	1ed4 <xTaskIncrementTick+0x60>
    1f36:	2400      	movs	r4, #0
    1f38:	e7cc      	b.n	1ed4 <xTaskIncrementTick+0x60>
				if (listLIST_IS_EMPTY(pxDelayedTaskList) != pdFALSE) {
    1f3a:	3301      	adds	r3, #1
    1f3c:	e7d0      	b.n	1ee0 <xTaskIncrementTick+0x6c>
					    = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    1f3e:	2201      	movs	r2, #1
    1f40:	4252      	negs	r2, r2
    1f42:	4b0a      	ldr	r3, [pc, #40]	; (1f6c <xTaskIncrementTick+0xf8>)
    1f44:	62da      	str	r2, [r3, #44]	; 0x2c
					break;
    1f46:	e7b7      	b.n	1eb8 <xTaskIncrementTick+0x44>
						xNextTaskUnblockTime = xItemValue;
    1f48:	4a08      	ldr	r2, [pc, #32]	; (1f6c <xTaskIncrementTick+0xf8>)
    1f4a:	62d3      	str	r3, [r2, #44]	; 0x2c
						break;
    1f4c:	e7b4      	b.n	1eb8 <xTaskIncrementTick+0x44>
		++uxPendedTicks;
    1f4e:	4a06      	ldr	r2, [pc, #24]	; (1f68 <xTaskIncrementTick+0xf4>)
    1f50:	6e53      	ldr	r3, [r2, #100]	; 0x64
    1f52:	3301      	adds	r3, #1
    1f54:	6653      	str	r3, [r2, #100]	; 0x64
	BaseType_t xSwitchRequired = pdFALSE;
    1f56:	2400      	movs	r4, #0
		if (xYieldPending != pdFALSE) {
    1f58:	4b03      	ldr	r3, [pc, #12]	; (1f68 <xTaskIncrementTick+0xf4>)
    1f5a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
    1f5c:	2b00      	cmp	r3, #0
    1f5e:	d000      	beq.n	1f62 <xTaskIncrementTick+0xee>
			xSwitchRequired = pdTRUE;
    1f60:	2401      	movs	r4, #1
}
    1f62:	0020      	movs	r0, r4
    1f64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1f66:	46c0      	nop			; (mov r8, r8)
    1f68:	200002a4 	.word	0x200002a4
    1f6c:	20000224 	.word	0x20000224
    1f70:	00001e45 	.word	0x00001e45
    1f74:	00001d41 	.word	0x00001d41
    1f78:	00001d29 	.word	0x00001d29

00001f7c <xTaskResumeAll>:
{
    1f7c:	b570      	push	{r4, r5, r6, lr}
	configASSERT(uxSchedulerSuspended);
    1f7e:	4b32      	ldr	r3, [pc, #200]	; (2048 <STACK_SIZE+0x48>)
    1f80:	6d9b      	ldr	r3, [r3, #88]	; 0x58
    1f82:	2b00      	cmp	r3, #0
    1f84:	d101      	bne.n	1f8a <xTaskResumeAll+0xe>
    1f86:	b672      	cpsid	i
    1f88:	e7fe      	b.n	1f88 <xTaskResumeAll+0xc>
	taskENTER_CRITICAL();
    1f8a:	4b30      	ldr	r3, [pc, #192]	; (204c <STACK_SIZE+0x4c>)
    1f8c:	4798      	blx	r3
		--uxSchedulerSuspended;
    1f8e:	4b2e      	ldr	r3, [pc, #184]	; (2048 <STACK_SIZE+0x48>)
    1f90:	6d9a      	ldr	r2, [r3, #88]	; 0x58
    1f92:	3a01      	subs	r2, #1
    1f94:	659a      	str	r2, [r3, #88]	; 0x58
		if (uxSchedulerSuspended == (UBaseType_t)pdFALSE) {
    1f96:	6d9b      	ldr	r3, [r3, #88]	; 0x58
    1f98:	2b00      	cmp	r3, #0
    1f9a:	d150      	bne.n	203e <STACK_SIZE+0x3e>
			if (uxCurrentNumberOfTasks > (UBaseType_t)0U) {
    1f9c:	4b2a      	ldr	r3, [pc, #168]	; (2048 <STACK_SIZE+0x48>)
    1f9e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    1fa0:	2b00      	cmp	r3, #0
    1fa2:	d104      	bne.n	1fae <xTaskResumeAll+0x32>
	BaseType_t xAlreadyYielded = pdFALSE;
    1fa4:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
    1fa6:	4b2a      	ldr	r3, [pc, #168]	; (2050 <STACK_SIZE+0x50>)
    1fa8:	4798      	blx	r3
}
    1faa:	0020      	movs	r0, r4
    1fac:	bd70      	pop	{r4, r5, r6, pc}
    1fae:	2400      	movs	r4, #0
				while (listLIST_IS_EMPTY(&xPendingReadyList) == pdFALSE) {
    1fb0:	4b28      	ldr	r3, [pc, #160]	; (2054 <STACK_SIZE+0x54>)
    1fb2:	695b      	ldr	r3, [r3, #20]
    1fb4:	2b00      	cmp	r3, #0
    1fb6:	d023      	beq.n	2000 <STACK_SIZE>
					pxTCB = (TCB_t *)listGET_OWNER_OF_HEAD_ENTRY((&xPendingReadyList));
    1fb8:	4b26      	ldr	r3, [pc, #152]	; (2054 <STACK_SIZE+0x54>)
    1fba:	6a1b      	ldr	r3, [r3, #32]
    1fbc:	68dc      	ldr	r4, [r3, #12]
					(void)uxListRemove(&(pxTCB->xEventListItem));
    1fbe:	0020      	movs	r0, r4
    1fc0:	3018      	adds	r0, #24
    1fc2:	4e25      	ldr	r6, [pc, #148]	; (2058 <STACK_SIZE+0x58>)
    1fc4:	47b0      	blx	r6
					(void)uxListRemove(&(pxTCB->xStateListItem));
    1fc6:	1d25      	adds	r5, r4, #4
    1fc8:	0028      	movs	r0, r5
    1fca:	47b0      	blx	r6
					prvAddTaskToReadyList(pxTCB);
    1fcc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    1fce:	4b1e      	ldr	r3, [pc, #120]	; (2048 <STACK_SIZE+0x48>)
    1fd0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
    1fd2:	429a      	cmp	r2, r3
    1fd4:	d901      	bls.n	1fda <xTaskResumeAll+0x5e>
    1fd6:	4b1c      	ldr	r3, [pc, #112]	; (2048 <STACK_SIZE+0x48>)
    1fd8:	651a      	str	r2, [r3, #80]	; 0x50
    1fda:	0093      	lsls	r3, r2, #2
    1fdc:	189b      	adds	r3, r3, r2
    1fde:	009a      	lsls	r2, r3, #2
    1fe0:	481c      	ldr	r0, [pc, #112]	; (2054 <STACK_SIZE+0x54>)
    1fe2:	3030      	adds	r0, #48	; 0x30
    1fe4:	1880      	adds	r0, r0, r2
    1fe6:	0029      	movs	r1, r5
    1fe8:	4b1c      	ldr	r3, [pc, #112]	; (205c <STACK_SIZE+0x5c>)
    1fea:	4798      	blx	r3
					if (pxTCB->uxPriority >= pxCurrentTCB->uxPriority) {
    1fec:	4b16      	ldr	r3, [pc, #88]	; (2048 <STACK_SIZE+0x48>)
    1fee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    1ff0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    1ff2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    1ff4:	429a      	cmp	r2, r3
    1ff6:	d3db      	bcc.n	1fb0 <xTaskResumeAll+0x34>
						xYieldPending = pdTRUE;
    1ff8:	2201      	movs	r2, #1
    1ffa:	4b13      	ldr	r3, [pc, #76]	; (2048 <STACK_SIZE+0x48>)
    1ffc:	669a      	str	r2, [r3, #104]	; 0x68
    1ffe:	e7d7      	b.n	1fb0 <xTaskResumeAll+0x34>
				if (pxTCB != NULL) {
    2000:	2c00      	cmp	r4, #0
    2002:	d001      	beq.n	2008 <STACK_SIZE+0x8>
					prvResetNextTaskUnblockTime();
    2004:	4b16      	ldr	r3, [pc, #88]	; (2060 <STACK_SIZE+0x60>)
    2006:	4798      	blx	r3
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
    2008:	4b0f      	ldr	r3, [pc, #60]	; (2048 <STACK_SIZE+0x48>)
    200a:	6e5c      	ldr	r4, [r3, #100]	; 0x64
					if (uxPendedCounts > (UBaseType_t)0U) {
    200c:	2c00      	cmp	r4, #0
    200e:	d10a      	bne.n	2026 <STACK_SIZE+0x26>
				if (xYieldPending != pdFALSE) {
    2010:	4b0d      	ldr	r3, [pc, #52]	; (2048 <STACK_SIZE+0x48>)
    2012:	6e9b      	ldr	r3, [r3, #104]	; 0x68
    2014:	2b00      	cmp	r3, #0
    2016:	d014      	beq.n	2042 <STACK_SIZE+0x42>
					taskYIELD_IF_USING_PREEMPTION();
    2018:	4b12      	ldr	r3, [pc, #72]	; (2064 <STACK_SIZE+0x64>)
    201a:	4798      	blx	r3
						xAlreadyYielded = pdTRUE;
    201c:	2401      	movs	r4, #1
    201e:	e7c2      	b.n	1fa6 <xTaskResumeAll+0x2a>
							--uxPendedCounts;
    2020:	3c01      	subs	r4, #1
						} while (uxPendedCounts > (UBaseType_t)0U);
    2022:	2c00      	cmp	r4, #0
    2024:	d007      	beq.n	2036 <STACK_SIZE+0x36>
							if (xTaskIncrementTick() != pdFALSE) {
    2026:	4b10      	ldr	r3, [pc, #64]	; (2068 <STACK_SIZE+0x68>)
    2028:	4798      	blx	r3
    202a:	2800      	cmp	r0, #0
    202c:	d0f8      	beq.n	2020 <STACK_SIZE+0x20>
								xYieldPending = pdTRUE;
    202e:	2201      	movs	r2, #1
    2030:	4b05      	ldr	r3, [pc, #20]	; (2048 <STACK_SIZE+0x48>)
    2032:	669a      	str	r2, [r3, #104]	; 0x68
    2034:	e7f4      	b.n	2020 <STACK_SIZE+0x20>
						uxPendedTicks = 0;
    2036:	2200      	movs	r2, #0
    2038:	4b03      	ldr	r3, [pc, #12]	; (2048 <STACK_SIZE+0x48>)
    203a:	665a      	str	r2, [r3, #100]	; 0x64
    203c:	e7e8      	b.n	2010 <STACK_SIZE+0x10>
	BaseType_t xAlreadyYielded = pdFALSE;
    203e:	2400      	movs	r4, #0
    2040:	e7b1      	b.n	1fa6 <xTaskResumeAll+0x2a>
    2042:	2400      	movs	r4, #0
    2044:	e7af      	b.n	1fa6 <xTaskResumeAll+0x2a>
    2046:	46c0      	nop			; (mov r8, r8)
    2048:	200002a4 	.word	0x200002a4
    204c:	00001d85 	.word	0x00001d85
    2050:	00001d9d 	.word	0x00001d9d
    2054:	20000224 	.word	0x20000224
    2058:	00001d41 	.word	0x00001d41
    205c:	00001d29 	.word	0x00001d29
    2060:	00001e45 	.word	0x00001e45
    2064:	00001d6d 	.word	0x00001d6d
    2068:	00001e75 	.word	0x00001e75

0000206c <vTaskSwitchContext>:
{
    206c:	b510      	push	{r4, lr}
	if (uxSchedulerSuspended != (UBaseType_t)pdFALSE) {
    206e:	4b1d      	ldr	r3, [pc, #116]	; (20e4 <vTaskSwitchContext+0x78>)
    2070:	6d9b      	ldr	r3, [r3, #88]	; 0x58
    2072:	2b00      	cmp	r3, #0
    2074:	d10f      	bne.n	2096 <vTaskSwitchContext+0x2a>
		xYieldPending = pdFALSE;
    2076:	4b1b      	ldr	r3, [pc, #108]	; (20e4 <vTaskSwitchContext+0x78>)
    2078:	2200      	movs	r2, #0
    207a:	669a      	str	r2, [r3, #104]	; 0x68
		taskSELECT_HIGHEST_PRIORITY_TASK();
    207c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
    207e:	009a      	lsls	r2, r3, #2
    2080:	18d2      	adds	r2, r2, r3
    2082:	0091      	lsls	r1, r2, #2
    2084:	4a18      	ldr	r2, [pc, #96]	; (20e8 <vTaskSwitchContext+0x7c>)
    2086:	1852      	adds	r2, r2, r1
    2088:	6b12      	ldr	r2, [r2, #48]	; 0x30
    208a:	2a00      	cmp	r2, #0
    208c:	d109      	bne.n	20a2 <vTaskSwitchContext+0x36>
    208e:	2b00      	cmp	r3, #0
    2090:	d005      	beq.n	209e <vTaskSwitchContext+0x32>
    2092:	3b01      	subs	r3, #1
    2094:	e7f3      	b.n	207e <vTaskSwitchContext+0x12>
		xYieldPending = pdTRUE;
    2096:	2201      	movs	r2, #1
    2098:	4b12      	ldr	r3, [pc, #72]	; (20e4 <vTaskSwitchContext+0x78>)
    209a:	669a      	str	r2, [r3, #104]	; 0x68
}
    209c:	bd10      	pop	{r4, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK();
    209e:	b672      	cpsid	i
    20a0:	e7fe      	b.n	20a0 <vTaskSwitchContext+0x34>
    20a2:	4a11      	ldr	r2, [pc, #68]	; (20e8 <vTaskSwitchContext+0x7c>)
    20a4:	0099      	lsls	r1, r3, #2
    20a6:	18cc      	adds	r4, r1, r3
    20a8:	00a0      	lsls	r0, r4, #2
    20aa:	1810      	adds	r0, r2, r0
    20ac:	6b44      	ldr	r4, [r0, #52]	; 0x34
    20ae:	6864      	ldr	r4, [r4, #4]
    20b0:	6344      	str	r4, [r0, #52]	; 0x34
    20b2:	3230      	adds	r2, #48	; 0x30
    20b4:	18c9      	adds	r1, r1, r3
    20b6:	0088      	lsls	r0, r1, #2
    20b8:	3008      	adds	r0, #8
    20ba:	1812      	adds	r2, r2, r0
    20bc:	4294      	cmp	r4, r2
    20be:	d00a      	beq.n	20d6 <vTaskSwitchContext+0x6a>
    20c0:	009a      	lsls	r2, r3, #2
    20c2:	18d2      	adds	r2, r2, r3
    20c4:	0091      	lsls	r1, r2, #2
    20c6:	4a08      	ldr	r2, [pc, #32]	; (20e8 <vTaskSwitchContext+0x7c>)
    20c8:	1852      	adds	r2, r2, r1
    20ca:	6b52      	ldr	r2, [r2, #52]	; 0x34
    20cc:	68d1      	ldr	r1, [r2, #12]
    20ce:	4a05      	ldr	r2, [pc, #20]	; (20e4 <vTaskSwitchContext+0x78>)
    20d0:	6451      	str	r1, [r2, #68]	; 0x44
    20d2:	6513      	str	r3, [r2, #80]	; 0x50
}
    20d4:	e7e2      	b.n	209c <vTaskSwitchContext+0x30>
		taskSELECT_HIGHEST_PRIORITY_TASK();
    20d6:	6860      	ldr	r0, [r4, #4]
    20d8:	0089      	lsls	r1, r1, #2
    20da:	4a03      	ldr	r2, [pc, #12]	; (20e8 <vTaskSwitchContext+0x7c>)
    20dc:	1852      	adds	r2, r2, r1
    20de:	6350      	str	r0, [r2, #52]	; 0x34
    20e0:	e7ee      	b.n	20c0 <vTaskSwitchContext+0x54>
    20e2:	46c0      	nop			; (mov r8, r8)
    20e4:	200002a4 	.word	0x200002a4
    20e8:	20000224 	.word	0x20000224

000020ec <__ffssi2>:
    20ec:	b510      	push	{r4, lr}
    20ee:	2300      	movs	r3, #0
    20f0:	2800      	cmp	r0, #0
    20f2:	d002      	beq.n	20fa <__ffssi2+0xe>
    20f4:	f000 f804 	bl	2100 <__ctzsi2>
    20f8:	1c43      	adds	r3, r0, #1
    20fa:	0018      	movs	r0, r3
    20fc:	bd10      	pop	{r4, pc}
    20fe:	46c0      	nop			; (mov r8, r8)

00002100 <__ctzsi2>:
    2100:	4241      	negs	r1, r0
    2102:	4008      	ands	r0, r1
    2104:	211c      	movs	r1, #28
    2106:	2301      	movs	r3, #1
    2108:	041b      	lsls	r3, r3, #16
    210a:	4298      	cmp	r0, r3
    210c:	d301      	bcc.n	2112 <__ctzsi2+0x12>
    210e:	0c00      	lsrs	r0, r0, #16
    2110:	3910      	subs	r1, #16
    2112:	0a1b      	lsrs	r3, r3, #8
    2114:	4298      	cmp	r0, r3
    2116:	d301      	bcc.n	211c <__ctzsi2+0x1c>
    2118:	0a00      	lsrs	r0, r0, #8
    211a:	3908      	subs	r1, #8
    211c:	091b      	lsrs	r3, r3, #4
    211e:	4298      	cmp	r0, r3
    2120:	d301      	bcc.n	2126 <__ctzsi2+0x26>
    2122:	0900      	lsrs	r0, r0, #4
    2124:	3904      	subs	r1, #4
    2126:	a202      	add	r2, pc, #8	; (adr r2, 2130 <__ctzsi2+0x30>)
    2128:	5c10      	ldrb	r0, [r2, r0]
    212a:	1a40      	subs	r0, r0, r1
    212c:	4770      	bx	lr
    212e:	46c0      	nop			; (mov r8, r8)
    2130:	1d1d1c1b 	.word	0x1d1d1c1b
    2134:	1e1e1e1e 	.word	0x1e1e1e1e
    2138:	1f1f1f1f 	.word	0x1f1f1f1f
    213c:	1f1f1f1f 	.word	0x1f1f1f1f

00002140 <__libc_init_array>:
    2140:	b570      	push	{r4, r5, r6, lr}
    2142:	2600      	movs	r6, #0
    2144:	4d0c      	ldr	r5, [pc, #48]	; (2178 <__libc_init_array+0x38>)
    2146:	4c0d      	ldr	r4, [pc, #52]	; (217c <__libc_init_array+0x3c>)
    2148:	1b64      	subs	r4, r4, r5
    214a:	10a4      	asrs	r4, r4, #2
    214c:	42a6      	cmp	r6, r4
    214e:	d109      	bne.n	2164 <__libc_init_array+0x24>
    2150:	2600      	movs	r6, #0
    2152:	f000 f959 	bl	2408 <_init>
    2156:	4d0a      	ldr	r5, [pc, #40]	; (2180 <__libc_init_array+0x40>)
    2158:	4c0a      	ldr	r4, [pc, #40]	; (2184 <__libc_init_array+0x44>)
    215a:	1b64      	subs	r4, r4, r5
    215c:	10a4      	asrs	r4, r4, #2
    215e:	42a6      	cmp	r6, r4
    2160:	d105      	bne.n	216e <__libc_init_array+0x2e>
    2162:	bd70      	pop	{r4, r5, r6, pc}
    2164:	00b3      	lsls	r3, r6, #2
    2166:	58eb      	ldr	r3, [r5, r3]
    2168:	4798      	blx	r3
    216a:	3601      	adds	r6, #1
    216c:	e7ee      	b.n	214c <__libc_init_array+0xc>
    216e:	00b3      	lsls	r3, r6, #2
    2170:	58eb      	ldr	r3, [r5, r3]
    2172:	4798      	blx	r3
    2174:	3601      	adds	r6, #1
    2176:	e7f2      	b.n	215e <__libc_init_array+0x1e>
    2178:	00002414 	.word	0x00002414
    217c:	00002414 	.word	0x00002414
    2180:	00002414 	.word	0x00002414
    2184:	00002418 	.word	0x00002418

00002188 <memcpy>:
    2188:	2300      	movs	r3, #0
    218a:	b510      	push	{r4, lr}
    218c:	429a      	cmp	r2, r3
    218e:	d100      	bne.n	2192 <memcpy+0xa>
    2190:	bd10      	pop	{r4, pc}
    2192:	5ccc      	ldrb	r4, [r1, r3]
    2194:	54c4      	strb	r4, [r0, r3]
    2196:	3301      	adds	r3, #1
    2198:	e7f8      	b.n	218c <memcpy+0x4>

0000219a <memset>:
    219a:	0003      	movs	r3, r0
    219c:	1882      	adds	r2, r0, r2
    219e:	4293      	cmp	r3, r2
    21a0:	d100      	bne.n	21a4 <memset+0xa>
    21a2:	4770      	bx	lr
    21a4:	7019      	strb	r1, [r3, #0]
    21a6:	3301      	adds	r3, #1
    21a8:	e7f9      	b.n	219e <memset+0x4>
    21aa:	0000      	movs	r0, r0
    21ac:	682f2e2e 	.word	0x682f2e2e
    21b0:	732f6c61 	.word	0x732f6c61
    21b4:	682f6372 	.word	0x682f6372
    21b8:	615f6c61 	.word	0x615f6c61
    21bc:	79735f63 	.word	0x79735f63
    21c0:	632e636e 	.word	0x632e636e
    21c4:	00000000 	.word	0x00000000
    21c8:	682f2e2e 	.word	0x682f2e2e
    21cc:	732f6c61 	.word	0x732f6c61
    21d0:	682f6372 	.word	0x682f6372
    21d4:	615f6c61 	.word	0x615f6c61
    21d8:	735f6364 	.word	0x735f6364
    21dc:	2e636e79 	.word	0x2e636e79
    21e0:	00000063 	.word	0x00000063
    21e4:	682f2e2e 	.word	0x682f2e2e
    21e8:	732f6c61 	.word	0x732f6c61
    21ec:	682f6372 	.word	0x682f6372
    21f0:	645f6c61 	.word	0x645f6c61
    21f4:	735f6361 	.word	0x735f6361
    21f8:	2e636e79 	.word	0x2e636e79
    21fc:	00000063 	.word	0x00000063
    2200:	682f2e2e 	.word	0x682f2e2e
    2204:	732f6c61 	.word	0x732f6c61
    2208:	682f6372 	.word	0x682f6372
    220c:	665f6c61 	.word	0x665f6c61
    2210:	6873616c 	.word	0x6873616c
    2214:	0000632e 	.word	0x0000632e
    2218:	682f2e2e 	.word	0x682f2e2e
    221c:	732f6c61 	.word	0x732f6c61
    2220:	682f6372 	.word	0x682f6372
    2224:	695f6c61 	.word	0x695f6c61
    2228:	00632e6f 	.word	0x00632e6f
    222c:	682f2e2e 	.word	0x682f2e2e
    2230:	732f6c61 	.word	0x732f6c61
    2234:	682f6372 	.word	0x682f6372
    2238:	705f6c61 	.word	0x705f6c61
    223c:	632e6d77 	.word	0x632e6d77
    2240:	00000000 	.word	0x00000000
    2244:	682f2e2e 	.word	0x682f2e2e
    2248:	732f6c61 	.word	0x732f6c61
    224c:	682f6372 	.word	0x682f6372
    2250:	735f6c61 	.word	0x735f6c61
    2254:	6d5f6970 	.word	0x6d5f6970
    2258:	6e79735f 	.word	0x6e79735f
    225c:	00632e63 	.word	0x00632e63
    2260:	682f2e2e 	.word	0x682f2e2e
    2264:	732f6c61 	.word	0x732f6c61
    2268:	682f6372 	.word	0x682f6372
    226c:	745f6c61 	.word	0x745f6c61
    2270:	72656d69 	.word	0x72656d69
    2274:	0000632e 	.word	0x0000632e
    2278:	682f2e2e 	.word	0x682f2e2e
    227c:	732f6c61 	.word	0x732f6c61
    2280:	682f6372 	.word	0x682f6372
    2284:	755f6c61 	.word	0x755f6c61
    2288:	74726173 	.word	0x74726173
    228c:	7973615f 	.word	0x7973615f
    2290:	632e636e 	.word	0x632e636e
    2294:	00000000 	.word	0x00000000
    2298:	682f2e2e 	.word	0x682f2e2e
    229c:	752f6c61 	.word	0x752f6c61
    22a0:	736c6974 	.word	0x736c6974
    22a4:	6372732f 	.word	0x6372732f
    22a8:	6974752f 	.word	0x6974752f
    22ac:	6c5f736c 	.word	0x6c5f736c
    22b0:	2e747369 	.word	0x2e747369
    22b4:	00000063 	.word	0x00000063
    22b8:	682f2e2e 	.word	0x682f2e2e
    22bc:	752f6c61 	.word	0x752f6c61
    22c0:	736c6974 	.word	0x736c6974
    22c4:	6372732f 	.word	0x6372732f
    22c8:	6974752f 	.word	0x6974752f
    22cc:	725f736c 	.word	0x725f736c
    22d0:	62676e69 	.word	0x62676e69
    22d4:	65666675 	.word	0x65666675
    22d8:	00632e72 	.word	0x00632e72

000022dc <_cfgs>:
    22dc:	42004400 00000016 00000600 00000600     .D.B............
    22ec:	00000000 682f2e2e 612f6c70 70682f63     ....../hpl/ac/hp
    22fc:	63615f6c 0000632e                       l_ac.c..

00002304 <_adcs>:
    2304:	00000200 00000000 00000000 00000000     ................
	...
    2320:	682f2e2e 612f6c70 682f6364 615f6c70     ../hpl/adc/hpl_a
    2330:	632e6364 00000000 682f2e2e 642f6c70     dc.c....../hpl/d
    2340:	682f6361 645f6c70 632e6361 00000000     ac/hpl_dac.c....

00002350 <_map>:
    2350:	000000ff ffffffff 682f2e2e 652f6c70     ........../hpl/e
    2360:	682f6369 655f6c70 632e6369 00000000     ic/hpl_eic.c....
    2370:	682f2e2e 6e2f6c70 74636d76 682f6c72     ../hpl/nvmctrl/h
    2380:	6e5f6c70 74636d76 632e6c72 00000000     pl_nvmctrl.c....

00002390 <_usarts>:
    2390:	00000003 40310004 00030000 0000d8ad     ......1@........

000023a0 <_i2cms>:
	...

000023b8 <_i2css>:
	...

000023c8 <sercomspi_regs>:
    23c8:	0020000c 00020000 00000000 01000009     .. .............
    23d8:	682f2e2e 732f6c70 6f637265 70682f6d     ../hpl/sercom/hp
    23e8:	65735f6c 6d6f6372 0000632e 682f2e2e     l_sercom.c..../h
    23f8:	742f6c70 70682f63 63745f6c 0000632e     pl/tc/hpl_tc.c..

00002408 <_init>:
    2408:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    240a:	46c0      	nop			; (mov r8, r8)
    240c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    240e:	bc08      	pop	{r3}
    2410:	469e      	mov	lr, r3
    2412:	4770      	bx	lr

00002414 <__init_array_start>:
    2414:	000000cd 	.word	0x000000cd

00002418 <_fini>:
    2418:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    241a:	46c0      	nop			; (mov r8, r8)
    241c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    241e:	bc08      	pop	{r3}
    2420:	469e      	mov	lr, r3
    2422:	4770      	bx	lr

00002424 <__fini_array_start>:
    2424:	000000a5 	.word	0x000000a5
